<?xml version="1.0" encoding="US-ASCII"?>
<boost xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <categories>
    <category name="String">
      <title>String and text processing</title>
    </category>
    <category name="Containers">
      <title>Containers</title>
    </category>
    <category name="Iterators">
      <title>Iterators</title>
    </category>
    <category name="Algorithms">
      <title>Algorithms</title>
    </category>
    <category name="Function-objects">
      <title>Function objects and higher-order programming</title>
    </category>
    <category name="Generic">
      <title>Generic Programming</title>
    </category>
    <category name="Metaprogramming">
      <title>Template  Metaprogramming</title>
    </category>
    <category name="Preprocessor">
      <title>Preprocessor Metaprogramming</title>
    </category>
    <category name="Concurrent">
      <title>Concurrent Programming</title>
    </category>
    <category name="Math">
      <title>Math and numerics</title>
    </category>
    <category name="Correctness">
      <title>Correctness and testing</title>
    </category>
    <category name="Data">
      <title>Data structures</title>
    </category>
    <category name="Domain">
      <title>Domain Specific</title>
    </category>
    <category name="Image-processing">
      <title>Image processing</title>
    </category>
    <category name="IO">
      <title>Input/Output</title>
    </category>
    <category name="Inter-language">
      <title>Inter-language support</title>
    </category>
    <category name="Emulation">
      <title>Language Features Emulation</title>
    </category>
    <category name="Memory">
      <title>Memory</title>
    </category>
    <category name="Parsing">
      <title>Parsing</title>
    </category>
    <category name="Patterns">
      <title>Patterns and Idioms</title>
    </category>
    <category name="Programming">
      <title>Programming Interfaces</title>
    </category>
    <category name="State">
      <title>State Machines</title>
    </category>
    <category name="System">
      <title>System</title>
    </category>
    <category name="Miscellaneous">
      <title>Miscellaneous</title>
    </category>
    <category name="Workarounds">
      <title>Broken compiler workarounds</title>
    </category>
  </categories>
  <library>
    <key>accumulators</key>
    <module>accumulators</module>
    <boost-version>1.36.0</boost-version>
    <name>Accumulators</name>
    <authors>Eric Niebler</authors>
    <maintainers>Eric Niebler &lt;eric -at- boost-consulting.com&gt;</maintainers>
    <description>Framework for incremental calculation, and collection of statistical accumulators.</description>
    <documentation>libs/accumulators/</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>accumulators</key>
    <module>accumulators</module>
    <boost-version>1.36.0</boost-version>
    <update-version>1.37.0</update-version>
    <name>Accumulators</name>
    <authors>Eric Niebler</authors>
    <maintainers>Eric Niebler &lt;eric -at- boostpro.com&gt;</maintainers>
    <description>Framework for incremental calculation, and collection of statistical accumulators.</description>
    <documentation>libs/accumulators/</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>algorithm</key>
    <module>algorithm</module>
    <boost-version>1.50.0</boost-version>
    <name>Algorithm</name>
    <authors>Marshall Clow</authors>
    <maintainers>Marshall Clow &lt;marshall -at- idio.com&gt;</maintainers>
    <description>A collection of useful generic algorithms.</description>
    <documentation>libs/algorithm/</documentation>
    <category>Algorithms</category>
  </library>
  <library>
    <key>algorithm/minmax</key>
    <module>algorithm</module>
    <boost-version>1.32.0</boost-version>
    <name>Min-Max</name>
    <authors>Herv&#233; Br&#246;nnimann</authors>
    <description>Standard library extensions for simultaneous min/max and min/max element computations.</description>
    <documentation>libs/algorithm/minmax/</documentation>
    <category>Algorithms</category>
  </library>
  <library>
    <key>algorithm/minmax</key>
    <module>algorithm</module>
    <boost-version>1.32.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Min-Max</name>
    <authors>Herv&#233; Br&#246;nnimann</authors>
    <maintainers>Herve Bronnimann &lt;hbr -at- poly.edu&gt;</maintainers>
    <description>Standard library extensions for simultaneous min/max and min/max element computations.</description>
    <documentation>libs/algorithm/minmax/</documentation>
    <category>Algorithms</category>
  </library>
  <library>
    <key>algorithm/minmax</key>
    <module>algorithm</module>
    <boost-version>1.32.0</boost-version>
    <update-version>1.58.0</update-version>
    <name>Min-Max</name>
    <authors>Herv&#233; Br&#246;nnimann</authors>
    <maintainers>Marshall Clow &lt;marshall -at- idio.com&gt;</maintainers>
    <description>Standard library extensions for simultaneous min/max and min/max element computations.</description>
    <documentation>libs/algorithm/minmax/</documentation>
    <category>Algorithms</category>
  </library>
  <library>
    <key>algorithm/string</key>
    <module>algorithm</module>
    <boost-version>1.32.0</boost-version>
    <name>String Algo</name>
    <authors>Pavol Droba</authors>
    <description>String algorithms library.</description>
    <documentation>libs/algorithm/string/</documentation>
    <category>Algorithms</category>
    <category>String</category>
  </library>
  <library>
    <key>algorithm/string</key>
    <module>algorithm</module>
    <boost-version>1.32.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>String Algo</name>
    <authors>Pavol Droba</authors>
    <maintainers>Pavol Droba &lt;droba -at- topmail.sk&gt;</maintainers>
    <description>String algorithms library.</description>
    <documentation>libs/algorithm/string/</documentation>
    <category>Algorithms</category>
    <category>String</category>
  </library>
  <library>
    <key>algorithm/string</key>
    <module>algorithm</module>
    <boost-version>1.32.0</boost-version>
    <update-version>1.50.0</update-version>
    <name>String Algo</name>
    <authors>Pavol Droba</authors>
    <maintainers>Marshall Clow &lt;marshall -at- idio.com&gt;</maintainers>
    <description>String algorithms library.</description>
    <documentation>libs/algorithm/string/</documentation>
    <category>Algorithms</category>
    <category>String</category>
  </library>
  <library>
    <key>align</key>
    <module>align</module>
    <update-version>1.56.0 beta1</update-version>
    <name>Align</name>
    <authors>Glen Fernandes</authors>
    <maintainers>Glen Fernandes &lt;glenfe -at- live.com&gt;</maintainers>
    <description>Memory alignment functions, allocators, and adaptors.</description>
    <documentation>libs/align/</documentation>
    <category>Memory</category>
  </library>
  <library>
    <key>align</key>
    <module>align</module>
    <boost-version>1.56.0</boost-version>
    <name>Align</name>
    <authors>Glen Fernandes</authors>
    <maintainers>Glen Fernandes &lt;glenfe -at- live.com&gt;</maintainers>
    <description>Memory alignment functions, allocators, and adaptors.</description>
    <documentation>libs/align/</documentation>
    <category>Memory</category>
  </library>
  <library>
    <key>align</key>
    <module>align</module>
    <boost-version>1.56.0</boost-version>
    <update-version>1.57.0 beta1</update-version>
    <name>Align</name>
    <authors>Glen Fernandes</authors>
    <maintainers>Glen Fernandes &lt;glenjofe -at- gmail.com&gt;</maintainers>
    <description>Memory alignment functions, allocators, and adaptors.</description>
    <documentation>libs/align/</documentation>
    <category>Memory</category>
  </library>
  <library>
    <key>any</key>
    <module>any</module>
    <boost-version>1.23.0</boost-version>
    <name>Any</name>
    <authors>Kevlin Henney</authors>
    <description>Safe, generic container for single values of different value types.</description>
    <documentation>libs/any/</documentation>
    <category>Data</category>
  </library>
  <library>
    <key>any</key>
    <module>any</module>
    <boost-version>1.23.0</boost-version>
    <update-version>1.34.0</update-version>
    <name>Any</name>
    <authors>Kevlin Henney</authors>
    <maintainers>Alexander Nasonov &lt;alexander.nasonov -at- gmail.com&gt;</maintainers>
    <description>Safe, generic container for single values of different value types.</description>
    <documentation>libs/any/</documentation>
    <category>Data</category>
  </library>
  <library>
    <key>any</key>
    <module>any</module>
    <boost-version>1.23.0</boost-version>
    <update-version>1.57.0 beta1</update-version>
    <name>Any</name>
    <authors>Kevlin Henney</authors>
    <maintainers>Antony Polukhin &lt;antoshkka -at- gmail.com&gt;</maintainers>
    <description>Safe, generic container for single values of different value types.</description>
    <documentation>libs/any/</documentation>
    <category>Data</category>
  </library>
  <library>
    <key>array</key>
    <module>array</module>
    <boost-version>1.17.0</boost-version>
    <name>Array</name>
    <authors>Nicolai Josuttis</authors>
    <description>STL compliant container wrapper for arrays of constant size.</description>
    <documentation>libs/array/</documentation>
    <std>tr1</std>
    <category>Containers</category>
  </library>
  <library>
    <key>array</key>
    <module>array</module>
    <boost-version>1.17.0</boost-version>
    <update-version>1.43.0</update-version>
    <name>Array</name>
    <authors>Nicolai Josuttis</authors>
    <maintainers>Marshall Clow &lt;marshall -at- idio.com&gt;</maintainers>
    <description>STL compliant container wrapper for arrays of constant size.</description>
    <documentation>libs/array/</documentation>
    <std>tr1</std>
    <category>Containers</category>
  </library>
  <library>
    <key>asio</key>
    <module>asio</module>
    <boost-version>1.35.0</boost-version>
    <name>Asio</name>
    <authors>Chris Kohlhoff</authors>
    <maintainers>Chris Kohlhoff &lt;chris -at- kohlhoff.com&gt;</maintainers>
    <description>Portable networking, including sockets, timers, hostname resolution and socket iostreams.</description>
    <documentation>libs/asio/</documentation>
    <category>Concurrent</category>
    <category>IO</category>
  </library>
  <library>
    <key>asio</key>
    <module>asio</module>
    <boost-version>1.35.0</boost-version>
    <update-version>1.57.0</update-version>
    <name>Asio</name>
    <authors>Chris Kohlhoff</authors>
    <maintainers>Chris Kohlhoff &lt;chris -at- kohlhoff.com&gt;</maintainers>
    <description>Portable networking and other low-level I/O, including sockets, timers, hostname resolution, socket iostreams, serial ports, file descriptors and Windows HANDLEs.</description>
    <documentation>libs/asio/</documentation>
    <category>Concurrent</category>
    <category>IO</category>
  </library>
  <library>
    <key>assert</key>
    <module>assert</module>
    <boost-version>1.27.0</boost-version>
    <update-version>1.56.0 beta1</update-version>
    <name>Assert</name>
    <authors>Peter Dimov</authors>
    <maintainers>Peter Dimov &lt;pdimov -at- pdimov.com&gt;</maintainers>
    <description>Customizable assert macros.</description>
    <documentation>libs/assert/</documentation>
    <category>Correctness</category>
  </library>
  <library>
    <key>assign</key>
    <module>assign</module>
    <boost-version>1.32.0</boost-version>
    <name>Assign</name>
    <authors>Thorsten Ottosen</authors>
    <description>Filling containers with constant or generated data has never been easier.</description>
    <documentation>libs/assign/</documentation>
    <category>IO</category>
  </library>
  <library>
    <key>assign</key>
    <module>assign</module>
    <boost-version>1.32.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Assign</name>
    <authors>Thorsten Ottosen</authors>
    <maintainers>Thorsten Ottosen &lt;nesotto -at- cs.auc.dk&gt;</maintainers>
    <description>Filling containers with constant or generated data has never been easier.</description>
    <documentation>libs/assign/</documentation>
    <category>IO</category>
  </library>
  <library>
    <key>atomic</key>
    <module>atomic</module>
    <boost-version>1.53.0</boost-version>
    <name>Atomic</name>
    <authors>Helge Bahmann</authors>
    <authors>Tim Blechmann</authors>
    <maintainers>Helge Bahmann &lt;hcb -at- chaoticmind.net&gt;</maintainers>
    <maintainers>Tim Blechmann &lt;tim -at- klingt.org&gt;</maintainers>
    <description>C++11-style atomic&lt;&gt;.</description>
    <documentation>libs/atomic/</documentation>
    <category>Concurrent</category>
  </library>
  <library>
    <key>atomic</key>
    <module>atomic</module>
    <boost-version>1.53.0</boost-version>
    <update-version>1.57.0 beta1</update-version>
    <name>Atomic</name>
    <authors>Helge Bahmann</authors>
    <authors>Tim Blechmann</authors>
    <authors>Andrey Semashev</authors>
    <maintainers>Helge Bahmann &lt;hcb -at- chaoticmind.net&gt;</maintainers>
    <maintainers>Tim Blechmann &lt;tim -at- klingt.org&gt;</maintainers>
    <maintainers>Andrey Semashev &lt;andrey.semashev -at- gmail.com&gt;</maintainers>
    <description>C++11-style atomic&lt;&gt;.</description>
    <documentation>libs/atomic/</documentation>
    <category>Concurrent</category>
  </library>
  <library>
    <key>bimap</key>
    <module>bimap</module>
    <boost-version>1.35.0</boost-version>
    <name>Bimap</name>
    <authors>Matias Capeletto</authors>
    <maintainers>Matias Capeletto &lt;matias.capeletto -at- gmail.com&gt;</maintainers>
    <description>Bidirectional maps library for C++. With Boost.Bimap you can create associative containers in which both types can be used as key.</description>
    <documentation>libs/bimap/</documentation>
    <category>Containers</category>
    <category>Data</category>
  </library>
  <library>
    <key>bind</key>
    <module>bind</module>
    <boost-version>1.25.0</boost-version>
    <name>Bind</name>
    <authors>Peter Dimov</authors>
    <description>boost::bind is a generalization of the standard functions std::bind1st and std::bind2nd. It supports arbitrary function objects, functions, function pointers, and member function pointers, and is able to bind any argument to a specific value or route input arguments into arbitrary positions.</description>
    <documentation>libs/bind/</documentation>
    <std>tr1</std>
    <category>Function-objects</category>
  </library>
  <library>
    <key>bind</key>
    <module>bind</module>
    <boost-version>1.25.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Bind</name>
    <authors>Peter Dimov</authors>
    <maintainers>Peter Dimov &lt;pdimov -at- mmltd.net&gt;</maintainers>
    <description>boost::bind is a generalization of the standard functions std::bind1st and std::bind2nd. It supports arbitrary function objects, functions, function pointers, and member function pointers, and is able to bind any argument to a specific value or route input arguments into arbitrary positions.</description>
    <documentation>libs/bind/</documentation>
    <std>tr1</std>
    <category>Function-objects</category>
  </library>
  <library>
    <key>bind</key>
    <module>bind</module>
    <boost-version>1.25.0</boost-version>
    <update-version>1.56.0</update-version>
    <name>Bind</name>
    <authors>Peter Dimov</authors>
    <maintainers>Peter Dimov &lt;pdimov -at- pdimov.com&gt;</maintainers>
    <description>boost::bind is a generalization of the standard functions std::bind1st and std::bind2nd. It supports arbitrary function objects, functions, function pointers, and member function pointers, and is able to bind any argument to a specific value or route input arguments into arbitrary positions.</description>
    <documentation>libs/bind/</documentation>
    <std>tr1</std>
    <category>Function-objects</category>
  </library>
  <library>
    <key>bind/mem_fn</key>
    <module>bind</module>
    <boost-version>1.25.0</boost-version>
    <name>Member Function</name>
    <authors>Peter Dimov</authors>
    <description>Generalized binders for function/object/pointers and member functions.</description>
    <documentation>libs/bind/mem_fn.html</documentation>
    <std>tr1</std>
    <category>Function-objects</category>
  </library>
  <library>
    <key>bind/ref</key>
    <module>bind</module>
    <boost-version>1.25.0</boost-version>
    <name>Ref</name>
    <authors>Jaako J&#228;rvi</authors>
    <authors>Peter Dimov</authors>
    <authors>Doug Gregor</authors>
    <authors>Dave Abrahams</authors>
    <description>A utility library for passing references to generic functions.</description>
    <documentation>libs/bind/ref.html</documentation>
    <std>tr1</std>
    <category>Function-objects</category>
  </library>
  <library>
    <key>bind/ref</key>
    <module>core</module>
    <boost-version>1.25.0</boost-version>
    <update-version>1.57.0 beta1</update-version>
    <name>Ref</name>
    <authors>Jaako J&#228;rvi</authors>
    <authors>Peter Dimov</authors>
    <authors>Doug Gregor</authors>
    <authors>Dave Abrahams</authors>
    <description>A utility library for passing references to generic functions.</description>
    <documentation>libs/core/ref.html</documentation>
    <std>tr1</std>
    <category>Function-objects</category>
  </library>
  <library>
    <key>chrono</key>
    <module>chrono</module>
    <boost-version>1.47.0</boost-version>
    <name>Chrono</name>
    <authors>Vicente J. Botet Escrib&#225;</authors>
    <maintainers>Vicente J. Botet Escriba &lt;vicente.botet -at- wanadoo.fr&gt;</maintainers>
    <description>Useful time utilities.</description>
    <documentation>libs/chrono/</documentation>
    <category>Domain</category>
    <category>System</category>
  </library>
  <library>
    <key>chrono</key>
    <module>chrono</module>
    <boost-version>1.47.0</boost-version>
    <update-version>1.56.0 beta1</update-version>
    <name>Chrono</name>
    <authors>Howard Hinnant</authors>
    <authors>Beman Dawes</authors>
    <authors>Vicente J. Botet Escriba</authors>
    <maintainers>Vicente J. Botet Escriba &lt;vicente.botet -at- wanadoo.fr&gt;</maintainers>
    <description>Useful time utilities. C++11.</description>
    <documentation>libs/chrono/</documentation>
    <std>proposal</std>
    <category>Domain</category>
    <category>System</category>
  </library>
  <library>
    <key>chrono/stopwatch</key>
    <module>chrono</module>
    <boost-version></boost-version>
    <update-version>1.56.0</update-version>
    <name>Chrono.Stopwatch</name>
    <authors>Vicente J. Botet Escriba</authors>
    <maintainers>Vicente J. Botet Escriba &lt;vicente.botet -at- wanadoo.fr&gt;</maintainers>
    <description>Useful stopclocks and stopwatches utilities.</description>
    <documentation>libs/chrono/stopwatches/</documentation>
    <category>Domain</category>
  </library>
  <library>
    <key>circular_buffer</key>
    <module>circular_buffer</module>
    <boost-version>1.35.0</boost-version>
    <name>Circular Buffer</name>
    <authors>Jan Gaspar</authors>
    <maintainers>Jan Gaspar &lt;jano_gaspar -at- yahoo.com&gt;</maintainers>
    <description>A STL compliant container also known as ring or cyclic buffer.</description>
    <documentation>libs/circular_buffer/</documentation>
    <category>Containers</category>
  </library>
  <library>
    <key>compatibility</key>
    <module>compatibility</module>
    <boost-version>1.21.2</boost-version>
    <name>Compatibility</name>
    <authors>Ralf Grosse-Kunstleve</authors>
    <authors>Jens Maurer</authors>
    <description>Help for non-conforming standard libraries.</description>
    <documentation>libs/compatibility/</documentation>
    <category>Workarounds</category>
  </library>
  <library>
    <key>compute</key>
    <module>libs/compute</module>
    <update-version>develop</update-version>
    <name>Compute</name>
    <authors>Kyle Lutz</authors>
    <maintainers>Kyle Lutz &lt;kyle.r.lutz -at- gmail.com&gt;</maintainers>
    <description>Parallel/GPU-computing library</description>
    <documentation>libs/compute/</documentation>
    <category>Concurrent</category>
  </library>
  <library>
    <key>concept_check</key>
    <module>concept_check</module>
    <boost-version>1.19.0</boost-version>
    <name>Concept Check</name>
    <authors>Jeremy Siek</authors>
    <description>Tools for generic programming.</description>
    <documentation>libs/concept_check/</documentation>
    <category>Correctness</category>
    <category>Generic</category>
  </library>
  <library>
    <key>concept_check</key>
    <module>concept_check</module>
    <boost-version>1.19.0</boost-version>
    <update-version>1.34.0</update-version>
    <name>Concept Check</name>
    <authors>Jeremy Siek</authors>
    <maintainers>Jeremy Siek &lt;jeremy.siek -at- gmail.com&gt;</maintainers>
    <description>Tools for generic programming.</description>
    <documentation>libs/concept_check/</documentation>
    <category>Correctness</category>
    <category>Generic</category>
  </library>
  <library>
    <key>config</key>
    <module>config</module>
    <boost-version>1.9.0</boost-version>
    <name>Config</name>
    <authors></authors>
    <description>Helps Boost library developers adapt to compiler idiosyncrasies; not intended for library users.</description>
    <documentation>libs/config/config.htm</documentation>
    <category>Workarounds</category>
  </library>
  <library>
    <key>config</key>
    <module>config</module>
    <boost-version>1.9.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Config</name>
    <authors></authors>
    <maintainers>John Maddock &lt;john -at- johnmaddock.co.uk&gt;</maintainers>
    <description>Helps Boost library developers adapt to compiler idiosyncrasies; not intended for library users.</description>
    <documentation>libs/config/config.htm</documentation>
    <category>Workarounds</category>
  </library>
  <library>
    <key>container</key>
    <module>container</module>
    <boost-version>1.48.0</boost-version>
    <name>Container</name>
    <authors>Ion Gazta&#241;aga</authors>
    <maintainers>Ion Gaztanaga &lt;igaztanaga -at- gmail.com&gt;</maintainers>
    <description>Standard library containers and extensions.</description>
    <documentation>libs/container/</documentation>
    <category>Containers</category>
    <category>Data</category>
  </library>
  <library>
    <key>context</key>
    <module>context</module>
    <boost-version>1.51.0</boost-version>
    <name>Context</name>
    <authors>Oliver Kowalke</authors>
    <maintainers>Oliver Kowalke &lt;oliver.kowalke -at- gmx.de&gt;</maintainers>
    <description>Context switching library.</description>
    <documentation>libs/context/</documentation>
    <category>Concurrent</category>
    <category>System</category>
  </library>
  <library>
    <key>context</key>
    <module>context</module>
    <boost-version>1.51.0</boost-version>
    <update-version>1.55.0</update-version>
    <name>Context</name>
    <authors>Oliver Kowalke</authors>
    <maintainers>Oliver Kowalke &lt;oliver.kowalke -at- gmail.com&gt;</maintainers>
    <description>Context switching library.</description>
    <documentation>libs/context/</documentation>
    <category>Concurrent</category>
    <category>System</category>
  </library>
  <library>
    <key>conversion</key>
    <module>conversion</module>
    <boost-version>1.20.0</boost-version>
    <name>Conversion</name>
    <authors>Dave Abrahams</authors>
    <authors>Kevlin Henney</authors>
    <description>Polymorphic and lexical casts.</description>
    <documentation>libs/conversion/</documentation>
    <category>Miscellaneous</category>
    <category>String</category>
  </library>
  <library>
    <key>conversion</key>
    <module>conversion</module>
    <boost-version>1.20.0</boost-version>
    <update-version>1.34.0</update-version>
    <name>Conversion</name>
    <authors>Dave Abrahams</authors>
    <authors>Kevlin Henney</authors>
    <maintainers>Alexander Nasonov &lt;alexander.nasonov -at- gmail.com&gt;</maintainers>
    <description>Polymorphic and lexical casts.</description>
    <documentation>libs/conversion/</documentation>
    <category>Miscellaneous</category>
    <category>String</category>
  </library>
  <library>
    <key>conversion</key>
    <module>conversion</module>
    <boost-version>1.20.0</boost-version>
    <update-version>1.48.0</update-version>
    <name>Conversion</name>
    <authors>Dave Abrahams</authors>
    <authors>Kevlin Henney</authors>
    <maintainers>Antony Polukhin &lt;antoshkka -at- gmail.com&gt;</maintainers>
    <description>Polymorphic and lexical casts.</description>
    <documentation>libs/conversion/</documentation>
    <category>Miscellaneous</category>
    <category>String</category>
  </library>
  <library>
    <key>conversion</key>
    <module>conversion</module>
    <boost-version>1.20.0</boost-version>
    <update-version>1.56.0 beta1</update-version>
    <name>Conversion</name>
    <authors>Dave Abrahams</authors>
    <authors>Kevlin Henney</authors>
    <maintainers>Antony Polukhin &lt;antoshkka -at- gmail.com&gt;</maintainers>
    <description>Polymorphic casts.</description>
    <documentation>libs/conversion/</documentation>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>convert</key>
    <module>convert</module>
    <update-version>1.59.0 beta1</update-version>
    <name>Convert</name>
    <authors>Vladimir Batov</authors>
    <maintainers>Vladimir Batov &lt;vbmail247 -at- gmail.com&gt;</maintainers>
    <description>An extendible and configurable type-conversion framework.</description>
    <documentation>libs/convert/</documentation>
    <category>String</category>
  </library>
  <library>
    <key>convert</key>
    <module>convert</module>
    <update-version>master</update-version>
    <name>Convert</name>
    <authors>Vladimir Batov</authors>
    <maintainers>Vladimir Batov &lt;vbmail247 -at- gmail.com&gt;</maintainers>
    <description>An extendible and configurable type-conversion framework.</description>
    <documentation>libs/convert/</documentation>
    <category>String</category>
  </library>
  <library>
    <key>core</key>
    <module>core</module>
    <update-version>1.56.0 beta1</update-version>
    <name>Core</name>
    <authors>Peter Dimov</authors>
    <authors>Glen Fernandes</authors>
    <authors>Andrey Semashev</authors>
    <maintainers>Peter Dimov &lt;pdimov -at- pdimov.com&gt;</maintainers>
    <maintainers>Glen Fernandes &lt;glenfe -at- live.com&gt;</maintainers>
    <maintainers>Andrey Semashev &lt;andrey.semashev -at- gmail.com&gt;</maintainers>
    <description>A collection of simple core utilities with minimal dependencies.</description>
    <documentation>libs/core/</documentation>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>core</key>
    <module>core</module>
    <boost-version>1.56.0</boost-version>
    <name>Core</name>
    <authors>Peter Dimov</authors>
    <authors>Glen Fernandes</authors>
    <authors>Andrey Semashev</authors>
    <maintainers>Peter Dimov &lt;pdimov -at- pdimov.com&gt;</maintainers>
    <maintainers>Glen Fernandes &lt;glenfe -at- live.com&gt;</maintainers>
    <maintainers>Andrey Semashev &lt;andrey.semashev -at- gmail.com&gt;</maintainers>
    <description>A collection of simple core utilities with minimal dependencies.</description>
    <documentation>libs/core/</documentation>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>coroutine</key>
    <module>coroutine</module>
    <boost-version>1.53.0</boost-version>
    <name>Coroutine</name>
    <authors>Oliver Kowalke</authors>
    <maintainers>Oliver Kowalke &lt;oliver.kowalke -at- gmx.de&gt;</maintainers>
    <description>Coroutine library.</description>
    <documentation>libs/coroutine/</documentation>
    <category>Concurrent</category>
  </library>
  <library>
    <key>coroutine</key>
    <module>coroutine</module>
    <boost-version>1.53.0</boost-version>
    <update-version>1.55.0</update-version>
    <name>Coroutine</name>
    <authors>Oliver Kowalke</authors>
    <maintainers>Oliver Kowalke &lt;oliver.kowalke -at- gmail.com&gt;</maintainers>
    <description>Coroutine library.</description>
    <documentation>libs/coroutine/</documentation>
    <category>Concurrent</category>
  </library>
  <library>
    <key>coroutine2</key>
    <module>coroutine2</module>
    <update-version>1.59.0 beta1</update-version>
    <name>Coroutine2</name>
    <authors>Oliver Kowalke</authors>
    <maintainers>Oliver Kowalke &lt;oliver.kowalke -at- gmail.com&gt;</maintainers>
    <description>(C++14) Coroutine library.</description>
    <documentation>libs/coroutine2/</documentation>
    <category>Concurrent</category>
  </library>
  <library>
    <key>coroutine2</key>
    <module>libs/coroutine2</module>
    <update-version>develop</update-version>
    <name>Coroutine2</name>
    <authors>Oliver Kowalke</authors>
    <maintainers>Oliver Kowalke &lt;oliver.kowalke -at- gmail.com&gt;</maintainers>
    <description>(C++14) Coroutine library.</description>
    <documentation>libs/coroutine2/</documentation>
    <category>Concurrent</category>
  </library>
  <library>
    <key>crc</key>
    <module>crc</module>
    <boost-version>1.22.0</boost-version>
    <name>CRC</name>
    <authors>Daryle Walker</authors>
    <description>The Boost CRC Library provides two implementations of CRC (cyclic redundancy code) computation objects and two implementations of CRC computation functions. The implementations are template-based.</description>
    <documentation>libs/crc/</documentation>
    <category>Domain</category>
  </library>
  <library>
    <key>crc</key>
    <module>crc</module>
    <boost-version>1.22.0</boost-version>
    <update-version>1.34.0</update-version>
    <name>CRC</name>
    <authors>Daryle Walker</authors>
    <maintainers>Daryle Walker &lt;darylew -at- hotmail.com&gt;</maintainers>
    <description>The Boost CRC Library provides two implementations of CRC (cyclic redundancy code) computation objects and two implementations of CRC computation functions. The implementations are template-based.</description>
    <documentation>libs/crc/</documentation>
    <category>Domain</category>
  </library>
  <library>
    <key>date_time</key>
    <module>date_time</module>
    <boost-version>1.29.0</boost-version>
    <name>Date Time</name>
    <authors>Jeff Garland</authors>
    <description>A set of date-time libraries based on generic programming concepts.</description>
    <documentation>libs/date_time/</documentation>
    <category>Domain</category>
    <category>System</category>
  </library>
  <library>
    <key>date_time</key>
    <module>date_time</module>
    <boost-version>1.29.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Date Time</name>
    <authors>Jeff Garland</authors>
    <maintainers>Jeff Garland &lt;jeff -at- crystalclearsoftware.com&gt;</maintainers>
    <description>A set of date-time libraries based on generic programming concepts.</description>
    <documentation>libs/date_time/</documentation>
    <category>Domain</category>
    <category>System</category>
  </library>
  <library>
    <key>disjoint_sets</key>
    <module>disjoint_sets</module>
    <boost-version></boost-version>
    <update-version>1.18.0</update-version>
    <name>Disjoint Sets</name>
    <authors>Jeremy Siek</authors>
    <description>Class that provides disjoint sets operations with union by rank and path compression</description>
    <documentation>libs/disjoint_sets/</documentation>
  </library>
  <library>
    <key>disjoint_sets</key>
    <module>disjoint_sets</module>
    <boost-version></boost-version>
    <update-version>1.34.0</update-version>
    <name>Disjoint Sets</name>
    <authors>Jeremy Siek</authors>
    <maintainers>Jeremy Siek &lt;jeremy.siek -at- gmail.com&gt;</maintainers>
    <description>Class that provides disjoint sets operations with union by rank and path compression</description>
    <documentation>libs/disjoint_sets/</documentation>
  </library>
  <library>
    <key>disjoint_sets</key>
    <module>disjoint_sets</module>
    <boost-version></boost-version>
    <update-version>1.58.0</update-version>
    <name>Disjoint Sets</name>
    <authors>Jeremy Siek</authors>
    <maintainers>Jeremy Siek &lt;jeremy.siek -at- gmail.com&gt;</maintainers>
    <description>Class that provides disjoint sets operations with union by rank and path compression</description>
    <documentation>libs/disjoint_sets/</documentation>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>dynamic_bitset</key>
    <module>dynamic_bitset</module>
    <boost-version>1.29.0</boost-version>
    <name>Dynamic Bitset</name>
    <authors>Jeremy Siek</authors>
    <authors>Chuck Allison</authors>
    <description>The dynamic_bitset class represents a set of bits. It provides accesses to the value of individual bits via an operator[] and provides all of the bitwise operators that one can apply to builtin integers, such as operator&amp; and operator&lt;&lt;. The number of bits in the set is specified at runtime via a parameter to the constructor of the dynamic_bitset.</description>
    <documentation>libs/dynamic_bitset/dynamic_bitset.html</documentation>
    <category>Containers</category>
  </library>
  <library>
    <key>dynamic_bitset</key>
    <module>dynamic_bitset</module>
    <boost-version>1.29.0</boost-version>
    <update-version>1.34.0</update-version>
    <name>Dynamic Bitset</name>
    <authors>Jeremy Siek</authors>
    <authors>Chuck Allison</authors>
    <maintainers>Jeremy Siek &lt;jeremy.siek -at- gmail.com&gt;</maintainers>
    <description>The dynamic_bitset class represents a set of bits. It provides accesses to the value of individual bits via an operator[] and provides all of the bitwise operators that one can apply to builtin integers, such as operator&amp; and operator&lt;&lt;. The number of bits in the set is specified at runtime via a parameter to the constructor of the dynamic_bitset.</description>
    <documentation>libs/dynamic_bitset/dynamic_bitset.html</documentation>
    <category>Containers</category>
  </library>
  <library>
    <key>dynamic_bitset</key>
    <module>dynamic_bitset</module>
    <boost-version>1.29.0</boost-version>
    <update-version>1.37.0</update-version>
    <name>Dynamic Bitset</name>
    <authors>Jeremy Siek</authors>
    <authors>Chuck Allison</authors>
    <maintainers>Jeremy Siek &lt;jeremy.siek -at- gmail.com&gt;</maintainers>
    <maintainers>Gennaro Prota &lt;gennaro.prota -at- yahoo.com&gt;</maintainers>
    <description>The dynamic_bitset class represents a set of bits. It provides accesses to the value of individual bits via an operator[] and provides all of the bitwise operators that one can apply to builtin integers, such as operator&amp; and operator&lt;&lt;. The number of bits in the set is specified at runtime via a parameter to the constructor of the dynamic_bitset.</description>
    <documentation>libs/dynamic_bitset/dynamic_bitset.html</documentation>
    <category>Containers</category>
  </library>
  <library>
    <key>dynamic_bitset</key>
    <module>dynamic_bitset</module>
    <boost-version>1.29.0</boost-version>
    <update-version>1.44.0</update-version>
    <name>Dynamic Bitset</name>
    <authors>Jeremy Siek</authors>
    <authors>Chuck Allison</authors>
    <maintainers>Jeremy Siek &lt;jeremy.siek -at- gmail.com&gt;</maintainers>
    <description>The dynamic_bitset class represents a set of bits. It provides accesses to the value of individual bits via an operator[] and provides all of the bitwise operators that one can apply to builtin integers, such as operator&amp; and operator&lt;&lt;. The number of bits in the set is specified at runtime via a parameter to the constructor of the dynamic_bitset.</description>
    <documentation>libs/dynamic_bitset/dynamic_bitset.html</documentation>
    <category>Containers</category>
  </library>
  <library>
    <key>endian</key>
    <module>endian</module>
    <boost-version>1.58.0</boost-version>
    <update-version>1.58.0 beta1</update-version>
    <name>Endian</name>
    <authors>Beman Dawes</authors>
    <maintainers>Beman Dawes &lt;bdawes -at- acm.org&gt;</maintainers>
    <description>Types and conversion functions for correct byte ordering and more regardless of processor endianness.</description>
    <documentation>libs/endian/</documentation>
    <category>IO</category>
    <category>Math</category>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>endian</key>
    <module>endian</module>
    <boost-version>1.58.0</boost-version>
    <name>Endian</name>
    <authors>Beman Dawes</authors>
    <maintainers>Beman Dawes &lt;bdawes -at- acm.org&gt;</maintainers>
    <description>Types and conversion functions for correct byte ordering and more regardless of processor endianness.</description>
    <documentation>libs/endian/</documentation>
    <category>IO</category>
    <category>Math</category>
  </library>
  <library>
    <key>exception</key>
    <module>exception</module>
    <boost-version>1.36.0</boost-version>
    <name>Exception</name>
    <authors>Emil Dotchevski</authors>
    <maintainers>Emil Dotchevski &lt;emil -at- revergestudios.com&gt;</maintainers>
    <description>The Boost Exception library supports transporting of arbitrary data in exception objects, and transporting of exceptions between threads.</description>
    <documentation>libs/exception/doc/boost-exception.html</documentation>
    <category>Emulation</category>
  </library>
  <library>
    <key>filesystem</key>
    <module>filesystem</module>
    <boost-version>1.30.0</boost-version>
    <name>Filesystem</name>
    <authors>Beman Dawes</authors>
    <description>The Boost Filesystem Library provides portable facilities to query and manipulate paths, files, and directories.</description>
    <documentation>libs/filesystem/</documentation>
    <category>System</category>
  </library>
  <library>
    <key>filesystem</key>
    <module>filesystem</module>
    <boost-version>1.30.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Filesystem</name>
    <authors>Beman Dawes</authors>
    <maintainers>Beman Dawes &lt;bdawes -at- acm.org&gt;</maintainers>
    <description>The Boost Filesystem Library provides portable facilities to query and manipulate paths, files, and directories.</description>
    <documentation>libs/filesystem/</documentation>
    <category>System</category>
  </library>
  <library>
    <key>flyweight</key>
    <module>flyweight</module>
    <boost-version>1.38.0</boost-version>
    <name>Flyweight</name>
    <authors>Joaqu&#237;n M L&#243;pez Mu&#241;oz</authors>
    <maintainers>Joaquin M Lopez Munoz &lt;joaquin -at- tid.es&gt;</maintainers>
    <description>Design pattern to manage large quantities of highly redundant objects.</description>
    <documentation>libs/flyweight/</documentation>
    <category>Patterns</category>
  </library>
  <library>
    <key>foreach</key>
    <module>foreach</module>
    <boost-version>1.34.0</boost-version>
    <name>Foreach</name>
    <authors>Eric Niebler</authors>
    <maintainers>Eric Niebler &lt;eric -at- boost-consulting.com&gt;</maintainers>
    <description>In C++, writing a loop that iterates over a sequence is tedious. We can either use iterators, which requires a considerable amount of boiler-plate, or we can use the std::for_each() algorithm and move our loop body into a predicate, which requires no less boiler-plate and forces us to move our logic far from where it will be used. In contrast, some other languages, like Perl, provide a dedicated &quot;foreach&quot; construct that automates this process. BOOST_FOREACH is just such a construct for C++. It iterates over sequences for us, freeing us from having to deal directly with iterators or write predicates.</description>
    <documentation>libs/foreach/</documentation>
    <category>Algorithms</category>
    <category>Emulation</category>
  </library>
  <library>
    <key>foreach</key>
    <module>foreach</module>
    <boost-version>1.34.0</boost-version>
    <update-version>1.37.0</update-version>
    <name>Foreach</name>
    <authors>Eric Niebler</authors>
    <maintainers>Eric Niebler &lt;eric -at- boostpro.com&gt;</maintainers>
    <description>In C++, writing a loop that iterates over a sequence is tedious. We can either use iterators, which requires a considerable amount of boiler-plate, or we can use the std::for_each() algorithm and move our loop body into a predicate, which requires no less boiler-plate and forces us to move our logic far from where it will be used. In contrast, some other languages, like Perl, provide a dedicated &quot;foreach&quot; construct that automates this process. BOOST_FOREACH is just such a construct for C++. It iterates over sequences for us, freeing us from having to deal directly with iterators or write predicates.</description>
    <documentation>libs/foreach/</documentation>
    <category>Algorithms</category>
    <category>Emulation</category>
  </library>
  <library>
    <key>format</key>
    <module>format</module>
    <boost-version>1.29.0</boost-version>
    <name>Format</name>
    <authors>Samuel Krempp</authors>
    <description>The format library provides a class for formatting arguments according to a format-string, as does printf, but with two major differences: format sends the arguments to an internal stream, and so is entirely type-safe and naturally supports all user-defined types; the ellipsis (...) can not be used correctly in the strongly typed context of format, and thus the function call with arbitrary arguments is replaced by successive calls to an argument feeding operator%.</description>
    <documentation>libs/format/</documentation>
    <category>IO</category>
    <category>String</category>
  </library>
  <library>
    <key>format</key>
    <module>format</module>
    <boost-version>1.29.0</boost-version>
    <update-version>1.34.0</update-version>
    <name>Format</name>
    <authors>Samuel Krempp</authors>
    <maintainers>Samuel Krempp &lt;krempp -at- crans.ens-cachan.fr&gt;</maintainers>
    <description>The format library provides a class for formatting arguments according to a format-string, as does printf, but with two major differences: format sends the arguments to an internal stream, and so is entirely type-safe and naturally supports all user-defined types; the ellipsis (...) can not be used correctly in the strongly typed context of format, and thus the function call with arbitrary arguments is replaced by successive calls to an argument feeding operator%.</description>
    <documentation>libs/format/</documentation>
    <category>IO</category>
    <category>String</category>
  </library>
  <library>
    <key>function</key>
    <module>function</module>
    <boost-version>1.23.0</boost-version>
    <name>Function</name>
    <authors>Doug Gregor</authors>
    <description>Function object wrappers for deferred calls or callbacks.</description>
    <documentation>libs/function/</documentation>
    <std>tr1</std>
    <category>Function-objects</category>
    <category>Programming</category>
  </library>
  <library>
    <key>function</key>
    <module>function</module>
    <boost-version>1.23.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Function</name>
    <authors>Doug Gregor</authors>
    <maintainers>Douglas Gregor &lt;dgregor -at- cs.indiana.edu&gt;</maintainers>
    <description>Function object wrappers for deferred calls or callbacks.</description>
    <documentation>libs/function/</documentation>
    <std>tr1</std>
    <category>Function-objects</category>
    <category>Programming</category>
  </library>
  <library>
    <key>function_types</key>
    <module>function_types</module>
    <boost-version>1.35.0</boost-version>
    <name>Function Types</name>
    <authors>Tobias Schwinger</authors>
    <maintainers>Tobias Schwinger &lt;tschwinger -at- isonews2.com&gt;</maintainers>
    <description>Boost.FunctionTypes provides functionality to classify, decompose and synthesize function, function pointer, function reference and pointer to member types.</description>
    <documentation>libs/function_types/</documentation>
    <category>Generic</category>
    <category>Metaprogramming</category>
  </library>
  <library>
    <key>functional</key>
    <module>functional</module>
    <boost-version>1.16.0</boost-version>
    <name>Functional</name>
    <authors>Mark Rodgers</authors>
    <description>The Boost.Function library contains a family of class templates that are function object wrappers.</description>
    <documentation>libs/functional/</documentation>
    <category>Function-objects</category>
  </library>
  <library>
    <key>functional/factory</key>
    <module>functional</module>
    <boost-version>1.43.0</boost-version>
    <name>Functional/Factory</name>
    <authors>Tobias Schwinger</authors>
    <maintainers>Tobias Schwinger &lt;tschwinger -at- isonews2.com&gt;</maintainers>
    <description>Function object templates for dynamic and static object creation</description>
    <documentation>libs/functional/factory/</documentation>
    <category>Function-objects</category>
  </library>
  <library>
    <key>functional/forward</key>
    <module>functional</module>
    <boost-version>1.43.0</boost-version>
    <name>Functional/Forward</name>
    <authors>Tobias Schwinger</authors>
    <maintainers>Tobias Schwinger &lt;tschwinger -at- isonews2.com&gt;</maintainers>
    <description>Adapters to allow generic function objects to accept arbitrary arguments</description>
    <documentation>libs/functional/forward/</documentation>
    <category>Function-objects</category>
  </library>
  <library>
    <key>functional/hash</key>
    <module>functional</module>
    <boost-version>1.33.0</boost-version>
    <name>Functional/Hash</name>
    <authors>Daniel James</authors>
    <maintainers>Daniel James &lt;daniel -at- calamity.org.uk&gt;</maintainers>
    <description>A TR1 hash function object that can be extended to hash user defined types.</description>
    <documentation>libs/functional/hash/</documentation>
    <std>tr1</std>
    <category>Function-objects</category>
  </library>
  <library>
    <key>functional/hash</key>
    <module>functional</module>
    <boost-version>1.33.0</boost-version>
    <update-version>1.34.0</update-version>
    <name>Functional/Hash</name>
    <authors>Daniel James</authors>
    <maintainers>Daniel James &lt;daniel_james -at- fmail.co.uk&gt;</maintainers>
    <description>A TR1 hash function object that can be extended to hash user defined types.</description>
    <documentation>libs/functional/hash/</documentation>
    <std>tr1</std>
    <category>Function-objects</category>
  </library>
  <library>
    <key>functional/hash</key>
    <module>functional</module>
    <boost-version>1.33.0</boost-version>
    <update-version>1.43.0</update-version>
    <name>Functional/Hash</name>
    <authors>Daniel James</authors>
    <maintainers>Daniel James &lt;dnljms -at- gmail.com&gt;</maintainers>
    <description>A TR1 hash function object that can be extended to hash user defined types.</description>
    <documentation>libs/functional/hash/</documentation>
    <std>tr1</std>
    <category>Function-objects</category>
  </library>
  <library>
    <key>functional/overloaded_function</key>
    <module>functional</module>
    <boost-version>1.50.0</boost-version>
    <name>Functional/Overloaded Function</name>
    <authors>Lorenzo Caminiti</authors>
    <maintainers>Lorenzo Caminiti &lt;lorcaminiti -at- gmail.com&gt;</maintainers>
    <description>Overload different functions into a single function object.</description>
    <documentation>libs/functional/overloaded_function/</documentation>
    <category>Function-objects</category>
  </library>
  <library>
    <key>fusion</key>
    <module>fusion</module>
    <boost-version>1.35.0</boost-version>
    <name>Fusion</name>
    <authors>Joel de Guzman</authors>
    <authors>Dan Marsden</authors>
    <authors>Tobias Schwinger</authors>
    <maintainers>Joel de Guzman &lt;joel -at- boost-consulting.com&gt;</maintainers>
    <maintainers>Dan Marsden &lt;danmarsden -at- yahoo.co.uk&gt;</maintainers>
    <description>Library for working with tuples, including various containers, algorithms, etc.</description>
    <documentation>libs/fusion/doc/html/</documentation>
    <category>Data</category>
    <category>Metaprogramming</category>
  </library>
  <library>
    <key>fusion</key>
    <module>fusion</module>
    <boost-version>1.35.0</boost-version>
    <update-version>1.36.0</update-version>
    <name>Fusion</name>
    <authors>Joel de Guzman</authors>
    <authors>Dan Marsden</authors>
    <authors>Tobias Schwinger</authors>
    <maintainers>Joel de Guzman &lt;joel -at- boost-consulting.com&gt;</maintainers>
    <maintainers>Dan Marsden &lt;danmarsden -at- yahoo.co.uk&gt;</maintainers>
    <maintainers>Tobias Schwinger &lt;tschwinger -at- isonews2.com&gt;</maintainers>
    <description>Library for working with tuples, including various containers, algorithms, etc.</description>
    <documentation>libs/fusion/doc/html/</documentation>
    <category>Data</category>
    <category>Metaprogramming</category>
  </library>
  <library>
    <key>geometry</key>
    <module>geometry</module>
    <boost-version>1.47.0</boost-version>
    <name>Geometry</name>
    <authors>Barend Gehrels</authors>
    <authors>Bruno Lalande</authors>
    <authors>Mateusz Loskot</authors>
    <maintainers>Barend Gehrels&lt;barend -at- xs4all.nl&gt;</maintainers>
    <maintainers>Bruno Lalande &lt;bruno.lalande -at- gmail.com&gt;</maintainers>
    <maintainers>Mateusz Loskot &lt;mateusz -at- loskot.net&gt;</maintainers>
    <description>Geometry Library.</description>
    <documentation>libs/geometry/</documentation>
    <category>Algorithms</category>
    <category>Math</category>
  </library>
  <library>
    <key>geometry</key>
    <module>geometry</module>
    <boost-version>1.47.0</boost-version>
    <update-version>1.54.0</update-version>
    <name>Geometry</name>
    <authors>Barend Gehrels</authors>
    <authors>Bruno Lalande</authors>
    <authors>Mateusz Loskot</authors>
    <authors>Adam Wulkiewicz</authors>
    <maintainers>Barend Gehrels&lt;barend -at- xs4all.nl&gt;</maintainers>
    <maintainers>Bruno Lalande &lt;bruno.lalande -at- gmail.com&gt;</maintainers>
    <maintainers>Mateusz Loskot &lt;mateusz -at- loskot.net&gt;</maintainers>
    <description>Geometry Library.</description>
    <documentation>libs/geometry/</documentation>
    <category>Algorithms</category>
    <category>Math</category>
  </library>
  <library>
    <key>geometry</key>
    <module>geometry</module>
    <boost-version>1.47.0</boost-version>
    <update-version>1.56.0</update-version>
    <name>Geometry</name>
    <authors>Barend Gehrels</authors>
    <authors>Bruno Lalande</authors>
    <authors>Mateusz Loskot</authors>
    <authors>Adam Wulkiewicz</authors>
    <authors>Menelaos Karavelas</authors>
    <maintainers>Barend Gehrels&lt;barend -at- xs4all.nl&gt;</maintainers>
    <maintainers>Bruno Lalande &lt;bruno.lalande -at- gmail.com&gt;</maintainers>
    <maintainers>Mateusz Loskot &lt;mateusz -at- loskot.net&gt;</maintainers>
    <description>The Boost.Geometry library provides geometric algorithms, primitives and spatial index.</description>
    <documentation>libs/geometry/</documentation>
    <category>Algorithms</category>
    <category>Data</category>
    <category>Math</category>
  </library>
  <library>
    <key>geometry</key>
    <module>geometry</module>
    <boost-version>1.47.0</boost-version>
    <update-version>1.57.0 beta1</update-version>
    <name>Geometry</name>
    <authors>Barend Gehrels</authors>
    <authors>Bruno Lalande</authors>
    <authors>Mateusz Loskot</authors>
    <authors>Adam Wulkiewicz</authors>
    <authors>Menelaos Karavelas</authors>
    <maintainers>Barend Gehrels &lt;barend -at- xs4all.nl&gt;</maintainers>
    <maintainers>Bruno Lalande &lt;bruno.lalande -at- gmail.com&gt;</maintainers>
    <maintainers>Mateusz Loskot &lt;mateusz -at- loskot.net&gt;</maintainers>
    <maintainers>Adam Wulkiewicz &lt;adam.wulkiewicz -at- gmail.com&gt;</maintainers>
    <description>The Boost.Geometry library provides geometric algorithms, primitives and spatial index.</description>
    <documentation>libs/geometry/</documentation>
    <category>Algorithms</category>
    <category>Data</category>
    <category>Math</category>
  </library>
  <library>
    <key>gil</key>
    <module>gil</module>
    <boost-version>1.35.0</boost-version>
    <name>GIL</name>
    <authors>Lubomir Bourdev</authors>
    <authors>Hailin Jin</authors>
    <maintainers>Lubomir Bourdev &lt;lbourdev -at- adobe.com&gt;</maintainers>
    <maintainers>Hailin Jin &lt;hljin -at- adobe.com&gt;</maintainers>
    <description>Generic Image Library</description>
    <documentation>libs/gil/</documentation>
    <category>Algorithms</category>
    <category>Containers</category>
    <category>Generic</category>
    <category>Image-processing</category>
    <category>Iterators</category>
  </library>
  <library>
    <key>gil</key>
    <module>gil</module>
    <boost-version>1.35.0</boost-version>
    <update-version>1.55.0</update-version>
    <name>GIL</name>
    <authors>Lubomir Bourdev</authors>
    <authors>Hailin Jin</authors>
    <maintainers>Christian Henning &lt;chhenning -at- gmail.com&gt;</maintainers>
    <description>Generic Image Library</description>
    <documentation>libs/gil/</documentation>
    <category>Algorithms</category>
    <category>Containers</category>
    <category>Generic</category>
    <category>Image-processing</category>
    <category>Iterators</category>
  </library>
  <library>
    <key>graph</key>
    <module>graph</module>
    <boost-version>1.18.0</boost-version>
    <name>Graph</name>
    <authors>Jeremy Siek and a University of Notre Dame team; now maintained by Andrew Sutton and Jeremiah Willcock.</authors>
    <description>The BGL graph interface and graph components are generic, in the same sense as the the Standard Template Library (STL).</description>
    <documentation>libs/graph/</documentation>
    <category>Algorithms</category>
    <category>Containers</category>
    <category>Iterators</category>
  </library>
  <library>
    <key>graph</key>
    <module>graph</module>
    <boost-version>1.18.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Graph</name>
    <authors>Jeremy Siek and a University of Notre Dame team; now maintained by Andrew Sutton and Jeremiah Willcock.</authors>
    <maintainers>Douglas Gregor &lt;dgregor -at- cs.indiana.edu&gt;</maintainers>
    <description>The BGL graph interface and graph components are generic, in the same sense as the the Standard Template Library (STL).</description>
    <documentation>libs/graph/</documentation>
    <category>Algorithms</category>
    <category>Containers</category>
    <category>Iterators</category>
  </library>
  <library>
    <key>graph</key>
    <module>graph</module>
    <boost-version>1.18.0</boost-version>
    <update-version>1.40.0</update-version>
    <name>Graph</name>
    <authors>Jeremy Siek and a University of Notre Dame team; now maintained by Andrew Sutton and Jeremiah Willcock.</authors>
    <maintainers>Andrew Sutton &lt;asutton -at- cs.kent.edu&gt;</maintainers>
    <description>The BGL graph interface and graph components are generic, in the same sense as the the Standard Template Library (STL).</description>
    <documentation>libs/graph/</documentation>
    <category>Algorithms</category>
    <category>Containers</category>
    <category>Iterators</category>
  </library>
  <library>
    <key>heap</key>
    <module>heap</module>
    <boost-version>1.49.0</boost-version>
    <name>Heap</name>
    <authors>Tim Blechmann</authors>
    <maintainers>Tim Blechmann &lt;tim -at- klingt.org&gt;</maintainers>
    <description>Priority queue data structures.</description>
    <documentation>libs/heap/</documentation>
    <category>Data</category>
  </library>
  <library>
    <key>icl</key>
    <module>icl</module>
    <boost-version>1.46.0</boost-version>
    <name>ICL</name>
    <authors>Joachim Faulhaber</authors>
    <maintainers>Joachim Faulhaber &lt;afojgo -at- gmail.com&gt;</maintainers>
    <description>Interval Container Library, interval sets and maps and aggregation of associated values</description>
    <documentation>libs/icl/</documentation>
    <category>Containers</category>
    <category>Data</category>
  </library>
  <library>
    <key>integer</key>
    <module>integer</module>
    <boost-version>1.9.0</boost-version>
    <name>Integer</name>
    <authors></authors>
    <description>The organization of boost integer headers and classes is designed to take advantage of &lt;stdint.h&gt; types from the 1999 C standard without resorting to undefined behavior in terms of the 1998 C++ standard. The header &lt;boost/cstdint.hpp&gt; makes the standard integer types safely available in namespace boost without placing any names in namespace std.</description>
    <documentation>libs/integer/</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>integer</key>
    <module>integer</module>
    <boost-version>1.9.0</boost-version>
    <update-version>1.34.0</update-version>
    <name>Integer</name>
    <authors></authors>
    <maintainers>Daryle Walker &lt;darylew -at- hotmail.com&gt;</maintainers>
    <description>The organization of boost integer headers and classes is designed to take advantage of &lt;stdint.h&gt; types from the 1999 C standard without resorting to undefined behavior in terms of the 1998 C++ standard. The header &lt;boost/cstdint.hpp&gt; makes the standard integer types safely available in namespace boost without placing any names in namespace std.</description>
    <documentation>libs/integer/</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>interprocess</key>
    <module>interprocess</module>
    <boost-version>1.35.0</boost-version>
    <name>Interprocess</name>
    <authors>Ion Gazta&#241;aga</authors>
    <maintainers>Ion Gaztanaga &lt;igaztanaga -at- gmail.com&gt;</maintainers>
    <description>Shared memory, memory mapped files, process-shared mutexes, condition variables, containers and allocators.</description>
    <documentation>libs/interprocess/</documentation>
    <category>Concurrent</category>
  </library>
  <library>
    <key>intrusive</key>
    <module>intrusive</module>
    <boost-version>1.35.0</boost-version>
    <name>Intrusive</name>
    <authors>Ion Gazta&#241;aga</authors>
    <maintainers>Ion Gaztanaga &lt;igaztanaga -at- gmail.com&gt;</maintainers>
    <description>Intrusive containers and algorithms.</description>
    <documentation>libs/intrusive/</documentation>
    <category>Containers</category>
  </library>
  <library>
    <key>io</key>
    <module>io</module>
    <boost-version>1.28.0</boost-version>
    <name>IO State Savers</name>
    <authors>Daryle Walker</authors>
    <description>The I/O sub-library of Boost helps segregate the large number of Boost headers. This sub-library should contain various items to use with/for the standard I/O library.</description>
    <documentation>libs/io/doc/ios_state.html</documentation>
    <category>IO</category>
  </library>
  <library>
    <key>io</key>
    <module>io</module>
    <boost-version>1.28.0</boost-version>
    <update-version>1.34.0</update-version>
    <name>IO State Savers</name>
    <authors>Daryle Walker</authors>
    <maintainers>Daryle Walker &lt;darylew -at- hotmail.com&gt;</maintainers>
    <description>The I/O sub-library of Boost helps segregate the large number of Boost headers. This sub-library should contain various items to use with/for the standard I/O library.</description>
    <documentation>libs/io/doc/ios_state.html</documentation>
    <category>IO</category>
  </library>
  <library>
    <key>iostreams</key>
    <module>iostreams</module>
    <boost-version>1.33.0</boost-version>
    <name>Iostreams</name>
    <authors>Jonathan Turkanis</authors>
    <maintainers>Jonathan Turkanis &lt;technews -at- kangaroologic.com&gt;</maintainers>
    <description>Boost.IOStreams provides a framework for defining streams, stream buffers and i/o filters.</description>
    <documentation>libs/iostreams/</documentation>
    <category>IO</category>
    <category>String</category>
  </library>
  <library>
    <key>iostreams</key>
    <module>iostreams</module>
    <boost-version>1.33.0</boost-version>
    <update-version>1.35.0</update-version>
    <name>Iostreams</name>
    <authors>Jonathan Turkanis</authors>
    <maintainers>Jonathan Turkanis &lt;turkanis -at- coderage.com&gt;</maintainers>
    <description>Boost.IOStreams provides a framework for defining streams, stream buffers and i/o filters.</description>
    <documentation>libs/iostreams/</documentation>
    <category>IO</category>
    <category>String</category>
  </library>
  <library>
    <key>iterator</key>
    <module>iterator</module>
    <boost-version>1.21.0</boost-version>
    <name>Iterator</name>
    <authors>Dave Abrahams</authors>
    <authors>Jeremy Siek</authors>
    <authors>Thomas Witt</authors>
    <description>The Boost Iterator Library contains two parts. The first is a system of concepts which extend the C++ standard iterator requirements. The second is a framework of components for building iterators based on these extended concepts and includes several useful iterator adaptors.</description>
    <documentation>libs/iterator/</documentation>
    <category>Iterators</category>
  </library>
  <library>
    <key>iterator</key>
    <module>iterator</module>
    <boost-version>1.21.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Iterator</name>
    <authors>Dave Abrahams</authors>
    <authors>Jeremy Siek</authors>
    <authors>Thomas Witt</authors>
    <maintainers>David Abrahams &lt;dave -at- boost-consulting.com&gt;</maintainers>
    <maintainers>Thomas Witt &lt;witt - at - acm.org&gt;</maintainers>
    <description>The Boost Iterator Library contains two parts. The first is a system of concepts which extend the C++ standard iterator requirements. The second is a framework of components for building iterators based on these extended concepts and includes several useful iterator adaptors.</description>
    <documentation>libs/iterator/</documentation>
    <category>Iterators</category>
  </library>
  <library>
    <key>iterator</key>
    <module>iterator</module>
    <boost-version>1.21.0</boost-version>
    <update-version>1.50.0</update-version>
    <name>Iterator</name>
    <authors>Dave Abrahams</authors>
    <authors>Jeremy Siek</authors>
    <authors>Thomas Witt</authors>
    <maintainers>David Abrahams &lt;dave -at- boost-consulting.com&gt;</maintainers>
    <maintainers>Thomas Witt &lt;witt - at - acm.org&gt;</maintainers>
    <maintainers>Jeffrey Lee Hellrung Jr. &lt;jeffrey.hellrung -at- gmail.com&gt;</maintainers>
    <description>The Boost Iterator Library contains two parts. The first is a system of concepts which extend the C++ standard iterator requirements. The second is a framework of components for building iterators based on these extended concepts and includes several useful iterator adaptors.</description>
    <documentation>libs/iterator/</documentation>
    <category>Iterators</category>
  </library>
  <library>
    <key>lambda</key>
    <module>lambda</module>
    <boost-version>1.28.0</boost-version>
    <name>Lambda</name>
    <authors>Jaakko J&#228;rvi</authors>
    <authors>Gary Powell</authors>
    <description>Define small unnamed function objects at the actual call site, and more.</description>
    <documentation>libs/lambda/</documentation>
    <category>Function-objects</category>
  </library>
  <library>
    <key>lambda</key>
    <module>lambda</module>
    <boost-version>1.28.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Lambda</name>
    <authors>Jaakko J&#228;rvi</authors>
    <authors>Gary Powell</authors>
    <maintainers>Jaakko Jarvi &lt;jarvi -at- cs.tamu.edu&gt;</maintainers>
    <description>Define small unnamed function objects at the actual call site, and more.</description>
    <documentation>libs/lambda/</documentation>
    <category>Function-objects</category>
  </library>
  <library>
    <key>lexical_cast</key>
    <module>conversion</module>
    <boost-version>1.20.0</boost-version>
    <name>Lexical Cast</name>
    <authors>Kevlin Henney</authors>
    <description>General literal text conversions, such as an int represented a string, or vice-versa.</description>
    <documentation>libs/conversion/lexical_cast.htm</documentation>
    <category>Miscellaneous</category>
    <category>String</category>
  </library>
  <library>
    <key>lexical_cast</key>
    <module>conversion</module>
    <boost-version>1.20.0</boost-version>
    <update-version>1.55.0</update-version>
    <name>Lexical Cast</name>
    <authors>Kevlin Henney</authors>
    <maintainers>Antony Polukhin &lt;antoshkka -at- gmail.com&gt;</maintainers>
    <description>General literal text conversions, such as an int represented a string, or vice-versa.</description>
    <documentation>libs/conversion/lexical_cast.htm</documentation>
    <category>Miscellaneous</category>
    <category>String</category>
  </library>
  <library>
    <key>lexical_cast</key>
    <module>lexical_cast</module>
    <boost-version>1.20.0</boost-version>
    <update-version>1.56.0 beta1</update-version>
    <name>Lexical Cast</name>
    <authors>Kevlin Henney</authors>
    <maintainers>Antony Polukhin &lt;antoshkka -at- gmail.com&gt;</maintainers>
    <description>General literal text conversions, such as an int represented a string, or vice-versa.</description>
    <documentation>libs/lexical_cast/</documentation>
    <category>Miscellaneous</category>
    <category>String</category>
  </library>
  <library>
    <key>lexical_cast</key>
    <module>lexical_cast</module>
    <boost-version>1.20.0</boost-version>
    <update-version>1.58.0</update-version>
    <name>Lexical Cast</name>
    <authors>Kevlin Henney</authors>
    <maintainers>Antony Polukhin &lt;antoshkka -at- gmail.com&gt;</maintainers>
    <description>General literal text conversions, such as an int represented a string, or vice-versa.</description>
    <documentation>libs/lexical_cast/</documentation>
    <category>String</category>
  </library>
  <library>
    <key>lexical_cast</key>
    <module>lexical_cast</module>
    <boost-version>1.20.0</boost-version>
    <update-version>1.59.0 beta1</update-version>
    <name>Lexical Cast</name>
    <authors>Kevlin Henney</authors>
    <maintainers>Antony Polukhin &lt;antoshkka -at- gmail.com&gt;</maintainers>
    <description>General literal text conversions, such as an int represented a string, or vice-versa.</description>
    <documentation>libs/lexical_cast/</documentation>
    <category>String</category>
  </library>
  <library>
    <key>lexical_cast</key>
    <module>lexical_cast</module>
    <boost-version>1.20.0</boost-version>
    <update-version>master</update-version>
    <name>Lexical Cast</name>
    <authors>Kevlin Henney</authors>
    <maintainers>Antony Polukhin &lt;antoshkka -at- gmail.com&gt;</maintainers>
    <description>General literal text conversions, such as an int represented a string, or vice-versa.</description>
    <documentation>libs/lexical_cast/</documentation>
    <category>String</category>
  </library>
  <library>
    <key>local_function</key>
    <module>local_function</module>
    <boost-version>1.50.0</boost-version>
    <name>Local Function</name>
    <authors>Lorenzo Caminiti</authors>
    <maintainers>Lorenzo Caminiti &lt;lorcaminiti -at- gmail.com&gt;</maintainers>
    <description>Program functions locally, within other functions, directly within the scope where they are needed.</description>
    <documentation>libs/local_function/</documentation>
    <category>Function-objects</category>
  </library>
  <library>
    <key>locale</key>
    <module>locale</module>
    <boost-version>1.48.0</boost-version>
    <name>Locale</name>
    <authors>Artyom Beilis</authors>
    <maintainers>Artyom Beilis &lt;artyomtnk -at- yahoo.com&gt;</maintainers>
    <description>Provide localization and Unicode handling tools for C++.</description>
    <documentation>libs/locale/</documentation>
    <category>String</category>
  </library>
  <library>
    <key>lockfree</key>
    <module>lockfree</module>
    <boost-version>1.53.0</boost-version>
    <name>Lockfree</name>
    <authors>Tim Blechmann</authors>
    <maintainers>Tim Blechmann &lt;tim -at- klingt.org&gt;</maintainers>
    <description>Lockfree data structures.</description>
    <documentation>libs/lockfree/</documentation>
    <category>Concurrent</category>
  </library>
  <library>
    <key>log</key>
    <module>log</module>
    <boost-version>1.54.0</boost-version>
    <name>Log</name>
    <authors>Andrey Semashev</authors>
    <maintainers>Andrey Semashev &lt;andrey.semashev -at- gmail.com&gt;</maintainers>
    <description>Logging library.</description>
    <documentation>libs/log/</documentation>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>logic/tribool</key>
    <module>logic</module>
    <boost-version>1.32.0</boost-version>
    <name>Tribool</name>
    <authors>Doug Gregor</authors>
    <description>3-state boolean type library.</description>
    <documentation>doc/html/tribool.html</documentation>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>logic/tribool</key>
    <module>logic</module>
    <boost-version>1.32.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Tribool</name>
    <authors>Doug Gregor</authors>
    <maintainers>Douglas Gregor &lt;dgregor -at- cs.indiana.edu&gt;</maintainers>
    <description>3-state boolean type library.</description>
    <documentation>doc/html/tribool.html</documentation>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>math</key>
    <module>math</module>
    <boost-version>1.23.0</boost-version>
    <name>Math</name>
    <authors>various</authors>
    <description>Boost.Math includes several contributions in the domain of mathematics: The Greatest Common Divisor and Least Common Multiple library provides run-time and compile-time evaluation of the greatest common divisor (GCD) or least common multiple (LCM) of two integers. The Special Functions library currently provides eight templated special functions, in namespace boost. The Complex Number Inverse Trigonometric Functions are the inverses of trigonometric functions currently present in the C++ standard. Quaternions are a relative of complex numbers often used to parameterise rotations in three dimentional space. Octonions, like quaternions, are a relative of complex numbers.</description>
    <documentation>libs/math/</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>math</key>
    <module>math</module>
    <boost-version>1.23.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Math</name>
    <authors>various</authors>
    <maintainers>Hubert Holin &lt;Hubert.Holin -at- meteo.fr&gt;</maintainers>
    <description>Boost.Math includes several contributions in the domain of mathematics: The Greatest Common Divisor and Least Common Multiple library provides run-time and compile-time evaluation of the greatest common divisor (GCD) or least common multiple (LCM) of two integers. The Special Functions library currently provides eight templated special functions, in namespace boost. The Complex Number Inverse Trigonometric Functions are the inverses of trigonometric functions currently present in the C++ standard. Quaternions are a relative of complex numbers often used to parameterise rotations in three dimentional space. Octonions, like quaternions, are a relative of complex numbers.</description>
    <documentation>libs/math/</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>math</key>
    <module>math</module>
    <boost-version>1.23.0</boost-version>
    <update-version>1.34.0</update-version>
    <name>Math</name>
    <authors>various</authors>
    <maintainers>Hubert Holin &lt;Hubert.Holin -at- meteo.fr&gt;</maintainers>
    <maintainers>John Maddock &lt;john -at- johnmaddock.co.uk&gt;</maintainers>
    <description>Boost.Math includes several contributions in the domain of mathematics: The Greatest Common Divisor and Least Common Multiple library provides run-time and compile-time evaluation of the greatest common divisor (GCD) or least common multiple (LCM) of two integers. The Special Functions library currently provides eight templated special functions, in namespace boost. The Complex Number Inverse Trigonometric Functions are the inverses of trigonometric functions currently present in the C++ standard. Quaternions are a relative of complex numbers often used to parameterise rotations in three dimentional space. Octonions, like quaternions, are a relative of complex numbers.</description>
    <documentation>libs/math/</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>math/common_factor</key>
    <module>math</module>
    <boost-version>1.26.0</boost-version>
    <name>Math Common Factor</name>
    <authors>Daryle Walker</authors>
    <description>Greatest common divisor and least common multiple.</description>
    <documentation>libs/math/doc/common_factor.html</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>math/common_factor</key>
    <module>math</module>
    <boost-version>1.26.0</boost-version>
    <update-version>1.54.0</update-version>
    <name>Math Common Factor</name>
    <authors>Daryle Walker</authors>
    <description>Greatest common divisor and least common multiple.</description>
    <documentation>libs/math/doc/html/gcd_lcm.html</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>math/octonion</key>
    <module>math</module>
    <boost-version>1.23.0</boost-version>
    <name>Math Octonion</name>
    <authors>Hubert Holin</authors>
    <description>Octonions.</description>
    <documentation>libs/math/doc/octonion/html/</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>math/octonion</key>
    <module>math</module>
    <boost-version>1.23.0</boost-version>
    <update-version>1.54.0</update-version>
    <name>Math Octonion</name>
    <authors>Hubert Holin</authors>
    <description>Octonions.</description>
    <documentation>libs/math/doc/html/octonions.html</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>math/quaternion</key>
    <module>math</module>
    <boost-version>1.23.0</boost-version>
    <name>Math Quaternion</name>
    <authors>Hubert Holin</authors>
    <description>Quaternions.</description>
    <documentation>libs/math/doc/quaternion/html/</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>math/quaternion</key>
    <module>math</module>
    <boost-version>1.23.0</boost-version>
    <update-version>1.54.0</update-version>
    <name>Math Quaternion</name>
    <authors>Hubert Holin</authors>
    <description>Quaternions.</description>
    <documentation>libs/math/doc/html/quaternions.html</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>math/special_functions</key>
    <module>math</module>
    <boost-version>1.35.0</boost-version>
    <name>Math/Special Functions</name>
    <authors>John Maddock</authors>
    <authors>Paul Bristow</authors>
    <authors>Hubert Holin</authors>
    <authors>Xiaogang Zhang</authors>
    <description>A wide selection of mathematical special functions.</description>
    <documentation>libs/math/doc/sf_and_dist/html/</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>math/special_functions</key>
    <module>math</module>
    <boost-version>1.35.0</boost-version>
    <update-version>1.54.0</update-version>
    <name>Math/Special Functions</name>
    <authors>John Maddock</authors>
    <authors>Paul Bristow</authors>
    <authors>Hubert Holin</authors>
    <authors>Xiaogang Zhang</authors>
    <description>A wide selection of mathematical special functions.</description>
    <documentation>libs/math/doc/html/special.html</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>math/statistical_distributions</key>
    <module>math</module>
    <boost-version>1.35.0</boost-version>
    <name>Math/Statistical Distributions</name>
    <authors>John Maddock</authors>
    <authors>Paul Bristow</authors>
    <description>A wide selection of univariate statistical distributions and functions that operate on them.</description>
    <documentation>libs/math/doc/sf_and_dist/html/</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>math/statistical_distributions</key>
    <module>math</module>
    <boost-version>1.35.0</boost-version>
    <update-version>1.54.0</update-version>
    <name>Math/Statistical Distributions</name>
    <authors>John Maddock</authors>
    <authors>Paul Bristow</authors>
    <description>A wide selection of univariate statistical distributions and functions that operate on them.</description>
    <documentation>libs/math/doc/html/dist.html</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>move</key>
    <module>move</module>
    <boost-version>1.48.0</boost-version>
    <name>Move</name>
    <authors>Ion Gazta&#241;aga</authors>
    <maintainers>Ion Gaztanaga &lt;igaztanaga -at- gmail.com&gt;</maintainers>
    <description>Portable move semantics for C++03 and C++11 compilers.</description>
    <documentation>libs/move/</documentation>
    <category>Emulation</category>
  </library>
  <library>
    <key>mpi</key>
    <module>mpi</module>
    <boost-version>1.35.0</boost-version>
    <name>MPI</name>
    <authors>Douglas Gregor</authors>
    <authors>Matthias Troyer</authors>
    <description>Message Passing Interface library, for use in distributed-memory parallel application programming.</description>
    <documentation>libs/mpi/</documentation>
    <category>Concurrent</category>
  </library>
  <library>
    <key>mpl</key>
    <module>mpl</module>
    <boost-version>1.30.0</boost-version>
    <name>MPL</name>
    <authors>Aleksey Gurtovoy</authors>
    <description>The Boost.MPL library is a general-purpose, high-level C++ template metaprogramming framework of compile-time algorithms, sequences and metafunctions. It provides a conceptual foundation and an extensive set of powerful and coherent tools that make doing explict metaprogramming in C++ as easy and enjoyable as possible within the current language.</description>
    <documentation>libs/mpl/</documentation>
    <category>Metaprogramming</category>
  </library>
  <library>
    <key>mpl</key>
    <module>mpl</module>
    <boost-version>1.30.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>MPL</name>
    <authors>Aleksey Gurtovoy</authors>
    <maintainers>Aleksey Gurtovoy &lt;agurtovoy -at- meta-comm.com&gt;</maintainers>
    <maintainers>David Abrahams &lt;dave -at- boost-consulting.com&gt;</maintainers>
    <description>The Boost.MPL library is a general-purpose, high-level C++ template metaprogramming framework of compile-time algorithms, sequences and metafunctions. It provides a conceptual foundation and an extensive set of powerful and coherent tools that make doing explict metaprogramming in C++ as easy and enjoyable as possible within the current language.</description>
    <documentation>libs/mpl/</documentation>
    <category>Metaprogramming</category>
  </library>
  <library>
    <key>mpl</key>
    <module>mpl</module>
    <boost-version>1.30.0</boost-version>
    <update-version>1.34.0</update-version>
    <name>MPL</name>
    <authors>Aleksey Gurtovoy</authors>
    <maintainers>Aleksey Gurtovoy &lt;agurtovoy -at- meta-comm.com&gt;</maintainers>
    <description>The Boost.MPL library is a general-purpose, high-level C++ template metaprogramming framework of compile-time algorithms, sequences and metafunctions. It provides a conceptual foundation and an extensive set of powerful and coherent tools that make doing explict metaprogramming in C++ as easy and enjoyable as possible within the current language.</description>
    <documentation>libs/mpl/</documentation>
    <category>Metaprogramming</category>
  </library>
  <library>
    <key>msm</key>
    <module>msm</module>
    <boost-version>1.44.0</boost-version>
    <name>Meta State Machine</name>
    <authors>Christophe Henry</authors>
    <maintainers>Christophe Henry &lt;christophe.j.henry -at-  googlemail.com&gt;</maintainers>
    <description>A very high-performance library for expressive UML2 finite state machines.</description>
    <documentation>libs/msm/</documentation>
    <category>State</category>
  </library>
  <library>
    <key>multi_array</key>
    <module>multi_array</module>
    <boost-version>1.29.0</boost-version>
    <name>Multi-Array</name>
    <authors>Ron Garcia</authors>
    <description>Boost.MultiArray provides a generic N-dimensional array concept definition and common implementations of that interface.</description>
    <documentation>libs/multi_array/</documentation>
    <category>Containers</category>
    <category>Math</category>
  </library>
  <library>
    <key>multi_array</key>
    <module>multi_array</module>
    <boost-version>1.29.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Multi-Array</name>
    <authors>Ron Garcia</authors>
    <maintainers>Ronald Garcia &lt;garcia -at- osl.iu.edu&gt;</maintainers>
    <description>Boost.MultiArray provides a generic N-dimensional array concept definition and common implementations of that interface.</description>
    <documentation>libs/multi_array/</documentation>
    <category>Containers</category>
    <category>Math</category>
  </library>
  <library>
    <key>multi_index</key>
    <module>multi_index</module>
    <boost-version>1.32.0</boost-version>
    <name>Multi-Index</name>
    <authors>Joaqu&#237;n M L&#243;pez Mu&#241;oz</authors>
    <description>The Boost Multi-index Containers Library provides a class template named multi_index_container which enables the construction of containers maintaining one or more indices with different sorting and access semantics.</description>
    <documentation>libs/multi_index/</documentation>
    <category>Containers</category>
    <category>Data</category>
  </library>
  <library>
    <key>multi_index</key>
    <module>multi_index</module>
    <boost-version>1.32.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Multi-Index</name>
    <authors>Joaqu&#237;n M L&#243;pez Mu&#241;oz</authors>
    <maintainers>Joaquin M Lopez Munoz &lt;joaquin -at- tid.es&gt;</maintainers>
    <description>The Boost Multi-index Containers Library provides a class template named multi_index_container which enables the construction of containers maintaining one or more indices with different sorting and access semantics.</description>
    <documentation>libs/multi_index/</documentation>
    <category>Containers</category>
    <category>Data</category>
  </library>
  <library>
    <key>multiprecision</key>
    <module>multiprecision</module>
    <boost-version>1.53.0</boost-version>
    <name>Multiprecision</name>
    <authors>John Maddock</authors>
    <authors>Christopher Kormanyos</authors>
    <maintainers>John Maddock &lt;john -at- johnmaddock.co.uk&gt;</maintainers>
    <maintainers>christopher Kormanyos &lt;e_float -at- yahoo.com&gt;</maintainers>
    <description>Extended precision arithmetic types for floating point, integer andrational arithmetic.</description>
    <documentation>libs/multiprecision/</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>numeric/conversion</key>
    <module>numeric_conversion</module>
    <boost-version>1.32.0</boost-version>
    <name>Numeric Conversion</name>
    <authors>Fernando Cacciola</authors>
    <description>Optimized Policy-based Numeric Conversions.</description>
    <documentation>libs/numeric/conversion/</documentation>
    <category>Math</category>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>numeric/conversion</key>
    <module>numeric_conversion</module>
    <boost-version>1.32.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Numeric Conversion</name>
    <authors>Fernando Cacciola</authors>
    <maintainers>Fernando Cacciola &lt;fernando_cacciola -at- ciudad.com.ar&gt;</maintainers>
    <description>Optimized Policy-based Numeric Conversions.</description>
    <documentation>libs/numeric/conversion/</documentation>
    <category>Math</category>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>numeric/conversion</key>
    <module>numeric_conversion</module>
    <boost-version>1.32.0</boost-version>
    <update-version>1.48.0</update-version>
    <name>Numeric Conversion</name>
    <authors>Fernando Cacciola</authors>
    <maintainers>Fernando Cacciola &lt;fernando_cacciola -at- ciudad.com.ar&gt;</maintainers>
    <maintainers>Brandon Kohn &lt;blkohn -at- hotmail.com&gt;</maintainers>
    <description>Optimized Policy-based Numeric Conversions.</description>
    <documentation>libs/numeric/conversion/</documentation>
    <category>Math</category>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>numeric/conversion</key>
    <module>numeric_conversion</module>
    <boost-version>1.32.0</boost-version>
    <update-version>1.58.0</update-version>
    <name>Numeric Conversion</name>
    <authors>Fernando Cacciola</authors>
    <maintainers>Fernando Cacciola &lt;fernando_cacciola -at- ciudad.com.ar&gt;</maintainers>
    <maintainers>Brandon Kohn &lt;blkohn -at- hotmail.com&gt;</maintainers>
    <description>Optimized Policy-based Numeric Conversions.</description>
    <documentation>libs/numeric/conversion/</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>numeric/interval</key>
    <module>interval</module>
    <boost-version>1.30.0</boost-version>
    <name>Interval</name>
    <authors>Guillaume Melquiond</authors>
    <authors>Herv&#233; Br&#246;nnimann</authors>
    <authors>Sylvain Pion</authors>
    <description>Extends the usual arithmetic functions to mathematical intervals.</description>
    <documentation>libs/numeric/interval/doc/interval.htm</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>numeric/interval</key>
    <module>interval</module>
    <boost-version>1.30.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Interval</name>
    <authors>Guillaume Melquiond</authors>
    <authors>Herv&#233; Br&#246;nnimann</authors>
    <authors>Sylvain Pion</authors>
    <maintainers>Sylvain Pion &lt;Sylvain.Pion -at- sophia.inria.fr&gt;</maintainers>
    <maintainers>Herve Bronnimann &lt;hbr -at- poly.edu&gt;</maintainers>
    <maintainers>Guillaume Melquiond &lt;guillaume.melquiond -at- ens-lyon.fr&gt;</maintainers>
    <description>Extends the usual arithmetic functions to mathematical intervals.</description>
    <documentation>libs/numeric/interval/doc/interval.htm</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>numeric/odeint</key>
    <module>odeint</module>
    <boost-version>1.53.0</boost-version>
    <name>Odeint</name>
    <authors>Karsten Ahnert</authors>
    <authors>Mario Mulansky</authors>
    <maintainers>Karsten Ahnert &lt;karsten.ahnert -at- gmx.de&gt;</maintainers>
    <maintainers>Mario Mulansky &lt;mario.mulansky -at- gmx.net&gt;</maintainers>
    <description>Solving ordinary differential equations.</description>
    <documentation>libs/numeric/odeint/</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>numeric/ublas</key>
    <module>ublas</module>
    <boost-version>1.29.0</boost-version>
    <name>uBLAS</name>
    <authors>Joerg Walter</authors>
    <authors>Mathias Koch</authors>
    <description>uBLAS provides matrix and vector classes as well as basic linear algebra routines. Several dense, packed and sparse storage schemes are supported.</description>
    <documentation>libs/numeric/ublas/doc/index.htm</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>numeric/ublas</key>
    <module>ublas</module>
    <boost-version>1.29.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>uBLAS</name>
    <authors>Joerg Walter</authors>
    <authors>Mathias Koch</authors>
    <maintainers>Michael Stevens &lt;michael -at- michael-stevens.de&gt;</maintainers>
    <description>uBLAS provides matrix and vector classes as well as basic linear algebra routines. Several dense, packed and sparse storage schemes are supported.</description>
    <documentation>libs/numeric/ublas/doc/index.htm</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>numeric/ublas</key>
    <module>ublas</module>
    <boost-version>1.29.0</boost-version>
    <update-version>1.57.0 beta1</update-version>
    <name>uBLAS</name>
    <authors>Joerg Walter</authors>
    <authors>Mathias Koch</authors>
    <maintainers>David Bellot &lt;david.bellot -at- gmail.com&gt;</maintainers>
    <description>uBLAS provides matrix and vector classes as well as basic linear algebra routines. Several dense, packed and sparse storage schemes are supported.</description>
    <documentation>libs/numeric/ublas/</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>numeric/ublas</key>
    <module>ublas</module>
    <boost-version>1.29.0</boost-version>
    <update-version>1.58.0 beta1</update-version>
    <name>uBLAS</name>
    <authors>Joerg Walter</authors>
    <authors>Mathias Koch</authors>
    <maintainers>David Bellot &lt;david.bellot -at- gmail.com&gt;</maintainers>
    <description>uBLAS provides matrix and vector classes as well as basic linear algebra routines. Several dense, packed and sparse storage schemes are supported.</description>
    <documentation>libs/numeric/ublas/doc/index.htm</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>numeric/ublas</key>
    <module>ublas</module>
    <boost-version>1.29.0</boost-version>
    <update-version>1.58.0</update-version>
    <name>uBLAS</name>
    <authors>Joerg Walter</authors>
    <authors>Mathias Koch</authors>
    <maintainers>David Bellot &lt;david.bellot -at- gmail.com&gt;</maintainers>
    <description>uBLAS provides matrix and vector classes as well as basic linear algebra routines. Several dense, packed and sparse storage schemes are supported.</description>
    <documentation>libs/numeric/ublas/</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>optional</key>
    <module>optional</module>
    <boost-version>1.30.0</boost-version>
    <name>Optional</name>
    <authors>Fernando Cacciola</authors>
    <description>Discriminated-union wrapper for optional values.</description>
    <documentation>libs/optional/</documentation>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>optional</key>
    <module>optional</module>
    <boost-version>1.30.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Optional</name>
    <authors>Fernando Cacciola</authors>
    <maintainers>Fernando Cacciola &lt;fernando_cacciola -at- ciudad.com.ar&gt;</maintainers>
    <description>Discriminated-union wrapper for optional values.</description>
    <documentation>libs/optional/</documentation>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>optional</key>
    <module>optional</module>
    <boost-version>1.30.0</boost-version>
    <update-version>1.57.0 beta1</update-version>
    <name>Optional</name>
    <authors>Fernando Cacciola</authors>
    <maintainers>Fernando Cacciola &lt;fernando_cacciola -at- ciudad.com.ar&gt;</maintainers>
    <maintainers>Andrzej Krzemienski &lt;akrzemi1 -at- gmail.com&gt;</maintainers>
    <description>Discriminated-union wrapper for optional values.</description>
    <documentation>libs/optional/</documentation>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>optional</key>
    <module>optional</module>
    <boost-version>1.30.0</boost-version>
    <update-version>1.58.0 beta1</update-version>
    <name>Optional</name>
    <authors>Fernando Cacciola</authors>
    <maintainers>Fernando Cacciola &lt;fernando_cacciola -at- ciudad.com.ar&gt;</maintainers>
    <maintainers>Andrzej Krzemienski &lt;akrzemi1 -at- gmail.com&gt;</maintainers>
    <description>A value-semantic, type-safe wrapper for representing 'optional' (or 'nullable') objects of a given type. An optional object may or may not contain a value of the underlying type.</description>
    <documentation>libs/optional/</documentation>
    <category>Data</category>
  </library>
  <library>
    <key>optional</key>
    <module>optional</module>
    <boost-version>1.30.0</boost-version>
    <update-version>1.58.0</update-version>
    <name>Optional</name>
    <authors>Fernando Cacciola</authors>
    <maintainers>Fernando Cacciola &lt;fernando_cacciola -at- ciudad.com.ar&gt;</maintainers>
    <maintainers>Andrzej Krzemienski &lt;akrzemi1 -at- gmail.com&gt;</maintainers>
    <description>A value-semantic, type-safe wrapper for representing 'optional' (or 'nullable') objects of a given type. An optional object may or may not contain a value of the underlying type.</description>
    <documentation>libs/optional/</documentation>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>parameter</key>
    <module>parameter</module>
    <boost-version>1.33.0</boost-version>
    <name>Parameter</name>
    <authors>David Abrahams</authors>
    <authors>Daniel Wallin</authors>
    <maintainers>David Abrahams &lt;dave -at- boost-consulting.com&gt;</maintainers>
    <maintainers>Daniel Wallin &lt;dalwan01 -at- student.umu.se&gt;</maintainers>
    <description>Boost.Parameter Library - Write functions that accept arguments by name.</description>
    <documentation>libs/parameter/</documentation>
    <category>Emulation</category>
    <category>Programming</category>
  </library>
  <library>
    <key>parameter</key>
    <module>parameter</module>
    <boost-version>1.33.0</boost-version>
    <update-version>1.41.0</update-version>
    <name>Parameter</name>
    <authors>David Abrahams</authors>
    <authors>Daniel Wallin</authors>
    <maintainers>David Abrahams &lt;dave -at- boost-consulting.com&gt;</maintainers>
    <maintainers>Daniel Wallin &lt;daniel -at- boostpro.com&gt;</maintainers>
    <description>Boost.Parameter Library - Write functions that accept arguments by name.</description>
    <documentation>libs/parameter/</documentation>
    <category>Emulation</category>
    <category>Programming</category>
  </library>
  <library>
    <key>phoenix</key>
    <module>phoenix</module>
    <boost-version>1.47.0</boost-version>
    <name>Phoenix</name>
    <authors>Joel de Guzman</authors>
    <authors>Dan Marsden</authors>
    <authors>Thomas Heller</authors>
    <maintainers>Joel de Guzman &lt;joel -at- boost-consulting.com&gt;</maintainers>
    <maintainers>Thomas Heller &lt;thom.heller -at- gmail.com&gt;</maintainers>
    <description>Define small unnamed function objects at the actual call site, and more.</description>
    <documentation>libs/phoenix/</documentation>
    <category>Function-objects</category>
  </library>
  <library>
    <key>phoenix</key>
    <module>phoenix</module>
    <boost-version>1.47.0</boost-version>
    <update-version>1.58.0</update-version>
    <name>Phoenix</name>
    <authors>Joel de Guzman</authors>
    <authors>Dan Marsden</authors>
    <authors>Thomas Heller</authors>
    <authors>John Fletcher</authors>
    <maintainers>Joel de Guzman &lt;djowel -at- gmail.com&gt;</maintainers>
    <maintainers>Thomas Heller &lt;thom.heller -at- gmail.com&gt;</maintainers>
    <maintainers>John Fletcher &lt;J.P.Fletcher -at- aston.ac.uk&gt;</maintainers>
    <description>Define small unnamed function objects at the actual call site, and more.</description>
    <documentation>libs/phoenix/</documentation>
    <category>Function-objects</category>
  </library>
  <library>
    <key>polygon</key>
    <module>polygon</module>
    <boost-version>1.44.0</boost-version>
    <name>Polygon</name>
    <authors>Lucanus Simonson</authors>
    <maintainers>Lucanus Simonson &lt;lucanus.j.simonson -at- intel.com&gt;</maintainers>
    <description>Booleans/clipping, resizing/offsetting and more for planar polygons with integral coordinates.</description>
    <documentation>libs/polygon/</documentation>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>polygon</key>
    <module>polygon</module>
    <boost-version>1.44.0</boost-version>
    <update-version>1.52.0</update-version>
    <name>Polygon</name>
    <authors>Lucanus Simonson</authors>
    <maintainers>Lucanus Simonson &lt;lucanus.j.simonson -at- intel.com&gt;</maintainers>
    <maintainers>Andrii Sydorchuk &lt;sydorchuk.andriy -at- gmail.com&gt;</maintainers>
    <description>Booleans/clipping, resizing/offsetting and more for planar polygons with integral coordinates.</description>
    <documentation>libs/polygon/</documentation>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>polygon</key>
    <module>polygon</module>
    <boost-version>1.44.0</boost-version>
    <update-version>1.54.0</update-version>
    <name>Polygon</name>
    <authors>Lucanus Simonson</authors>
    <authors>Andrii Sydorchuk</authors>
    <maintainers>Lucanus Simonson &lt;lucanus.j.simonson -at- intel.com&gt;</maintainers>
    <maintainers>Andrii Sydorchuk &lt;sydorchuk.andriy -at- gmail.com&gt;</maintainers>
    <description>Voronoi diagram construction and booleans/clipping, resizing/offsetting and more for planar polygons with integral coordinates.</description>
    <documentation>libs/polygon/</documentation>
    <category>Algorithms</category>
    <category>Data</category>
    <category>Math</category>
  </library>
  <library>
    <key>pool</key>
    <module>pool</module>
    <boost-version>1.21.0</boost-version>
    <name>Pool</name>
    <authors>Steve Cleary</authors>
    <description>Memory pool management.</description>
    <documentation>libs/pool/</documentation>
    <category>Memory</category>
  </library>
  <library>
    <key>pool</key>
    <module>pool</module>
    <boost-version>1.21.0</boost-version>
    <update-version>1.34.0</update-version>
    <name>Pool</name>
    <authors>Steve Cleary</authors>
    <maintainers>Stephen Cleary &lt;scleary -at- jerviswebb.com&gt;</maintainers>
    <description>Memory pool management.</description>
    <documentation>libs/pool/</documentation>
    <category>Memory</category>
  </library>
  <library>
    <key>predef</key>
    <module>predef</module>
    <boost-version>1.55.0</boost-version>
    <name>Predef</name>
    <authors>Rene Rivera</authors>
    <maintainers>Rene Rivera &lt;grafikrobot -at- gmail.com&gt;</maintainers>
    <description>This library defines a set of compiler, architecture, operating system, library, and other version numbers from the information it can gather of C, C++, Objective C, and Objective C++ predefined macros or those defined in generally available headers.</description>
    <documentation>libs/predef/</documentation>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>preprocessor</key>
    <module>preprocessor</module>
    <boost-version>1.26.0</boost-version>
    <name>Preprocessor</name>
    <authors>Vesa Karvonen</authors>
    <authors>Paul Mensonides</authors>
    <description>Preprocessor metaprogramming tools including repetition and recursion.</description>
    <documentation>libs/preprocessor/</documentation>
    <category>Preprocessor</category>
  </library>
  <library>
    <key>preprocessor</key>
    <module>preprocessor</module>
    <boost-version>1.26.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Preprocessor</name>
    <authors>Vesa Karvonen</authors>
    <authors>Paul Mensonides</authors>
    <maintainers>Paul Mensonides &lt;pmenso57 -at- comcast.net&gt;</maintainers>
    <description>Preprocessor metaprogramming tools including repetition and recursion.</description>
    <documentation>libs/preprocessor/</documentation>
    <category>Preprocessor</category>
  </library>
  <library>
    <key>program_options</key>
    <module>program_options</module>
    <boost-version>1.32.0</boost-version>
    <name>Program Options</name>
    <authors>Vladimir Prus</authors>
    <description>The program_options library allows program developers to obtain program options, that is (name, value) pairs from the user, via conventional methods such as command line and config file.</description>
    <documentation>libs/program_options/</documentation>
    <category>IO</category>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>program_options</key>
    <module>program_options</module>
    <boost-version>1.32.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Program Options</name>
    <authors>Vladimir Prus</authors>
    <maintainers>Vladimir Prus &lt;ghost -at- cs.msu.su&gt;</maintainers>
    <description>The program_options library allows program developers to obtain program options, that is (name, value) pairs from the user, via conventional methods such as command line and config file.</description>
    <documentation>libs/program_options/</documentation>
    <category>IO</category>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>program_options</key>
    <module>program_options</module>
    <boost-version>1.32.0</boost-version>
    <update-version>1.58.0</update-version>
    <name>Program Options</name>
    <authors>Vladimir Prus</authors>
    <maintainers>Vladimir Prus &lt;ghost -at- cs.msu.su&gt;</maintainers>
    <description>The program_options library allows program developers to obtain program options, that is (name, value) pairs from the user, via conventional methods such as command line and config file.</description>
    <documentation>libs/program_options/</documentation>
    <category>IO</category>
  </library>
  <library>
    <key>program_options</key>
    <module>program_options</module>
    <boost-version>1.32.0</boost-version>
    <update-version>1.59.0 beta1</update-version>
    <name>Program Options</name>
    <authors>Vladimir Prus</authors>
    <maintainers>Vladimir Prus &lt;vladimir.prus -at- gmail.com&gt;</maintainers>
    <description>The program_options library allows program developers to obtain program options, that is (name, value) pairs from the user, via conventional methods such as command line and config file.</description>
    <documentation>libs/program_options/</documentation>
    <category>IO</category>
  </library>
  <library>
    <key>property_map</key>
    <module>property_map</module>
    <boost-version>1.19.0</boost-version>
    <name>Property Map</name>
    <authors>Jeremy Siek</authors>
    <description>Concepts defining interfaces which map key objects to value objects.</description>
    <documentation>libs/property_map/</documentation>
    <category>Containers</category>
    <category>Generic</category>
  </library>
  <library>
    <key>property_map</key>
    <module>property_map</module>
    <boost-version>1.19.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Property Map</name>
    <authors>Jeremy Siek</authors>
    <maintainers>Douglas Gregor &lt;dgregor -at- cs.indiana.edu&gt;</maintainers>
    <description>Concepts defining interfaces which map key objects to value objects.</description>
    <documentation>libs/property_map/</documentation>
    <category>Containers</category>
    <category>Generic</category>
  </library>
  <library>
    <key>property_tree</key>
    <module>property_tree</module>
    <boost-version>1.41.0</boost-version>
    <name>Property Tree</name>
    <authors>Marcin Kalicinski</authors>
    <authors>Sebastian Redl</authors>
    <maintainers>Sebastian Redl &lt;sebastian.redl -at- getdesigned.at&gt;</maintainers>
    <description>A tree data structure especially suited to storing configuration data.</description>
    <documentation>libs/property_tree/</documentation>
    <category>Containers</category>
    <category>Data</category>
  </library>
  <library>
    <key>proto</key>
    <module>proto</module>
    <boost-version>1.37.0</boost-version>
    <name>Proto</name>
    <authors>Eric Niebler</authors>
    <maintainers>Eric Niebler &lt;eric -at- boostpro.com&gt;</maintainers>
    <description>Expression template library and compiler construction toolkit for domain-specific embedded languages.</description>
    <documentation>libs/proto/</documentation>
    <category>Metaprogramming</category>
  </library>
  <library>
    <key>ptr_container</key>
    <module>ptr_container</module>
    <boost-version>1.33.0</boost-version>
    <name>Pointer Container</name>
    <authors>Thorsten Ottosen</authors>
    <maintainers>Thorsten Ottosen &lt;nesotto -at- cs.auc.dk&gt;</maintainers>
    <description>Containers for storing heap-allocated polymorphic objects to ease OO-programming.</description>
    <documentation>libs/ptr_container/</documentation>
    <category>Containers</category>
    <category>Data</category>
  </library>
  <library>
    <key>python</key>
    <module>python</module>
    <boost-version>1.19.0</boost-version>
    <name>Python</name>
    <authors>Dave Abrahams</authors>
    <description>The Boost Python Library is a framework for interfacing Python and C++. It allows you to quickly and seamlessly expose C++ classes functions and objects to Python, and vice-versa, using no special tools -- just your C++ compiler.</description>
    <documentation>libs/python/</documentation>
    <category>Inter-language</category>
  </library>
  <library>
    <key>python</key>
    <module>python</module>
    <boost-version>1.19.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Python</name>
    <authors>Dave Abrahams</authors>
    <maintainers>David Abrahams &lt;dave -at- boost-consulting.com&gt;</maintainers>
    <description>The Boost Python Library is a framework for interfacing Python and C++. It allows you to quickly and seamlessly expose C++ classes functions and objects to Python, and vice-versa, using no special tools -- just your C++ compiler.</description>
    <documentation>libs/python/</documentation>
    <category>Inter-language</category>
  </library>
  <library>
    <key>python</key>
    <module>python</module>
    <boost-version>1.19.0</boost-version>
    <update-version>1.48.0</update-version>
    <name>Python</name>
    <authors>Dave Abrahams</authors>
    <maintainers>Ralf Grosse-Kunstleve &lt;rwgrosse-kunstleve -at- lbl.gov&gt;</maintainers>
    <maintainers>Ravi Rajagopal &lt;lists_ravi -at- lavabit.com&gt;</maintainers>
    <description>The Boost Python Library is a framework for interfacing Python and C++. It allows you to quickly and seamlessly expose C++ classes functions and objects to Python, and vice-versa, using no special tools -- just your C++ compiler.</description>
    <documentation>libs/python/</documentation>
    <category>Inter-language</category>
  </library>
  <library>
    <key>python</key>
    <module>python</module>
    <boost-version>1.19.0</boost-version>
    <update-version>develop</update-version>
    <name>Python</name>
    <authors>Dave Abrahams</authors>
    <maintainers>Stefan Seefeld &lt;stefan -at- seefeld dot name&gt;</maintainers>
    <description>The Boost Python Library is a framework for interfacing Python and C++. It allows you to quickly and seamlessly expose C++ classes functions and objects to Python, and vice-versa, using no special tools -- just your C++ compiler.</description>
    <documentation>libs/python/</documentation>
    <category>Inter-language</category>
  </library>
  <library>
    <key>random</key>
    <module>random</module>
    <boost-version>1.15.0</boost-version>
    <name>Random</name>
    <authors>Jens Maurer</authors>
    <description>A complete system for random number generation.</description>
    <documentation>libs/random/</documentation>
    <std>tr1</std>
    <category>Math</category>
  </library>
  <library>
    <key>random</key>
    <module>random</module>
    <boost-version>1.15.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Random</name>
    <authors>Jens Maurer</authors>
    <maintainers>Jens Maurer &lt;Jens.Maurer -at- gmx.net&gt;</maintainers>
    <description>A complete system for random number generation.</description>
    <documentation>libs/random/</documentation>
    <std>tr1</std>
    <category>Math</category>
  </library>
  <library>
    <key>random</key>
    <module>random</module>
    <boost-version>1.15.0</boost-version>
    <update-version>1.48.0</update-version>
    <name>Random</name>
    <authors>Jens Maurer</authors>
    <maintainers>Steven Watanabe &lt;watanabesj -at- gmail.com&gt;</maintainers>
    <description>A complete system for random number generation.</description>
    <documentation>libs/random/</documentation>
    <std>tr1</std>
    <category>Math</category>
  </library>
  <library>
    <key>range</key>
    <module>range</module>
    <boost-version>1.32.0</boost-version>
    <name>Range</name>
    <authors>Niel Groves</authors>
    <authors>Thorsten Ottosen</authors>
    <description>A new infrastructure for generic algorithms that builds on top of the new iterator concepts.</description>
    <documentation>libs/range/</documentation>
    <category>Algorithms</category>
  </library>
  <library>
    <key>range</key>
    <module>range</module>
    <boost-version>1.32.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Range</name>
    <authors>Niel Groves</authors>
    <authors>Thorsten Ottosen</authors>
    <maintainers>Thorsten Ottosen &lt;nesotto -at- cs.auc.dk&gt;</maintainers>
    <description>A new infrastructure for generic algorithms that builds on top of the new iterator concepts.</description>
    <documentation>libs/range/</documentation>
    <category>Algorithms</category>
  </library>
  <library>
    <key>range</key>
    <module>range</module>
    <boost-version>1.32.0</boost-version>
    <update-version>1.43.0</update-version>
    <name>Range</name>
    <authors>Niel Groves</authors>
    <authors>Thorsten Ottosen</authors>
    <maintainers>Neil Groves &lt;neilgroves -at- googlemail.com&gt;</maintainers>
    <description>A new infrastructure for generic algorithms that builds on top of the new iterator concepts.</description>
    <documentation>libs/range/</documentation>
    <category>Algorithms</category>
  </library>
  <library>
    <key>range</key>
    <module>range</module>
    <boost-version>1.32.0</boost-version>
    <update-version>1.53.0</update-version>
    <name>Range</name>
    <authors>Niel Groves</authors>
    <authors>Thorsten Ottosen</authors>
    <maintainers>Neil Groves &lt;neilgroves -at- googlemail.com&gt;</maintainers>
    <maintainers>Nathan Ridge &lt;zeratul976 -at- hotmail.com&gt;</maintainers>
    <description>A new infrastructure for generic algorithms that builds on top of the new iterator concepts.</description>
    <documentation>libs/range/</documentation>
    <category>Algorithms</category>
  </library>
  <library>
    <key>ratio</key>
    <module>ratio</module>
    <boost-version>1.47.0</boost-version>
    <name>Ratio</name>
    <authors>Vicente J. Botet Escrib&#225;</authors>
    <maintainers>Vicente J. Botet Escriba &lt;vicente.botet -at- wanadoo.fr&gt;</maintainers>
    <description>Compile time rational arithmetic.</description>
    <documentation>libs/ratio/</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>ratio</key>
    <module>ratio</module>
    <boost-version>1.47.0</boost-version>
    <update-version>1.56.0</update-version>
    <name>Ratio</name>
    <authors>Howard Hinnant</authors>
    <authors>Beman Dawes</authors>
    <authors>Vicente J. Botet Escriba</authors>
    <maintainers>Vicente J. Botet Escriba &lt;vicente.botet -at- wanadoo.fr&gt;</maintainers>
    <description>Compile time rational arithmetic. C++11.</description>
    <documentation>libs/ratio/</documentation>
    <std>proposal</std>
    <category>Math</category>
  </library>
  <library>
    <key>rational</key>
    <module>rational</module>
    <boost-version>1.11.0</boost-version>
    <name>Rational</name>
    <authors>Paul Moore</authors>
    <description>A rational number class.</description>
    <documentation>libs/rational/</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>rational</key>
    <module>rational</module>
    <boost-version>1.11.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Rational</name>
    <authors>Paul Moore</authors>
    <maintainers>Jonathan Turkanis &lt;technews -at- kangaroologic.com&gt;</maintainers>
    <description>A rational number class.</description>
    <documentation>libs/rational/</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>rational</key>
    <module>rational</module>
    <boost-version>1.11.0</boost-version>
    <update-version>1.35.0</update-version>
    <name>Rational</name>
    <authors>Paul Moore</authors>
    <maintainers>Jonathan Turkanis &lt;turkanis -at- coderage.com&gt;</maintainers>
    <description>A rational number class.</description>
    <documentation>libs/rational/</documentation>
    <category>Math</category>
  </library>
  <library>
    <key>regex</key>
    <module>regex</module>
    <boost-version>1.18.0</boost-version>
    <name>Regex</name>
    <authors>John Maddock</authors>
    <description>Regular expression library.</description>
    <documentation>libs/regex/</documentation>
    <std>tr1</std>
    <category>String</category>
  </library>
  <library>
    <key>regex</key>
    <module>regex</module>
    <boost-version>1.18.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Regex</name>
    <authors>John Maddock</authors>
    <maintainers>John Maddock &lt;john -at- johnmaddock.co.uk&gt;</maintainers>
    <description>Regular expression library.</description>
    <documentation>libs/regex/</documentation>
    <std>tr1</std>
    <category>String</category>
  </library>
  <library>
    <key>scope_exit</key>
    <module>scope_exit</module>
    <boost-version>1.38.0</boost-version>
    <name>Scope Exit</name>
    <authors>Alexander Nasonov</authors>
    <maintainers>Alexander Nasonov &lt;alexander.nasonov -at- gmail.com&gt;</maintainers>
    <description>Execute arbitrary code at scope exit.</description>
    <documentation>libs/scope_exit/</documentation>
    <category>Emulation</category>
  </library>
  <library>
    <key>scope_exit</key>
    <module>scope_exit</module>
    <boost-version>1.38.0</boost-version>
    <update-version>1.50.0</update-version>
    <name>Scope Exit</name>
    <authors>Alexander Nasonov</authors>
    <maintainers>Alexander Nasonov &lt;alexander.nasonov -at- gmail.com&gt;</maintainers>
    <maintainers>Lorenzo Caminiti &lt;lorcaminiti -at- gmail.com&gt;</maintainers>
    <description>Execute arbitrary code at scope exit.</description>
    <documentation>libs/scope_exit/</documentation>
    <category>Emulation</category>
  </library>
  <library>
    <key>serialization</key>
    <module>serialization</module>
    <boost-version>1.32.0</boost-version>
    <name>Serialization</name>
    <authors>Robert Ramey</authors>
    <description>Serialization for persistence and marshalling.</description>
    <documentation>libs/serialization/</documentation>
    <category>IO</category>
  </library>
  <library>
    <key>serialization</key>
    <module>serialization</module>
    <boost-version>1.32.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Serialization</name>
    <authors>Robert Ramey</authors>
    <maintainers>Robert Ramey &lt;ramey -at- rrsd.com&gt;</maintainers>
    <description>Serialization for persistence and marshalling.</description>
    <documentation>libs/serialization/</documentation>
    <category>IO</category>
  </library>
  <library>
    <key>signals</key>
    <module>signals</module>
    <boost-version>1.29.0</boost-version>
    <name>Signals</name>
    <authors>Doug Gregor</authors>
    <description>Managed signals &amp; slots callback implementation.</description>
    <documentation>libs/signals/</documentation>
    <category>Function-objects</category>
    <category>Patterns</category>
  </library>
  <library>
    <key>signals</key>
    <module>signals</module>
    <boost-version>1.29.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Signals</name>
    <authors>Doug Gregor</authors>
    <maintainers>Douglas Gregor &lt;dgregor -at- cs.indiana.edu&gt;</maintainers>
    <description>Managed signals &amp; slots callback implementation.</description>
    <documentation>libs/signals/</documentation>
    <category>Function-objects</category>
    <category>Patterns</category>
  </library>
  <library>
    <key>signals</key>
    <module>signals</module>
    <boost-version>1.29.0</boost-version>
    <update-version>1.54.0</update-version>
    <status>deprecated</status>
    <name>Signals</name>
    <authors>Doug Gregor</authors>
    <maintainers>Douglas Gregor &lt;dgregor -at- cs.indiana.edu&gt;</maintainers>
    <description>Managed signals &amp; slots callback implementation.</description>
    <documentation>libs/signals/</documentation>
    <category>Function-objects</category>
    <category>Patterns</category>
  </library>
  <library>
    <key>signals2</key>
    <module>signals2</module>
    <boost-version>1.39.0</boost-version>
    <name>Signals2</name>
    <authors>Frank Mori Hess</authors>
    <maintainers>Frank Mori Hess &lt;fmhess -at- users.sourceforge.net&gt;</maintainers>
    <description>Managed signals &amp; slots callback implementation (thread-safe version 2).</description>
    <documentation>libs/signals2/</documentation>
    <category>Function-objects</category>
    <category>Patterns</category>
  </library>
  <library>
    <key>smart_ptr</key>
    <module>smart_ptr</module>
    <boost-version>1.23.0</boost-version>
    <name>Smart Ptr</name>
    <authors>Greg Colvin</authors>
    <authors>Beman Dawes</authors>
    <authors>Peter Dimov</authors>
    <authors>Darin Adler</authors>
    <authors>Glen Fernandes</authors>
    <description>Smart pointer class templates.</description>
    <documentation>libs/smart_ptr/smart_ptr.htm</documentation>
    <std>tr1</std>
    <category>Memory</category>
  </library>
  <library>
    <key>smart_ptr</key>
    <module>smart_ptr</module>
    <boost-version>1.23.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Smart Ptr</name>
    <authors>Greg Colvin</authors>
    <authors>Beman Dawes</authors>
    <authors>Peter Dimov</authors>
    <authors>Darin Adler</authors>
    <authors>Glen Fernandes</authors>
    <maintainers>Beman Dawes &lt;bdawes -at- acm.org&gt;</maintainers>
    <maintainers>Peter Dimov &lt;pdimov -at- mmltd.net&gt;</maintainers>
    <description>Smart pointer class templates.</description>
    <documentation>libs/smart_ptr/smart_ptr.htm</documentation>
    <std>tr1</std>
    <category>Memory</category>
  </library>
  <library>
    <key>smart_ptr</key>
    <module>smart_ptr</module>
    <boost-version>1.23.0</boost-version>
    <update-version>1.56.0</update-version>
    <name>Smart Ptr</name>
    <authors>Greg Colvin</authors>
    <authors>Beman Dawes</authors>
    <authors>Peter Dimov</authors>
    <authors>Darin Adler</authors>
    <authors>Glen Fernandes</authors>
    <maintainers>Beman Dawes &lt;bdawes -at- acm.org&gt;</maintainers>
    <maintainers>Peter Dimov &lt;pdimov -at- pdimov.com&gt;</maintainers>
    <description>Smart pointer class templates.</description>
    <documentation>libs/smart_ptr/smart_ptr.htm</documentation>
    <std>tr1</std>
    <category>Memory</category>
  </library>
  <library>
    <key>smart_ptr</key>
    <module>smart_ptr</module>
    <boost-version>1.23.0</boost-version>
    <update-version>1.57.0 beta1</update-version>
    <name>Smart Ptr</name>
    <authors>Greg Colvin</authors>
    <authors>Beman Dawes</authors>
    <authors>Peter Dimov</authors>
    <authors>Darin Adler</authors>
    <authors>Glen Fernandes</authors>
    <maintainers>Peter Dimov &lt;pdimov -at- pdimov.com&gt;</maintainers>
    <description>Smart pointer class templates.</description>
    <documentation>libs/smart_ptr/smart_ptr.htm</documentation>
    <std>tr1</std>
    <category>Memory</category>
  </library>
  <library>
    <key>sort</key>
    <module>sort</module>
    <boost-version>1.58.0</boost-version>
    <update-version>1.58.0 beta1</update-version>
    <name>Sort</name>
    <authors>Steven Ross</authors>
    <maintainers>Steven Ross &lt;spreadsort -at- gmail.com&gt;</maintainers>
    <description>High-performance templated sort functions.</description>
    <documentation>libs/sort/</documentation>
    <category>Algorithms</category>
  </library>
  <library>
    <key>spirit</key>
    <module>spirit</module>
    <boost-version>1.30.0</boost-version>
    <name>Spirit</name>
    <authors>Joel de Guzman</authors>
    <authors>Hartmut Kaiser</authors>
    <authors>Dan Nuffer</authors>
    <description>LL parser framework represents parsers directly as EBNF grammars in inlined C++.</description>
    <documentation>libs/spirit/</documentation>
    <category>Parsing</category>
    <category>String</category>
  </library>
  <library>
    <key>spirit</key>
    <module>spirit</module>
    <boost-version>1.30.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Spirit</name>
    <authors>Joel de Guzman</authors>
    <authors>Hartmut Kaiser</authors>
    <authors>Dan Nuffer</authors>
    <maintainers>Joel de Guzman &lt;djowel -at- gmail.com&gt;</maintainers>
    <description>LL parser framework represents parsers directly as EBNF grammars in inlined C++.</description>
    <documentation>libs/spirit/</documentation>
    <category>Parsing</category>
    <category>String</category>
  </library>
  <library>
    <key>spirit</key>
    <module>spirit</module>
    <boost-version>1.30.0</boost-version>
    <update-version>1.35.0</update-version>
    <name>Spirit</name>
    <authors>Joel de Guzman</authors>
    <authors>Hartmut Kaiser</authors>
    <authors>Dan Nuffer</authors>
    <maintainers>Spirit Development &lt;spirit-devel -at- lists.sourceforge.net&gt;</maintainers>
    <description>LL parser framework represents parsers directly as EBNF grammars in inlined C++.</description>
    <documentation>libs/spirit/</documentation>
    <category>Parsing</category>
    <category>String</category>
  </library>
  <library>
    <key>spirit</key>
    <module>spirit</module>
    <boost-version>1.30.0</boost-version>
    <update-version>1.36.0</update-version>
    <name>Spirit</name>
    <authors>Joel de Guzman</authors>
    <authors>Hartmut Kaiser</authors>
    <authors>Dan Nuffer</authors>
    <maintainers>Joel de Guzman &lt;joel -at- boost-consulting.com&gt;</maintainers>
    <maintainers>Hartmut Kaiser &lt;hartmut.kaiser -at- gmail.com&gt;</maintainers>
    <description>LL parser framework represents parsers directly as EBNF grammars in inlined C++.</description>
    <documentation>libs/spirit/</documentation>
    <category>Parsing</category>
    <category>String</category>
  </library>
  <library>
    <key>statechart</key>
    <module>statechart</module>
    <boost-version>1.34.0</boost-version>
    <name>Statechart</name>
    <authors>Andreas Huber D&#246;nni</authors>
    <maintainers>Andreas Huber &lt;ahd6974-boostorg -at- yahoo.com&gt;</maintainers>
    <description>Boost.Statechart - Arbitrarily complex finite state machines can be implemented in easily readable and maintainable C++ code.</description>
    <documentation>libs/statechart/</documentation>
    <category>State</category>
  </library>
  <library>
    <key>static_assert</key>
    <module>static_assert</module>
    <boost-version>1.19.0</boost-version>
    <name>Static Assert</name>
    <authors>John Maddock</authors>
    <description>Static assertions (compile time assertions).</description>
    <documentation>libs/static_assert/</documentation>
    <category>Correctness</category>
    <category>Generic</category>
    <category>Metaprogramming</category>
  </library>
  <library>
    <key>static_assert</key>
    <module>static_assert</module>
    <boost-version>1.19.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Static Assert</name>
    <authors>John Maddock</authors>
    <maintainers>John Maddock &lt;john -at- johnmaddock.co.uk&gt;</maintainers>
    <description>Static assertions (compile time assertions).</description>
    <documentation>libs/static_assert/</documentation>
    <category>Correctness</category>
    <category>Generic</category>
    <category>Metaprogramming</category>
  </library>
  <library>
    <key>sync</key>
    <module>sync</module>
    <update-version>develop</update-version>
    <name>Sync</name>
    <authors>Tim Blechmann</authors>
    <authors>Andrey Semashev</authors>
    <maintainers>Tim Blechmann &lt;tim -at- klingt.org&gt;</maintainers>
    <maintainers>Andrey Semashev &lt;andrey.semashev -at- gmail.com&gt;</maintainers>
    <maintainers>Vicente J. Botet Escriba &lt;vicente.botet -at- wanadoo.fr&gt;</maintainers>
    <description>Thread synchronization primitives.</description>
    <documentation>libs/sync/</documentation>
    <category>Concurrent</category>
  </library>
  <library>
    <key>system</key>
    <module>system</module>
    <boost-version>1.35.0</boost-version>
    <name>System</name>
    <authors>Beman Dawes</authors>
    <description>Operating system support, including the diagnostics support that will be part of the C++0x standard library.</description>
    <documentation>libs/system/</documentation>
    <category>System</category>
  </library>
  <library>
    <key>test</key>
    <module>test</module>
    <boost-version>1.21.0</boost-version>
    <name>Test</name>
    <authors>Gennadiy Rozental</authors>
    <description>Support for simple program testing, full unit testing, and for program execution monitoring.</description>
    <documentation>libs/test/</documentation>
    <category>Correctness</category>
  </library>
  <library>
    <key>test</key>
    <module>test</module>
    <boost-version>1.21.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Test</name>
    <authors>Gennadiy Rozental</authors>
    <maintainers>Gennadiy Rozental &lt;gennadiy.rozental -at- thomson.com&gt;</maintainers>
    <description>Support for simple program testing, full unit testing, and for program execution monitoring.</description>
    <documentation>libs/test/</documentation>
    <category>Correctness</category>
  </library>
  <library>
    <key>thread</key>
    <module>thread</module>
    <boost-version>1.25.0</boost-version>
    <name>Thread</name>
    <authors>Anthony Williams (originally William Kempf)</authors>
    <description>Portable C++ multi-threading.</description>
    <documentation>libs/thread/</documentation>
    <std>proposal</std>
    <category>Concurrent</category>
    <category>System</category>
  </library>
  <library>
    <key>thread</key>
    <module>thread</module>
    <boost-version>1.25.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Thread</name>
    <authors>Anthony Williams (originally William Kempf)</authors>
    <maintainers>Michael Glassford &lt;glassfordm -at- hotmail.com&gt;</maintainers>
    <description>Portable C++ multi-threading.</description>
    <documentation>libs/thread/</documentation>
    <std>proposal</std>
    <category>Concurrent</category>
    <category>System</category>
  </library>
  <library>
    <key>thread</key>
    <module>thread</module>
    <boost-version>1.25.0</boost-version>
    <update-version>1.34.0</update-version>
    <name>Thread</name>
    <authors>Anthony Williams (originally William Kempf)</authors>
    <maintainers>Anthony Williams &lt;anthony -at- justsoftwaresolutions.co.uk&gt;</maintainers>
    <maintainers>Roland Schwarz &lt;roland.schwarz -at- chello.at&gt;</maintainers>
    <description>Portable C++ multi-threading.</description>
    <documentation>libs/thread/</documentation>
    <std>proposal</std>
    <category>Concurrent</category>
    <category>System</category>
  </library>
  <library>
    <key>thread</key>
    <module>thread</module>
    <boost-version>1.25.0</boost-version>
    <update-version>1.49.0</update-version>
    <name>Thread</name>
    <authors>Vicente J. Botet Escrib&#225;, Anthony Williams (originally William Kempf)</authors>
    <maintainers>Anthony Williams &lt;anthony -at- justsoftwaresolutions.co.uk&gt;</maintainers>
    <maintainers>Roland Schwarz &lt;roland.schwarz -at- chello.at&gt;</maintainers>
    <description>Portable C++ multi-threading.</description>
    <documentation>libs/thread/</documentation>
    <std>proposal</std>
    <category>Concurrent</category>
    <category>System</category>
  </library>
  <library>
    <key>thread</key>
    <module>thread</module>
    <boost-version>1.25.0</boost-version>
    <update-version>1.55.0</update-version>
    <name>Thread</name>
    <authors>Vicente J. Botet Escrib&#225;, Anthony Williams (originally William Kempf)</authors>
    <maintainers>Anthony Williams &lt;anthony -at- justsoftwaresolutions.co.uk&gt;</maintainers>
    <maintainers>Roland Schwarz &lt;roland.schwarz -at- chello.at&gt;</maintainers>
    <maintainers>Vicente J. Botet Escriba &lt;vicente.botet -at- wanadoo.fr&gt;</maintainers>
    <description>Portable C++ multi-threading.</description>
    <documentation>libs/thread/</documentation>
    <std>proposal</std>
    <category>Concurrent</category>
    <category>System</category>
  </library>
  <library>
    <key>thread</key>
    <module>thread</module>
    <boost-version>1.25.0</boost-version>
    <update-version>1.56.0 beta1</update-version>
    <name>Thread</name>
    <authors>Anthony Williams</authors>
    <authors>Vicente J. Botet Escriba</authors>
    <maintainers>Vicente J. Botet Escriba &lt;vicente.botet -at- wanadoo.fr&gt;</maintainers>
    <maintainers>Niall Douglas &lt;niall -at- nedprod.com&gt;</maintainers>
    <description>Portable C++ multi-threading. C++11, C++14.</description>
    <documentation>libs/thread/</documentation>
    <std>proposal</std>
    <category>Concurrent</category>
    <category>System</category>
  </library>
  <library>
    <key>thread</key>
    <module>thread</module>
    <boost-version>1.25.0</boost-version>
    <update-version>1.56.0</update-version>
    <name>Thread</name>
    <authors>Anthony Williams</authors>
    <authors>Vicente J. Botet Escriba</authors>
    <maintainers>Anthony Williams &lt;anthony -at- justsoftwaresolutions.co.uk&gt;</maintainers>
    <maintainers>Roland Schwarz &lt;roland.schwarz -at- chello.at&gt;</maintainers>
    <maintainers>Vicente J. Botet Escriba &lt;vicente.botet -at- wanadoo.fr&gt;</maintainers>
    <description>Portable C++ multi-threading. C++11, C++14.</description>
    <documentation>libs/thread/</documentation>
    <std>proposal</std>
    <category>Concurrent</category>
    <category>System</category>
  </library>
  <library>
    <key>thread</key>
    <module>thread</module>
    <boost-version>1.25.0</boost-version>
    <update-version>1.57.0 beta1</update-version>
    <name>Thread</name>
    <authors>Anthony Williams</authors>
    <authors>Vicente J. Botet Escriba</authors>
    <maintainers>Vicente J. Botet Escriba &lt;vicente.botet -at- wanadoo.fr&gt;</maintainers>
    <maintainers>Niall Douglas &lt;niall -at- nedprod.com&gt;</maintainers>
    <description>Portable C++ multi-threading. C++11, C++14.</description>
    <documentation>libs/thread/</documentation>
    <std>proposal</std>
    <category>Concurrent</category>
    <category>System</category>
  </library>
  <library>
    <key>throw_exception</key>
    <module>throw_exception</module>
    <update-version>1.56.0 beta1</update-version>
    <name>ThrowException</name>
    <authors>Emil Dotchevski</authors>
    <maintainers>Emil Dotchevski &lt;emil -at- revergestudios.com&gt;</maintainers>
    <description>A common infrastructure for throwing exceptions from Boost libraries.</description>
    <documentation>libs/throw_exception/</documentation>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>throw_exception</key>
    <module>throw_exception</module>
    <boost-version>1.56.0</boost-version>
    <name>ThrowException</name>
    <authors>Emil Dotchevski</authors>
    <maintainers>Emil Dotchevski &lt;emil -at- revergestudios.com&gt;</maintainers>
    <description>A common infrastructure for throwing exceptions from Boost libraries.</description>
    <documentation>libs/throw_exception/</documentation>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>timer</key>
    <module>timer</module>
    <boost-version>1.9.0</boost-version>
    <name>Timer</name>
    <authors>Beman Dawes</authors>
    <description>Event timer, progress timer, and progress display classes.</description>
    <documentation>libs/timer/</documentation>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>timer</key>
    <module>timer</module>
    <boost-version>1.9.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Timer</name>
    <authors>Beman Dawes</authors>
    <maintainers>Beman Dawes &lt;bdawes -at- acm.org&gt;</maintainers>
    <description>Event timer, progress timer, and progress display classes.</description>
    <documentation>libs/timer/</documentation>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>tokenizer</key>
    <module>tokenizer</module>
    <boost-version>1.23.0</boost-version>
    <name>Tokenizer</name>
    <authors>John Bandela</authors>
    <description>Break of a string or other character sequence into a series of tokens.</description>
    <documentation>libs/tokenizer/</documentation>
    <category>Iterators</category>
    <category>String</category>
  </library>
  <library>
    <key>tokenizer</key>
    <module>tokenizer</module>
    <boost-version>1.23.0</boost-version>
    <update-version>1.34.0</update-version>
    <name>Tokenizer</name>
    <authors>John Bandela</authors>
    <maintainers>John R. Bandela &lt;jbandela -at- ufl.edu&gt;</maintainers>
    <description>Break of a string or other character sequence into a series of tokens.</description>
    <documentation>libs/tokenizer/</documentation>
    <category>Iterators</category>
    <category>String</category>
  </library>
  <library>
    <key>tr1</key>
    <module>tr1</module>
    <boost-version>1.34.0</boost-version>
    <name>TR1</name>
    <authors>John Maddock</authors>
    <maintainers>John Maddock &lt;john -at- johnmaddock.co.uk&gt;</maintainers>
    <description>The TR1 library provides an implementation of the C++ Technical Report on Standard Library Extensions. This library does not itself implement the TR1 components, rather it's a thin wrapper that will include your standard library's TR1 implementation (if it has one), otherwise it will include the Boost Library equivalents, and import them into namespace std::tr1.</description>
    <documentation>libs/tr1/</documentation>
    <std>tr1</std>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>tr1</key>
    <module>tr1</module>
    <boost-version>1.34.0</boost-version>
    <update-version>1.56.0</update-version>
    <status>deprecated</status>
    <name>TR1</name>
    <authors>John Maddock</authors>
    <maintainers>John Maddock &lt;john -at- johnmaddock.co.uk&gt;</maintainers>
    <description>The TR1 library provides an implementation of the C++ Technical Report on Standard Library Extensions. This library does not itself implement the TR1 components, rather it's a thin wrapper that will include your standard library's TR1 implementation (if it has one), otherwise it will include the Boost Library equivalents, and import them into namespace std::tr1.</description>
    <documentation>libs/tr1/</documentation>
    <std>tr1</std>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>tti</key>
    <module>tti</module>
    <boost-version>1.54.0</boost-version>
    <name>TTI</name>
    <authors>Edward Diener</authors>
    <maintainers>Edward Diener &lt;eld -at- tropicsoft.com&gt;</maintainers>
    <description>Type Traits Introspection library.</description>
    <documentation>libs/tti/</documentation>
    <category>Generic</category>
    <category>Metaprogramming</category>
  </library>
  <library>
    <key>tuple</key>
    <module>tuple</module>
    <boost-version>1.24.0</boost-version>
    <name>Tuple</name>
    <authors>Jaakko J&#228;rvi</authors>
    <description>Ease definition of functions returning multiple values, and more.</description>
    <documentation>libs/tuple/</documentation>
    <std>tr1</std>
    <category>Data</category>
  </library>
  <library>
    <key>tuple</key>
    <module>tuple</module>
    <boost-version>1.24.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Tuple</name>
    <authors>Jaakko J&#228;rvi</authors>
    <maintainers>Jaakko Jarvi &lt;jarvi -at- cs.tamu.edu&gt;</maintainers>
    <description>Ease definition of functions returning multiple values, and more.</description>
    <documentation>libs/tuple/</documentation>
    <std>tr1</std>
    <category>Data</category>
  </library>
  <library>
    <key>type_erasure</key>
    <module>type_erasure</module>
    <boost-version>1.54.0</boost-version>
    <name>Type Erasure</name>
    <authors>Steven Watanabe</authors>
    <maintainers>Steven Watanabe &lt;steven -at- providere-consulting.com&gt;</maintainers>
    <description>Runtime polymorphism based on concepts.</description>
    <documentation>libs/type_erasure/</documentation>
    <category>Data</category>
  </library>
  <library>
    <key>type_index</key>
    <module>type_index</module>
    <update-version>1.56.0 beta1</update-version>
    <name>Type Index</name>
    <authors>Antony Polukhin</authors>
    <maintainers>Antony Polukhin &lt;antoshkka -at- gmail.com&gt;</maintainers>
    <description>Runtime/Compile time copyable type info.</description>
    <documentation>libs/type_index/</documentation>
    <category>Emulation</category>
  </library>
  <library>
    <key>type_index</key>
    <module>type_index</module>
    <boost-version>1.56.0</boost-version>
    <name>Type Index</name>
    <authors>Antony Polukhin</authors>
    <maintainers>Antony Polukhin &lt;antoshkka -at- gmail.com&gt;</maintainers>
    <description>Runtime/Compile time copyable type info.</description>
    <documentation>libs/type_index/</documentation>
    <category>Emulation</category>
  </library>
  <library>
    <key>type_traits</key>
    <module>type_traits</module>
    <boost-version>1.13.0</boost-version>
    <name>Type Traits</name>
    <authors>John Maddock, Steve Cleary, et al</authors>
    <description>Templates for fundamental properties of types.</description>
    <documentation>libs/type_traits/</documentation>
    <std>tr1</std>
    <category>Generic</category>
    <category>Metaprogramming</category>
  </library>
  <library>
    <key>type_traits</key>
    <module>type_traits</module>
    <boost-version>1.13.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Type Traits</name>
    <authors>John Maddock, Steve Cleary, et al</authors>
    <maintainers>John Maddock &lt;john -at- johnmaddock.co.uk&gt;</maintainers>
    <maintainers>David Abrahams &lt;dave -at- boost-consulting.com&gt;</maintainers>
    <description>Templates for fundamental properties of types.</description>
    <documentation>libs/type_traits/</documentation>
    <std>tr1</std>
    <category>Generic</category>
    <category>Metaprogramming</category>
  </library>
  <library>
    <key>type_traits</key>
    <module>type_traits</module>
    <boost-version>1.13.0</boost-version>
    <update-version>1.34.0</update-version>
    <name>Type Traits</name>
    <authors>John Maddock, Steve Cleary, et al</authors>
    <maintainers>John Maddock &lt;john -at- johnmaddock.co.uk&gt;</maintainers>
    <description>Templates for fundamental properties of types.</description>
    <documentation>libs/type_traits/</documentation>
    <std>tr1</std>
    <category>Generic</category>
    <category>Metaprogramming</category>
  </library>
  <library>
    <key>typeof</key>
    <module>typeof</module>
    <boost-version>1.34.0</boost-version>
    <name>Typeof</name>
    <authors>Arkadiy Vertleyb</authors>
    <authors>Peder Holt</authors>
    <maintainers>Arkadiy Vertleyb &lt;vertleyb -at- hotmail.com&gt;</maintainers>
    <maintainers>Peder Holt &lt;peder.holt -at- gmail.com&gt;</maintainers>
    <description>Typeof operator emulation.</description>
    <documentation>libs/typeof/</documentation>
    <category>Emulation</category>
  </library>
  <library>
    <key>units</key>
    <module>units</module>
    <boost-version>1.36.0</boost-version>
    <name>Units</name>
    <authors>Matthias Schabel</authors>
    <authors>Steven Watanabe</authors>
    <maintainers>Matthias Schabel &lt;boost -at- schabel-family.org&gt;</maintainers>
    <maintainers>Steven Watanabe &lt;steven -at- providere-consulting.com&gt;</maintainers>
    <description>Zero-overhead dimensional analysis and unit/quantity manipulation and conversion.</description>
    <documentation>libs/units/</documentation>
    <category>Domain</category>
  </library>
  <library>
    <key>units</key>
    <module>units</module>
    <boost-version>1.36.0</boost-version>
    <update-version>1.57.0 beta1</update-version>
    <name>Units</name>
    <authors>Matthias Schabel</authors>
    <authors>Steven Watanabe</authors>
    <maintainers>J&#252;rgen Hunold &lt;jhunold -at- gmx.eu&gt;</maintainers>
    <maintainers>Steven Watanabe &lt;steven -at- providere-consulting.com&gt;</maintainers>
    <description>Zero-overhead dimensional analysis and unit/quantity manipulation and conversion.</description>
    <documentation>libs/units/</documentation>
    <category>Domain</category>
  </library>
  <library>
    <key>unordered</key>
    <module>unordered</module>
    <boost-version>1.36.0</boost-version>
    <name>Unordered</name>
    <authors>Daniel James</authors>
    <maintainers>Daniel James &lt;daniel_james -at- fmail.co.uk&gt;</maintainers>
    <description>Unordered associative containers.</description>
    <documentation>libs/unordered/</documentation>
    <std>tr1</std>
    <category>Containers</category>
  </library>
  <library>
    <key>unordered</key>
    <module>unordered</module>
    <boost-version>1.36.0</boost-version>
    <update-version>1.44.0</update-version>
    <name>Unordered</name>
    <authors>Daniel James</authors>
    <maintainers>Daniel James &lt;dnljms -at- gmail.com&gt;</maintainers>
    <description>Unordered associative containers.</description>
    <documentation>libs/unordered/</documentation>
    <std>tr1</std>
    <category>Containers</category>
  </library>
  <library>
    <key>utility</key>
    <module>utility</module>
    <boost-version>1.13.0</boost-version>
    <name>Utility</name>
    <authors>Dave Abrahams and others</authors>
    <description>Class noncopyable plus checked_delete(), checked_array_delete(), next(), prior() function templates, plus base-from-member idiom.</description>
    <documentation>libs/utility/utility.htm</documentation>
    <category>Algorithms</category>
    <category>Function-objects</category>
    <category>Memory</category>
    <category>Miscellaneous</category>
    <category>Patterns</category>
  </library>
  <library>
    <key>utility</key>
    <module>utility</module>
    <boost-version>1.13.0</boost-version>
    <update-version>1.58.0</update-version>
    <name>Utility</name>
    <authors>Dave Abrahams and others</authors>
    <description>Class noncopyable plus checked_delete(), checked_array_delete(), next(), prior() function templates, plus base-from-member idiom.</description>
    <documentation>libs/utility/utility.htm</documentation>
    <category>Algorithms</category>
    <category>Function-objects</category>
    <category>Memory</category>
    <category>Patterns</category>
  </library>
  <library>
    <key>utility</key>
    <module>utility</module>
    <boost-version>1.13.0</boost-version>
    <update-version>1.59.0 beta1</update-version>
    <name>Utility</name>
    <authors>Dave Abrahams and others</authors>
    <description>Class noncopyable plus checked_delete(), checked_array_delete(), next(), prior() function templates, plus base-from-member idiom.</description>
    <documentation>libs/utility/utility.htm</documentation>
    <category>Algorithms</category>
    <category>Function-objects</category>
    <category>Memory</category>
    <category>Patterns</category>
  </library>
  <library>
    <key>utility</key>
    <module>utility</module>
    <boost-version>1.13.0</boost-version>
    <update-version>master</update-version>
    <name>Utility</name>
    <authors>Dave Abrahams and others</authors>
    <description>Class noncopyable plus checked_delete(), checked_array_delete(), next(), prior() function templates, plus base-from-member idiom.</description>
    <documentation>libs/utility/utility.htm</documentation>
    <category>Algorithms</category>
    <category>Function-objects</category>
    <category>Memory</category>
    <category>Patterns</category>
  </library>
  <library>
    <key>utility/call_traits</key>
    <module>utility</module>
    <boost-version>1.13.0</boost-version>
    <name>Call Traits</name>
    <authors>John Maddock, Howard Hinnant, et al</authors>
    <description>Defines types for passing parameters.</description>
    <documentation>libs/utility/call_traits.htm</documentation>
    <category>Generic</category>
  </library>
  <library>
    <key>utility/compressed_pair</key>
    <module>utility</module>
    <boost-version>1.13.0</boost-version>
    <name>Compressed Pair</name>
    <authors>John Maddock, Howard Hinnant, et al</authors>
    <description>Empty member optimization.</description>
    <documentation>libs/utility/compressed_pair.htm</documentation>
    <category>Data</category>
    <category>Patterns</category>
  </library>
  <library>
    <key>utility/enable_if</key>
    <module>utility</module>
    <boost-version>1.31.0</boost-version>
    <name>Enable If</name>
    <authors>Jaakko J&#228;rvi</authors>
    <authors>Jeremiah Willcock</authors>
    <authors>Andrew Lumsdaine</authors>
    <description>Selective inclusion of function template overloads.</description>
    <documentation>libs/utility/enable_if.html</documentation>
    <category>Generic</category>
  </library>
  <library>
    <key>utility/enable_if</key>
    <module>utility</module>
    <boost-version>1.31.0</boost-version>
    <update-version>1.34.0</update-version>
    <name>Enable If</name>
    <authors>Jaakko J&#228;rvi</authors>
    <authors>Jeremiah Willcock</authors>
    <authors>Andrew Lumsdaine</authors>
    <maintainers>Jaakko Jarvi &lt;jarvi -at- cs.tamu.edu&gt;</maintainers>
    <maintainers>Jeremiah Willcock &lt;jewillco -at- osl.iu.edu&gt;</maintainers>
    <description>Selective inclusion of function template overloads.</description>
    <documentation>libs/utility/enable_if.html</documentation>
    <category>Generic</category>
  </library>
  <library>
    <key>utility/enable_if</key>
    <module>core</module>
    <boost-version>1.31.0</boost-version>
    <update-version>1.57.0 beta1</update-version>
    <name>Enable If</name>
    <authors>Jaakko J&#228;rvi</authors>
    <authors>Jeremiah Willcock</authors>
    <authors>Andrew Lumsdaine</authors>
    <maintainers>Jaakko Jarvi &lt;jarvi -at- cs.tamu.edu&gt;</maintainers>
    <maintainers>Jeremiah Willcock &lt;jewillco -at- osl.iu.edu&gt;</maintainers>
    <description>Selective inclusion of function template overloads.</description>
    <documentation>libs/core/doc/html/core/enable_if.html</documentation>
    <category>Generic</category>
  </library>
  <library>
    <key>utility/identity_type</key>
    <module>utility</module>
    <boost-version>1.50.0</boost-version>
    <name>Identity Type</name>
    <authors>Lorenzo Caminiti</authors>
    <maintainers>Lorenzo Caminiti &lt;lorcaminiti -at- gmail.com&gt;</maintainers>
    <description>Wrap types within round parenthesis so they can always be passed as macro parameters.</description>
    <documentation>libs/utility/identity_type/</documentation>
    <category>Preprocessor</category>
  </library>
  <library>
    <key>utility/in_place_factories</key>
    <module>utility</module>
    <boost-version>1.32.0</boost-version>
    <name>In Place Factory, Typed In Place Factory</name>
    <authors>Fernando Cacciola</authors>
    <description>Generic in-place construction of contained objects with a variadic argument-list.</description>
    <documentation>libs/utility/in_place_factories.html</documentation>
    <category>Generic</category>
  </library>
  <library>
    <key>utility/operators</key>
    <module>utility</module>
    <boost-version>1.9.0</boost-version>
    <name>Operators</name>
    <authors>Dave Abrahams</authors>
    <authors>Jeremy Siek</authors>
    <description>Templates ease arithmetic classes and iterators.</description>
    <documentation>libs/utility/operators.htm</documentation>
    <category>Generic</category>
    <category>Iterators</category>
    <category>Math</category>
  </library>
  <library>
    <key>utility/operators</key>
    <module>utility</module>
    <boost-version>1.9.0</boost-version>
    <update-version>1.40.0</update-version>
    <name>Operators</name>
    <authors>Dave Abrahams</authors>
    <authors>Jeremy Siek</authors>
    <maintainers>Daniel Frey &lt;d.frey -at- gmx.de&gt;</maintainers>
    <description>Templates ease arithmetic classes and iterators.</description>
    <documentation>libs/utility/operators.htm</documentation>
    <category>Generic</category>
    <category>Iterators</category>
    <category>Math</category>
  </library>
  <library>
    <key>utility/result_of</key>
    <module>utility</module>
    <boost-version>1.32.0</boost-version>
    <name>Result Of</name>
    <authors></authors>
    <description>Determines the type of a function call expression.</description>
    <documentation>libs/utility/utility.htm#result_of</documentation>
    <category>Function-objects</category>
  </library>
  <library>
    <key>utility/result_of</key>
    <module>utility</module>
    <boost-version>1.32.0</boost-version>
    <update-version>1.43.0</update-version>
    <name>Result Of</name>
    <authors></authors>
    <maintainers>Daniel Walker &lt;daniel.j.walker -at- gmail.com&gt;</maintainers>
    <description>Determines the type of a function call expression.</description>
    <documentation>libs/utility/utility.htm#result_of</documentation>
    <category>Function-objects</category>
  </library>
  <library>
    <key>utility/swap</key>
    <module>utility</module>
    <boost-version>1.38.0</boost-version>
    <name>Swap</name>
    <authors>Joseph Gauterin</authors>
    <maintainers>Joseph Gauterin &lt;joseph.gauterin -at- googlemail.com&gt;</maintainers>
    <description>Enhanced generic swap function.</description>
    <documentation>libs/utility/swap.html</documentation>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>utility/swap</key>
    <module>core</module>
    <boost-version>1.38.0</boost-version>
    <update-version>1.56.0 beta1</update-version>
    <name>Swap</name>
    <authors>Joseph Gauterin</authors>
    <maintainers>Joseph Gauterin &lt;joseph.gauterin -at- googlemail.com&gt;</maintainers>
    <description>Enhanced generic swap function.</description>
    <documentation>libs/core/swap.html</documentation>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>utility/value_initialized</key>
    <module>utility</module>
    <boost-version>1.9.0</boost-version>
    <name>Value Initialized</name>
    <authors>Fernando Cacciola</authors>
    <description>Wrapper for uniform-syntax value initialization, based on the original idea of David Abrahams.</description>
    <documentation>libs/utility/value_init.htm</documentation>
    <category>Miscellaneous</category>
  </library>
  <library>
    <key>uuid</key>
    <module>uuid</module>
    <boost-version>1.42.0</boost-version>
    <name>Uuid</name>
    <authors>Andy Tompkins</authors>
    <maintainers>Andy Tompkins &lt;atompkins -at- fastmail.fm&gt;</maintainers>
    <description>A universally unique identifier.</description>
    <documentation>libs/uuid/</documentation>
    <category>Data</category>
    <category>Domain</category>
  </library>
  <library>
    <key>variant</key>
    <module>variant</module>
    <boost-version>1.31.0</boost-version>
    <name>Variant</name>
    <authors>Eric Friedman</authors>
    <authors>Itay Maman</authors>
    <description>Safe, generic, stack-based discriminated union container.</description>
    <documentation>libs/variant/</documentation>
    <category>Containers</category>
    <category>Data</category>
  </library>
  <library>
    <key>variant</key>
    <module>variant</module>
    <boost-version>1.31.0</boost-version>
    <update-version>1.33.0</update-version>
    <name>Variant</name>
    <authors>Eric Friedman</authors>
    <authors>Itay Maman</authors>
    <maintainers>Eric Friedman &lt;ericbrandon -at- gmail.com&gt;</maintainers>
    <description>Safe, generic, stack-based discriminated union container.</description>
    <documentation>libs/variant/</documentation>
    <category>Containers</category>
    <category>Data</category>
  </library>
  <library>
    <key>vmd</key>
    <module>libs/vmd</module>
    <update-version>develop</update-version>
    <name>VMD</name>
    <authors>Edward Diener</authors>
    <maintainers>Edward Diener &lt;eld -at- tropicsoft.com&gt;</maintainers>
    <description>Variadic Macro Data library.</description>
    <documentation>libs/vmd/</documentation>
    <category>Preprocessor</category>
  </library>
  <library>
    <key>wave</key>
    <module>wave</module>
    <boost-version>1.33.0</boost-version>
    <name>Wave</name>
    <authors>Hartmut Kaiser</authors>
    <maintainers>Hartmut Kaiser &lt;hartmut.kaiser -at- gmail.com&gt;</maintainers>
    <description>The Boost.Wave library is a Standards conformant, and highly configurable implementation of the mandated C99/C++ preprocessor functionality packed behind an easy to use iterator interface.</description>
    <documentation>libs/wave/</documentation>
    <category>String</category>
  </library>
  <library>
    <key>xpressive</key>
    <module>xpressive</module>
    <boost-version>1.34.0</boost-version>
    <name>Xpressive</name>
    <authors>Eric Niebler</authors>
    <maintainers>Eric Niebler &lt;eric -at- boost-consulting.com&gt;</maintainers>
    <description>Regular expressions that can be written as strings or as expression templates, and which can refer to each other and themselves recursively with the power of context-free grammars.</description>
    <documentation>libs/xpressive/</documentation>
    <category>String</category>
  </library>
  <library>
    <key>xpressive</key>
    <module>xpressive</module>
    <boost-version>1.34.0</boost-version>
    <update-version>1.37.0</update-version>
    <name>Xpressive</name>
    <authors>Eric Niebler</authors>
    <maintainers>Eric Niebler &lt;eric -at- boostpro.com&gt;</maintainers>
    <description>Regular expressions that can be written as strings or as expression templates, and which can refer to each other and themselves recursively with the power of context-free grammars.</description>
    <documentation>libs/xpressive/</documentation>
    <category>String</category>
  </library>
</boost>
