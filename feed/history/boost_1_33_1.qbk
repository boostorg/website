[article Version 1.33.1
    [quickbook 1.4]
    [source-mode c++]
    [purpose Updated Libraries: Any, Config, Python, Smart Pointer, Regex, Iostreams, Functional/Hash, Multi-index Containers, Graph, Signals, Thread, and Wave.]
    [authors [Gregor, Douglas]]
    [last-revision Tue,  5 Dec 2006 12:00:00 GMT]
]

[include ext.qbk]
[download http://sourceforge.net/projects/boost/files/boost/1.33.1/]
[documentation /doc/libs/1_33_1/]

[section Updated Libraries]

* [phrase library..[@/doc/libs/1_33_1/doc/html/any.html Any Library]:] Cast to reference types
  introduced in 1.33.0 is now documented on `any_cast` documentation page.
* [phrase library..[@/doc/libs/1_33_1/libs/bind/bind.html Bind Library]:] Bind expressions now
  support [@/doc/libs/1_33_1/libs/bind/bind.html#operators comparisons and negation]. Example:
  `bind(&X::name, _1) < bind(&X::name, _2)`. 
* [phrase library..[@/doc/libs/1_33_1/libs/config/index.html Config Library]:] Don't undef
  `BOOST_LIB_TOOLSET` after use.
* [phrase library..[@/doc/libs/1_33_1/libs/python/doc/index.html Boost.Python]:]
    * The build now assumes Python 2.4 by default, rather than 2.2
    * Support Python that's built without Unicode support
    * Support for wrapping classes with overloaded address-of (`&`) operators
* [phrase library..[@/doc/libs/1_33_1/libs/smart_ptr/index.html Smart Pointer Library]:] Fixed
  problems under Metrowerks CodeWarrior on PowerPC (Mac OS X) with inlining
  on, GNU GCC on PowerPC 64.
* [phrase library..[@/doc/libs/1_33_1/libs/regex/doc/index.html Regex Library]:] Fixed the
  supplied makefiles, and other small compiler specific changes. Refer to the
  [@/doc/libs/1_33_1/libs/regex/doc/history.html regex history page] for more information on
  these and other small changes.
* [phrase library..[@/doc/libs/1_33_1/libs/iostreams/doc/index.html Iostreams Library]:]
  Improved the interface for accessing a chain's components, added `is_open`
  members to the file and file descriptor devices, fixed memory-mapped files on
  Windows, and made minor changes to the documentation.
* [phrase library..[@/doc/libs/1_33_1/libs/python/doc/index.html Boost.Python]:] 
  * Added support for docstrings on nonstatic properties.
  * We now export the client-provided docstrings for `init<optional<> >` and
    ['XXX]`_FUNCTION_OVERLOADS()` for only the last overload.
  * Support for Embedded VC++ 4 and GCC-3.3 on MacOS added
  * Introduced better support for rvalue from-python conversions of shared_ptr.
  * Support for exposing `vector<T*>` with the indexing suite.
  * updated visual studio project build file.
  * Added search feature to the index page.
* [phrase library..[@/doc/libs/1_33_1/libs/functional/hash/index.html Functional/Hash Library]:]
  Fixed the points example.
* [phrase library..[@/doc/libs/1_33_1/libs/multi_index/doc/index.html Multi-index Containers Library]:]
  Fixed a problem with multithreaded code, and other minor changes. Refer to
  the library [@/doc/libs/1_33_1/libs/multi_index/doc/release_notes.html#boost_1_33_1 release
  notes] for further details.
* [phrase library..[@/doc/libs/1_33_1/libs/graph/doc/table_of_contents.html Graph Library]:]
    * Fixed a problem with the relaxed heap on x86 Linux (fixes bug in
      `dijkstra_shortest_paths`).
    * Fixed problems with [@/doc/libs/1_33_1/libs/graph/doc/cuthill_mckee_ordering.html
      `cuthill_mckee_ordering`] and [@/doc/libs/1_33_1/libs/graph/doc/king_ordering.html
      `king_ordering`] producing no results.
    * Added `color_map` parameter to `dijkstra_shortest_paths`.
* [phrase library..[@/doc/libs/1_33_1/libs/signals/doc/index.html Signals Library]:] Fixed
  problems with the use of Signals across shared library boundaries.
* [phrase library..[@/doc/libs/1_33_1/libs/thread/doc/index.html Thread library]:]
  `read_write_mutex` has been removed due to problems with deadlocks.
* [phrase library..[@/doc/libs/1_33_1/libs/wave/index.html Wave library] (V1.2.1):] Fixed a
  couple of problems, refer to the [@/doc/libs/1_33_1/libs/wave/ChangeLog change log] for
  further details.

[endsect]

[section Supported Compilers]

Boost is tested on a wide range of compilers and platforms. Since Boost
libraries rely on modern C++ features not available in all compilers, not
all Boost libraries will work with every compiler. The following compilers
and platforms have been extensively tested with Boost, although many other
compilers and platforms will work as well. For more information, see the
[@https://www.boost.org/regression/release/user/ regression test results].

['New for this release]: Support for building with the newest STLport-5.0 was
added. The support includes building with MinGW Runtime 3.8 plus STLport-5.0
improved to support wide character operations. Apple GCC 4.0, HP Tru64 C++,
and Microsoft Visual C++ 8.0 are supported platforms. We have added an
experimental autoconf-like [^configure] script for Unix-like systems: run
[^configure --help] for more information.

* [@http://developer.apple.com/ Apple GCC] 3.3, 4.0 on Mac OS X.
* [@http://www.codegear.com/products/cppbuilder Borland C++] 5.6.4 on Windows.
* [@http://gcc.gnu.org GNU C++] 2.95.3 (with and without STLport), 3.2.x.,
  3.3.x, 3.4.x, 4.0.x on Windows, Linux and Solaris.
* [@http://h30097.www3.hp.com/cplus/ HP C++ for Tru64 UNIX 7.1].
* [@http://www.intel.com/cd/software/products/asmo-na/eng/compilers/index.htm Intel C++]
  8.1, 9.0 on Windows, Linux.
* [@http://www.metrowerks.com Metrowerks CodeWarrior] 8.3, 9.4, 9.5 on Mac
  OS X and Windows.
* [@http://msdn.microsoft.com/visualc/ Microsoft Visual C++] 6.0 (sp5, with
  and without STLport), 7.0, 7.1, 8.0. Note: Boost does not support the
  non-standard "Safe" C++ Library shipping with Visual C++ 8.0, which may
  result in many spurious warnings from Boost headers and other
  standards-conforming C++ code. To suppress these warnings, define the
  macro `_SCL_SECURE_NO_DEPRECATE`.

[endsect]

[section Acknowledgements]

[phrase inset-left [i /gfx/boost_1_33_0.jpg Medieval Mr. Gregor]]
[@/users/people/doug_gregor.html Douglas Gregor] managed this release.

A great number of people contributed their time and expertise to make this
release possible. Special thanks go to Aleksey Gurtovoy and Misha Bergal,
who managed to keep the regression testing system working throughout the
release process; David Abrahams, Beman Dawes, Aleksey Gurtovoy, Bronek
Kozicki, Rene Rivera and Jonathan Turkanis for greatly improving the quality
of this release; Rene Rivera for the new Boost web page design; and Zoltan
"cad" Juhasz for the new Boost logo.

[endsect]
