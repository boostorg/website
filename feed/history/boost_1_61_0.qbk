[article Version 1.61.0
    [quickbook 1.6]
    [source-mode c++]
    [purpose
        New Libraries:
        Compute, DLL, Hana, Metaparse.
        Updated Libraries:
        Any, Container, Context, Coroutine, Coroutine2,
        Fusion, Geometry, Interprocess, Intrusive,
        Lexical Cast, Log, Move, Optional, Test, Variant.
    ]
    [authors [Dawes, Beman]]
    [/ last-revision is used for the final release date]
    [last-revision ]
]

[import ext.qbk]

[/ Add attributes here as release progresses. See end of file for details. ]
[status beta]
[documentation /doc/libs/1_61_0_b1/]
[final_documentation /doc/libs/1_61_0/]
[download_basename boost_1_61_0_b1]
[download https://sourceforge.net/projects/boost/files/boost/1.61.0.beta.1/]

[section New Libraries]

* [phrase library..[@/libs/compute/ Compute]:]
  Parallel/GPU-computing library

* [phrase library..[@/libs/dll/ DLL]:]
  Library for comfortable work with DLL and DSO. Library provides a portable across platforms way to:
    * load libraries
    * import any native functions and variables
    * make alias names for C++ mangled functions and symbols
    * query libraries for sections and exported symbols
    * self loading and self querying
    * getting program and module location by exported symbol

* [phrase library..[@/libs/hana/ Hana]:]
  A modern C++ metaprogramming library. It provides high level algorithms to
  manipulate heterogeneous sequences, allows writing type-level computations
  with a natural syntax, provides tools to introspect user-defined types and
  much more.

* [phrase library..[@/libs/metaparse/ Metaparse]:]
  A library for generating compile time parsers parsing embedded DSL code as
  part of the C++ compilation process. The library is similar to Spirit, however
  while parsers built with Spirit parse at run-time, parsers built with
  Metaparse parse at compile-time.

[endsect]

[section Updated Libraries]

[/ Example:
* [phrase library..[@/libs/interprocess/ Interprocess]:]
  * Added anonymous shared memory for UNIX systems.
  * `shared_ptr` is movable and supports aliasing ([ticket 1234]).
]

* [phrase library..[@/libs/any/ Any]:]
  * More tests and maintainance fixes.

* [phrase library..[@/libs/container/ Container]:]
  * `small_vector` supports more constructors and assignments.
  * Fixed bugs:
    * [@https://svn.boost.org/trac/boost/ticket/11820 Trac #11820 : ['"compiler error when using operator[] of map"]].
    * [@https://svn.boost.org/trac/boost/ticket/11856 Trac #11856 : ['"pool_resource.cpp error: declaration changes meaning"]].
    * [@https://svn.boost.org/trac/boost/ticket/11866 Trac #11866 : ['"small_vector does not have range constructor"]].
    * [@https://svn.boost.org/trac/boost/ticket/11867 Trac #11867 : ['"small_vector should have constructor and assignment operator taking other small_vector"]].
    * [@https://svn.boost.org/trac/boost/ticket/11912 Trac #11912 : ['"flat_map use of vector::priv_forward_range_insert_expand_backwards may cause move with same source"]].
    * [@https://svn.boost.org/trac/boost/ticket/11957 Trac #11957 : ['"static_vector::max_size() is higher than the capacity"]].
    * [@https://svn.boost.org/trac/boost/ticket/12014 Trac #12014 : ['"boost::container::set can not insert const (ref) range"]].
    * [@https://github.com/boostorg/container/pull/33 GitHub #33: ['Make sure std::string constructor is available]].

* [phrase library..[@/libs/context/ Context]:]
  * [ticket 11246] fails to build for mingw because of undefined symbols
  * [ticket 11365] execution_context.hpp gives errors when building with VS2015RC
  * [ticket 11652] checking __cpp_lib_integer_sequence
  * [ticket 11946] crashes on x86_64/MinGW
  * fcontext_t: no longer part of public API
  * support for WinFiber API removed
  * execution_context: relaxed to C++11
  * execution_context: type-safe transfer of data
  * execution_context: execute function on top of stack
  * execution_context: improved performance
  * execution_context: static member-fn `current()` removed
  * execution_context: new call semantic
  
* [phrase library..[@/libs/coroutine/ Coroutine]:]
  * attribute related to FPU-env removed
  
* [phrase library..[@/libs/coroutine2/ Coroutine2]:]
  * attribute related to FPU-env removed
  * improved performance
  * relaxed to C++11

* [phrase library..[@/libs/fusion/ Fusion]:]
  * Mitigate massive warnings about use of `BOOST_PP_IS_EMPTY` on MSVC8. [ticket 11157]
  * Container's conversion ctor and SFINAE. [ticket 11766]
  * Drop trailing `fusion::void_` support from C++11 `fusion::vector`. [@https://github.com/boostorg/fusion/pull/120 pull-request 120]
  * Workarounds for GCC 4.0 and 4.1 ICE. [ticket 5808] [ticket 7229]
  * Workaround for ambiguous call of `fusion::convert` on GCC 3.4. [@https://github.com/boostorg/fusion/pull/130 pull-request 130]
  
* [phrase library..[@/libs/geometry Geometry]:]
  * Overlays: enhanced implementation for handling colocated intersection
    points, fixing many issues
  * Additional support and fixes for spherical and geographic coordinate
    systems

* [phrase library..[@/libs/interprocess/ Interprocess]:]
  *  Fixed bugs:
    *  [@https://github.com/boostorg/interprocess/pull/23 GitHub Pull #23 (['"Fixed case sensetive for linux mingw"])].

* [phrase library..[@/libs/intrusive/ Intrusive]:]
  *  Fixed bugs:
    *  [@https://svn.boost.org/trac/boost/ticket/11832 Boost Trac #11832: ['clang-cl + boost intrusive = miscompile]]
    *  [@https://svn.boost.org/trac/boost/ticket/11865 Boost Trac #11865: ['Intrusive list explicit ctor error with Clang 3.6 (C++11/14)]]
    *  [@https://svn.boost.org/trac/boost/ticket/11992 Boost Trac #11992: ['Add an overload of insert_check taking a key_type]]
    *  [@https://github.com/boostorg/intrusive/pull/19 GitHub Pull #19: ['ebo_functor_holder: compile fix for copy constructor]]

* [phrase library..[@/libs/lexical_cast/ Lexical Cast]:]
  * Fixed Sun Studio related issues

* [phrase library..[@/libs/log/ Log]:]
  * General changes:
    * The support for `boost::basic_string_ref` and its specializations is deprecated; users are encouraged to switch to `boost::basic_string_view`. The support for `boost::basic_string_ref` will be removed in future releases.
    * Added support for limiting the number of stored log files in the target directory of the file collector. Thanks to Erich Keane for the patch. ([ticket 8746])
  * Bug fixes:
    * Fixed various compilation problems for Windows CE.
    * Fixed compilation problems on Solaris.
    * Added a workaround for MSVC-10 generating broken code for formatters in some cases. ([ticket 12025])
  * See [@/libs/log/doc/html/log/changelog.html changelog] for more details.

* [phrase library..[@/libs/move/ Move]:]
  *  Experimental: asymptotically optimal bufferless merge and sort algorithms: adaptive_merge and adaptive_sort.
  *  Fixed bug:
    * [@https://svn.boost.org/trac/boost/ticket/11758 Trac #11758: ['"BOOST_MOVABLE_BUT_NOT_COPYABLE doesn't reset private access with rvalue ref version"]].

* [phrase library..[@/libs/optional/ Optional]:]
  * Now `boost::optional` is specialized for reference parameters. This addresses a couple of issues:
    * the `sizeof` of optional reference is that of a pointer,
    * some bugs connected to copying optional references are gone,
    * all run-time bugs caused by incorrect reference binding on some compilers are now turned into compile-time errors,
    * you can swap optional references: it is like swapping pointers: shalow, underlying objects are not affected,
    * optional references to abstract types work.
  * Documented nested typedefs ([@https://svn.boost.org/trac/boost/ticket/5193 Trac #5193]).
  * Made the perfect-forwarding constructor SFINAE-friendly, which fixes [@https://svn.boost.org/trac/boost/ticket/12002 Trac #12002]. However, this only works in the newer platforms that correctly implement C++11 `<type_traits>`.
  * Fixed [@https://svn.boost.org/trac/boost/ticket/10445 Trac #10445].

* [phrase library..[@/libs/test/ Test]:]
  * Boost.test v3.2 see the
    '[@/doc/libs/1_61_0/libs/test/doc/html/boost_test/change_log.html Change log]'
    section for details.
  * New features
    * dataset driven test-cases learned to support fixtures and variadic number of arguments
    * dataset driven test-cases sample types now honor move semantics
  * Bug fixes
    * [ticket 6767], [ticket 8905], [ticket 9443], [ticket 11854]
    * [ticket 11887], [ticket 11889], [ticket 11983]

* [phrase library..[@/libs/variant/ Variant]:]
  * Maintainance fixes.


[endsect]

[section Compilers Tested]

Boost's primary test compilers are:

* Linux:
  * Clang: 3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7.1
  * Clang, C++14: 3.7.1, 3.8.0
  * GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.3, 4.8.4, 4.8.5, 4.9.3, 5.3.0
  * GCC, C++11: 4.4.7
  * GCC, C++14: 5.2.1, 5.3.1
  * Intel: 16.0
* Windows:
  * GCC, C++03, mingw: 3.4.5
  * GCC, C++11, mingw: 4.6.4, 4.7.3, 4.8.1
  * GCC, C++14, mingw: 4.9.3, 5.1, 5.2
  * Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0
* Android:
  * Clang: 3.6, 3.7
  * GCC: 4.9, 5.3
* FreeBSD:
  * Clang: 3.4.1, 3.7
  * GCC: 4.8.5, 5.3
* Haiku:
  * GCC, C++11: 4.8.5
* QNX:
  * QCC: 4.4.2
* SunOS:
  * Oracle Solaris Studio: 12.4, 12.5
  * Oracle Solaris Studio, C++11: 12.5

Boost's additional test compilers include:

* Linux:
  * Clang: 3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7.1
  * Clang, c++14: 3.7.1, 3.8.0
  * GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.3, 4.8.5, 4.9.3, 5.3.0, 5.3.1, 6.0.0
  * GCC, C++11: 4.4.7
  * GCC, C++14: 5.2.1
  * Intel: 16.0
* OS X:
  * Apple Clang: 7.0.2
  * G++: 5.3.0
* Windows:
  * GCC, C++03, mingw: 3.4.5
  * GCC, C++11, mingw: 4.6.4, 4.7.3, 4.8.1
  * GCC, C++14, mingw: 4.9.3, 5.1, 5.2
  * GCC, cygwin: 5.3.0
  * Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0
* Android:
  * Clang: 3.6, 3.7
  * GCC: 4.9, 5.3, 6.0
* FreeBSD:
  * Clang: 3.41, 3.7.0
  * GCC, C++11: 4.8.5, 5.3.0, 6.0
  * GCC: 6.0
* Haiku:
  * GCC, C++11: 4.8.5
* QNX:
  * QCC: 4.4.2
* SunOS:
  * Oracle Solaris Studio: 12.4, 12.5
  * Oracle Solaris Studio, C++11: 12.5

[endsect]

[section Acknowledgements]

[@/users/people/beman_dawes.html Beman Dawes],
Eric Niebler,
[@/users/people/rene_rivera.html Rene Rivera],
Daniel James, Vladimir Prus and Marshall Clow
managed this release.

[endsect]

[/
For Beta release, something like:

[status beta]
[download http://sourceforge.net/projects/boost/files/boost/1.56.0.beta.1/]
[documentation /doc/libs/1_56_0_b1/]

Add libraries to 'purpose field'.

For final release:

[status released]
[download http://sourceforge.net/projects/boost/files/boost/1.56.0/]
[download_basename boost_1_56_0]
[documentation /doc/libs/1_56_0/]

Fill in 'authors' field, and date (I normally just copy the date from
the email requesting that I update the site).

Remove this comment.
]
