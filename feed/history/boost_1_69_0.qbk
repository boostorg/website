[article Version 1.69.0
    [quickbook 1.6]
    [source-mode c++]
    [purpose
        New Libraries:
        Updated Libraries:
        [/ Please don't add updated libraries yet, it
           can create unnecessary merge conflicts.]
    ]
    [authors [Dawes, Beman]]
    [/ last-revision is used for the final release date]
    [last-revision ]
]

[/ Use
  [github library_name github_issue_number] to link to a github issue
  [github_pr library_name github_pull_request_number] to link to a github pull request
]

[import ext.qbk]

[section New Libraries]

[/ Example:
* [phrase library..[@/libs/accumulators/ Accumulators]:] Framework for
  incremental calculation, and collection of statistical accumulators, from Eric Niebler.
]

* /TODO/

[endsect]

[section Updated Libraries]

[/ Example:
* [phrase library..[@/libs/interprocess/ Interprocess]:]
  * Added anonymous shared memory for UNIX systems.
  * `shared_ptr` is movable and supports aliasing ([ticket 1234]).
]

* [phrase library..[@/libs/beast/ Beast]:]
  * This version fixes some issues in the examples, and provides a new
    experimental socket which supports built-in timeouts on asynchronous
    operations.
  * For a complete list of changes, please view the official
    [@/libs/beast/doc/html/beast/release_notes.html Release Notes].

* [phrase library..[@/libs/circular_buffer/ CircularBuffer]:]
  * Use the empty base optimization for storing allocators that are empty and
    not final (Glen Fernandes).

* [phrase library..[@/libs/core/ Core]:]
  * Implemented `boost::empty_value`, for library authors to conveniently
    leverage the Empty Base Optimization to store objects of potentially empty
    types (Glen Fernandes). This facility is now used in Boost.Beast,
    Boost.CircularBuffer, Boost.MultiArray, and more.
  * Implemented `boost::quick_exit` to provide the C++11 standard library
    facility `std::quick_exit` functionality (Peter Dimov).
  * Reduced the number of statics in Lightweight Test, and employ lighter abort
    behavior for MSVC compilers upon failure to call `boost::report_errors`
    (Glen Fernandes).

* [phrase library..[@/libs/mp11/ Mp11]:]
  * Implemented the `mp_starts_with` facility (Glen Fernandes).

* [phrase library..[@/libs/multi_array/ MultiArray]:]
  * Improve C++11 allocator model support including: Support for C++11 minimal
    allocators, support for stateful allocators, using the allocator for
    construction and destruction of the value type, and using the empty base
    optimization for storing empty or stateless allocators (Glen Fernandes).

* [phrase library..[@/libs/test/ Test]:]
  * Boost.test v3.9 see the
    [@libs/test/doc/html/boost_test/change_log.html Changes log]
    for more details.
  * New feature:
    * Official support of header-only variant of Boost.Test with multiple translation units.
    * Now possible to manually add a test case by specifying its name, with `BOOST_TEST_CASE_NAME`
    * Better support of `boost::exception` in the logs
  * Bug fixes and pull requests:
    * Trac tickets: [ticket 13380], [ticket 13625], [ticket 13637]
    * GitHub Issues: [github test 149], [github test 150], [github test 156], [github test 158], [github test 163]
    * GitHub Pull Requests: [github_pr test 147], [github_pr test 148], [github_pr test 151], [github_pr test 154], [github_pr test 161]

* [phrase library..[@/libs/utility/ Utility]:]
  * Added support for non-inheritable empty types to `boost::compressed_pair`
    by avoiding the empty base optimization for types which are declared as
    final (Glen Fernandes).

* /TODO/

[endsect]

[section Compilers Tested]

Boost's primary test compilers are:

* /TODO/

Boost's additional test compilers include:

* /TODO/

[endsect]

[section Acknowledgements]

/TODO/

[endsect]
