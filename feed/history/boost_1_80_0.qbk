[article Version 1.80.0
    [quickbook 1.6]
    [source-mode c++]
    [purpose
        New Libraries:
        Updated Libraries:
        [/ Please don't add updated libraries yet, it
           can create unnecessary merge conflicts.]
    ]
    [authors [Dawes, Beman]]
    [/ last-revision is used for the final release date]
    [last-revision ]
]

[import ext.qbk]

[/
Formatting reference: https://www.boost.org/doc/tools/quickbook/
Please keep the list of libraries sorted in lexicographical order.
]

[section New Libraries]

[/ Example:
* [phrase library..[@/libs/accumulators/ Accumulators]:] Framework for
  incremental calculation, and collection of statistical accumulators, from Eric Niebler.
]

* /TODO/

[endsect]

[section Updated Libraries]

* [phrase library..[@/libs/leaf/ LEAF]:]
  * API breaking change: throw leaf::exception(....) now becomes leaf::throw_exception(....)
  * Fixed a bug in support for a rare build configuration (exception handling enabled, diagnostics disabled)
  * Using nullptr instead of 0 throughout
  * Fixed pedantic warnings

* [phrase library..[@/libs/multi_index/ Multi-index Containers]:]
  * Maintenance work.

* [phrase library..[@/libs/stl_interfaces/ STLInterfaces]:]
  * Fix [github stl_interfaces 53]: "missing 'typename' prior to dependent type
    name 'C::const_iterator'"
  * Fix [github stl_interfaces 54]: "Concept check fails on .data() of a view
    on contiguous iterator_interface instantiations"
  * New additions to make it easy to write views and view adaptors that
    work like, and interoperate with, the ones in the standard library:
    * Add workalikes for C++23's `std::bind_back()` and
      `std::range_adaptor_closure` for pre-C++23 code.
    * Add templates `closure` and `adaptor` to make writing view adaptors
      easier, following the examples in
      [@https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2387r3.html
      P2387].

[/ Example:
* [phrase library..[@/libs/interprocess/ Interprocess]:]
  * Added anonymous shared memory for UNIX systems.
  * Move semantics for shared objects ([ticket 1932]).
  * Conform to `std::pointer_traits` requirements ([github_pr interprocess 32])
  * Fixed `named_condition_any` fails to notify ([github interprocess 62])
]

* /TODO/

[endsect]

[section Compilers Tested]

Boost's primary test compilers are:

* /TODO/

Boost's additional test compilers include:

* /TODO/

[endsect]

[section Acknowledgements]

/TODO/

[endsect]
