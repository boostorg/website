(feed/history/boost_1_33_0.qbk
-description_xhtml
"
"
"
"
"  <div id="version_1_33_0.new_libraries">
"    <h3><span class="link">New Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/iostreams/doc/index.html">Iostreams
"          Library</a>:</span>
"  Framework for defining streams, stream buffers and i/o
"          filters, from Jonathan Turkanis.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/functional/hash/index.html">Functional/Hash
"          Library</a>:</span> A TR1 hash function object that can be extended to hash
"          user defined types, from Daniel James.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/parameter/doc/html/index.html">Parameter
"          Library</a>:</span>
"  Write functions that accept arguments by name: especially
"          useful when a function has more than one argument with a useful default
"          value, since named arguments can be passed in any order.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/ptr_container/index.html">Pointer
"          Container Library</a>:</span>
"  Containers for storing heap-allocated polymorphic
"          objects to ease OO-programming, from Thorsten Ottosen.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/wave/index.html">Wave</a>:</span> Standards
"          conformant implementation of the mandated C99/C++ preprocessor functionality
"          packed behind an easy to use iterator interface, from Hartmut Kaiser.
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_33_0.updated_libraries">
"    <h3><span class="link">Updated Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/doc/html/any.html">Any Library</a>:</span> <code><span class="identifier">any_cast</span></code> has been enhanced to allow direct
"          access to <code><span class="identifier">any</span></code>'s held value.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/assign/doc/index.html">Assignment
"          Library</a>:</span> Support for <a href="/doc/libs/1_33_1/libs/ptr_container/index.html">Pointer
"          Container Library</a> and new efficient functions <code><span class="identifier">ref_list_of</span><span class="special">()</span></code> and <code><span class="identifier">cref_list_of</span><span class="special">()</span></code> for generating anonymous ranges.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/bind/bind.html">Bind Library</a>:</span> Bind
"          expressions now support <a href="/doc/libs/1_33_1/libs/bind/bind.html#operators">comparisons
"          and negation</a>. Example: <code><span class="identifier">bind</span><span class="special">(&amp;</span><span class="identifier">X</span><span class="special">::</span><span class="identifier">name</span><span class="special">,</span> <span class="identifier">_1</span><span class="special">)</span> <span class="special">&lt;</span> <span class="identifier">bind</span><span class="special">(&amp;</span><span class="identifier">X</span><span class="special">::</span><span class="identifier">name</span><span class="special">,</span> <span class="identifier">_2</span><span class="special">)</span></code>.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/doc/html/date_time.html">Date-Time
"          Library</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added <a href="/doc/libs/1_33_1/doc/html/date_time/local_time.html">local
"                time and time zone classes</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added <a href="/doc/libs/1_33_1/doc/html/date_time/date_time_io.html">format-based
"                Input/Output facets</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                For a complete list of changes, see the library <a href="/doc/libs/1_33_1/doc/html/date_time/details.html#date_time.changes">change
"                history</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/graph/doc/index.html">Graph Library</a>:</span> Introduced
"          several new algorithms and improved existing algorithms:
"          <ul>
"            <li>
"              <div>
"                <a href="/doc/libs/1_33_1/libs/graph/doc/python.html">Experimental
"                Python bindings</a>, from Doug Gregor and Indiana University.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/doc/libs/1_33_1/libs/graph/doc/floyd_warshall_shortest.html"><code><span class="identifier">floyd</span> <span class="identifier">warshall</span>
"                <span class="identifier">all</span> <span class="identifier">pairs</span>
"                <span class="identifier">shortest</span> <span class="identifier">paths</span></code></a>,
"                from Lauren Foutz and Scott Hill.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/doc/libs/1_33_1/libs/graph/doc/astar_search.html"><code><span class="identifier">astar</span> <span class="identifier">search</span></code></a>,
"                from Kristopher Beevers and Jufeng Peng.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/doc/libs/1_33_1/libs/graph/doc/fruchterman_reingold.html"><code><span class="identifier">fruchterman</span> <span class="identifier">reingold</span>
"                <span class="identifier">force</span> <span class="identifier">directed</span>
"                <span class="identifier">layout</span></code></a>, from Doug
"                Gregor and Indiana University.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/doc/libs/1_33_1/libs/graph/doc/biconnected_components.html"><code><span class="identifier">biconnected</span> <span class="identifier">components</span></code>
"                and <code><span class="identifier">articulation</span> <span class="identifier">points</span></code></a>, from Jeremy Siek,
"                Janusz Piwowarski, and Doug Gregor.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/doc/libs/1_33_1/libs/graph/doc/sequential_vertex_coloring.html"><code><span class="identifier">sequential</span> <span class="identifier">vertex</span>
"                <span class="identifier">coloring</span></code></a> has been
"                updated, tested, and documented.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/doc/libs/1_33_1/libs/graph/doc/gursoy_atun_layout.html"><code><span class="identifier">gursoy</span> <span class="identifier">atun</span>
"                <span class="identifier">layout</span></code></a>, from Jeremiah
"                Willcock and Doug Gregor of Indiana University.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/doc/libs/1_33_1/libs/graph/doc/king_ordering.html"><code><span class="identifier">king</span> <span class="identifier">ordering</span></code></a>,
"                from D. Kevin McGrath of Indiana University.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/doc/libs/1_33_1/libs/graph/doc/cuthill_mckee_ordering.html"><code><span class="identifier">cuthill</span> <span class="identifier">mckee</span>
"                <span class="identifier">ordering</span></code></a> has been
"                recast as an invocation of <code><span class="identifier">breadth</span>
"                <span class="identifier">first</span> <span class="identifier">search</span></code>
"                and now supports graphs with multiple components.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/doc/libs/1_33_1/libs/graph/doc/dijkstra_shortest_paths.html"><code><span class="identifier">dijkstra</span> <span class="identifier">shortest</span>
"                <span class="identifier">paths</span></code></a> now uses
"                a relaxed heap [<a href="/doc/libs/1_33_1/libs/graph/doc/bibliography.html#driscoll88">61</a>]
"                as its priority queue, improving its complexity to O(V log V) and
"                improving real-world performance for larger graphs.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/doc/libs/1_33_1/libs/graph/doc/read_graphviz.html"><code><span class="identifier">read</span> <span class="identifier">graphviz</span></code></a>
"                now has a new, Spirit-based parser that works for all graph types
"                and supports arbitrary properties on the graph, from Ron Garcia.
"                The old, Bison-based GraphViz reader has been deprecated and will
"                be removed in a future Boost release. <a href="/doc/libs/1_33_1/libs/graph/doc/write-graphviz.html"><code><span class="identifier">write</span> <span class="identifier">graphviz</span></code></a>
"                also supports dynamic properties.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/doc/libs/1_33_1/libs/graph/doc/subgraph.html"><code><span class="identifier">subgraph</span></code></a>: <code><span class="identifier">get_property</span></code> now refers to the
"                subgraph property, not the root graph's property.
"              </div>
"            </li>
"            <li>
"              <div>
"                See the <a href="/doc/libs/1_33_1/libs/graph/doc/history.html#by-version">history</a>
"                for additional changes and bug fixes.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/multi_index/doc/index.html">Multi-index
"          Containers Library</a>:</span>
"          <ul>
"            <li>
"              <div>
"                New <a href="/doc/libs/1_33_1/libs/multi_index/doc/tutorial/indices.html#hashed_indices">hashed
"                indices</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added <a href="/doc/libs/1_33_1/libs/multi_index/doc/tutorial/creation.html#serialization">serialization
"                support</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                For a complete list of changes, see the library <a href="/doc/libs/1_33_1/libs/multi_index/doc/release_notes.html">release
"                notes</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/program_options/doc/index.html">Program
"          Options Library</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Option descriptions are now printed with word wrapping.
"              </div>
"            </li>
"            <li>
"              <div>
"                Command line parser can bypass unregistered options, instread of
"                throwing.
"              </div>
"            </li>
"            <li>
"              <div>
"                Removed support for "implicit" (optional) values.
"              </div>
"            </li>
"            <li>
"              <div>
"                New customization method 'command_line_parser::extra_style_parser'.
"                Unlike 'additional_parser', allows the user to parse several tokens
"                and return a vector of options, not just a single option.
"              </div>
"            </li>
"            <li>
"              <div>
"                Work with disabled exceptions.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/property_map/property_map.html">Property
"          Map Library</a>:</span> Introduced the <a href="/doc/libs/1_33_1/libs/property_map/doc/dynamic_property_map.html"><code><span class="identifier">dynamic</span> <span class="identifier">properties</span></code></a>
"          class, which provides dynamically-typed access to a set of property maps.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/python/doc/index.html">Boost.Python</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added support for docstrings on nonstatic properties.
"              </div>
"            </li>
"            <li>
"              <div>
"                We now export the client-provided docstrings for <code><span class="identifier">init</span><span class="special">&lt;</span><span class="identifier">optional</span><span class="special">&lt;&gt;</span> <span class="special">&gt;</span></code>
"                and <em>XXX</em><code><span class="identifier">_FUNCTION_OVERLOADS</span><span class="special">()</span></code> for only the last overload.
"              </div>
"            </li>
"            <li>
"              <div>
"                Support for Embedded VC++ 4 and GCC-3.3 on MacOS added
"              </div>
"            </li>
"            <li>
"              <div>
"                Introduced better support for rvalue from-python conversions of shared_ptr.
"              </div>
"            </li>
"            <li>
"              <div>
"                Support for exposing <code><span class="identifier">vector</span><span class="special">&lt;</span><span class="identifier">T</span><span class="special">*&gt;</span></code> with the indexing suite.
"              </div>
"            </li>
"            <li>
"              <div>
"                updated visual studio project build file.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added search feature to the index page.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <p><span class="library"><a href="/doc/libs/1_33_1/libs/random/index.html">Random Number
"          Library</a>:</span>
"  Improved initialization for <code><span class="identifier">mersenne_twister</span></code>,
"          algorithm by Makoto Matsumoto and Takuji Nishimura, implemented for Boost
"          by Jens Maurer.</p>
"  <p>Note: All test vectors for <code><span class="identifier">mersenne_twister</span></code>s
"          constructed or seeded without parameters or with a single <code><span class="keyword">unsigned</span> <span class="keyword">int</span></code>
"          parameter become invalid.</p>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/range/index.html">Range Library</a>:</span> Minor
"          addition of convenience functions to <code><span class="identifier">iterator</span>
"          <span class="identifier">range</span></code> like <code><span class="identifier">front</span><span class="special">(),</span> <span class="identifier">back</span><span class="special">()</span></code> and <code><span class="keyword">operator</span><span class="special">[]()</span></code>.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/regex/index.html">Regex Library</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Rewritten front end parser now supports (?imsx-imsx) constructs,
"                plus lookbehind assertions and conditional expressions.
"              </div>
"            </li>
"            <li>
"              <div>
"                Thin wrapper classes improve integration with MFC/ATL code.
"              </div>
"            </li>
"            <li>
"              <div>
"                Full (optional) Unicode support via the ICU library. Refer to the
"                <a href="/doc/libs/1_33_1/libs/regex/doc/history.html">regex history
"                page</a> for more information on these and other small changes.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/serialization/doc/index.html">Serialization
"          Library</a>:</span>
"          <ul>
"            <li>
"              <div>
"                DLL version.
"              </div>
"            </li>
"            <li>
"              <div>
"                Auto-linking.
"              </div>
"            </li>
"            <li>
"              <div>
"                Serialization of variants.
"              </div>
"            </li>
"            <li>
"              <div>
"                Improved serialization of shared pointers.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/doc/html/signals.html">Signals Library</a>:</span> added
"          slot blocking/unblocking, from Frantz Maerten. Huge improvements to signal
"          invocation performance from Robert Zeh.
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_33_0.supported_compilers">
"    <h3><span class="link">Supported Compilers</span></h3>
"    <p>
"      Boost is tested on a wide range of compilers and platforms. Since Boost libraries
"      rely on modern C++ features not available in all compilers, not all Boost libraries
"      will work with every compiler. The following compilers and platforms have been
"      extensively tested with Boost, although many other compilers and platforms
"      will work as well. For more information, see the <a href="https://www.boost.org/regression/release/user/">regression
"      test results</a>.
"    </p>
"    <ul>
"      <li>
"        <div>
"          <a href="http://developer.apple.com/">Apple GCC</a> 3.x on Mac OS
"          X.
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://www.codegear.com/products/cppbuilder">Borland C++</a>
"          5.6.4 on Windows.
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://gcc.gnu.org">GNU C++</a> 2.95.3 (with and without
"          STLport), 3.2.x., 3.3.x, 3.4.x, 4.0.x on Windows, Linux and Solaris.
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://www.intel.com/cd/software/products/asmo-na/eng/compilers/index.htm">Intel
"          C++</a> 8.1, 9.0 on Windows, Linux.
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://www.metrowerks.com">Metrowerks CodeWarrior</a> 8.3,
"          9.4, 9.5 on Mac OS X and Windows.
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://msdn.microsoft.com/visualc/">Microsoft Visual C++</a>
"          6.0 (sp5, with and without STLport), 7.0, 7.1, 8.0 beta. Note: due to intermittent
"          problems with Visual C++ 8.0 beta, and the presence of a variety of pre-release
"          compiler builds, we are unable to guarantee compatibility until the final
"          compiler is released.
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_33_0.acknowledgements">
"    <h3><span class="link">Acknowledgements</span></h3>
"    <p>
"      <img src="/gfx/boost_1_33_0.jpg" alt="[]"/><a href="/users/people/doug_gregor.html">Douglas Gregor</a>
"      managed this release.
"    </p>
"    <p>
"      A great number of people contributed their time and expertise to make this
"      release possible. Special thanks go to Aleksey Gurtovoy and Misha Bergal, who
"      managed to keep the regression testing system working throughout the release
"      process; David Abrahams, Beman Dawes, Aleksey Gurtovoy, Rene Rivera and Jonathan
"      Turkanis for greatly improving the quality of this release; Rene Rivera for
"      the new Boost web page design; and Zoltan "cad" Juhasz for the new
"      Boost logo.
"    </p>
"  </div>
"
-hash
"ab3bbc9746f60a298f4148e093d41bbc6d52c12bafd0f1c498bff9b3879d505c
-id
"version_1_33_0
-notice_url
-notice_xml
-pub_date
@Thu, 11 Aug 2005 12:00:00 +0000
-purpose_xml
"
"      New Libraries: Iostream, Hash, Parameter, Pointer Container, Wave. Updated
"      Libraries: Any, Assignment, Bind, Date-Time, Graph, Multi-Index, Program Options,
"      Property Map, Python, Random Number, Range, Regex, Serialization, Signals.
"
-title_xml
"Version 1.33.0
)
(feed/history/boost_1_33_1.qbk
-description_xhtml
"
"
"
"
"  <div id="version_1_33_1.updated_libraries">
"    <h3><span class="link">Updated Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/doc/html/any.html">Any Library</a>:</span> Cast
"          to reference types introduced in 1.33.0 is now documented on <code><span class="identifier">any_cast</span></code> documentation page.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/bind/bind.html">Bind Library</a>:</span> Bind
"          expressions now support <a href="/doc/libs/1_33_1/libs/bind/bind.html#operators">comparisons
"          and negation</a>. Example: <code><span class="identifier">bind</span><span class="special">(&amp;</span><span class="identifier">X</span><span class="special">::</span><span class="identifier">name</span><span class="special">,</span> <span class="identifier">_1</span><span class="special">)</span> <span class="special">&lt;</span> <span class="identifier">bind</span><span class="special">(&amp;</span><span class="identifier">X</span><span class="special">::</span><span class="identifier">name</span><span class="special">,</span> <span class="identifier">_2</span><span class="special">)</span></code>.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/config/index.html">Config Library</a>:</span> Don't
"          undef <code><span class="identifier">BOOST_LIB_TOOLSET</span></code>
"          after use.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/python/doc/index.html">Boost.Python</a>:</span>
"          <ul>
"            <li>
"              <div>
"                The build now assumes Python 2.4 by default, rather than 2.2
"              </div>
"            </li>
"            <li>
"              <div>
"                Support Python that's built without Unicode support
"              </div>
"            </li>
"            <li>
"              <div>
"                Support for wrapping classes with overloaded address-of (<code><span class="special">&amp;</span></code>) operators
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/smart_ptr/index.html">Smart Pointer
"          Library</a>:</span> Fixed problems under Metrowerks CodeWarrior on PowerPC
"          (Mac OS X) with inlining on, GNU GCC on PowerPC 64.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/regex/doc/index.html">Regex Library</a>:</span> Fixed
"          the supplied makefiles, and other small compiler specific changes. Refer
"          to the <a href="/doc/libs/1_33_1/libs/regex/doc/history.html">regex
"          history page</a> for more information on these and other small changes.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/iostreams/doc/index.html">Iostreams
"          Library</a>:</span>
"  Improved the interface for accessing a chain's components,
"          added <code><span class="identifier">is_open</span></code> members to
"          the file and file descriptor devices, fixed memory-mapped files on Windows,
"          and made minor changes to the documentation.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/python/doc/index.html">Boost.Python</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added support for docstrings on nonstatic properties.
"              </div>
"            </li>
"            <li>
"              <div>
"                We now export the client-provided docstrings for <code><span class="identifier">init</span><span class="special">&lt;</span><span class="identifier">optional</span><span class="special">&lt;&gt;</span> <span class="special">&gt;</span></code>
"                and <em>XXX</em><code><span class="identifier">_FUNCTION_OVERLOADS</span><span class="special">()</span></code> for only the last overload.
"              </div>
"            </li>
"            <li>
"              <div>
"                Support for Embedded VC++ 4 and GCC-3.3 on MacOS added
"              </div>
"            </li>
"            <li>
"              <div>
"                Introduced better support for rvalue from-python conversions of shared_ptr.
"              </div>
"            </li>
"            <li>
"              <div>
"                Support for exposing <code><span class="identifier">vector</span><span class="special">&lt;</span><span class="identifier">T</span><span class="special">*&gt;</span></code> with the indexing suite.
"              </div>
"            </li>
"            <li>
"              <div>
"                updated visual studio project build file.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added search feature to the index page.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/functional/hash/index.html">Functional/Hash
"          Library</a>:</span>
"  Fixed the points example.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/multi_index/doc/index.html">Multi-index
"          Containers Library</a>:</span>
"  Fixed a problem with multithreaded code, and
"          other minor changes. Refer to the library <a href="/doc/libs/1_33_1/libs/multi_index/doc/release_notes.html#boost_1_33_1">release
"          notes</a> for further details.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/graph/doc/table_of_contents.html">Graph
"          Library</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed a problem with the relaxed heap on x86 Linux (fixes bug in
"                <code><span class="identifier">dijkstra_shortest_paths</span></code>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed problems with <a href="/doc/libs/1_33_1/libs/graph/doc/cuthill_mckee_ordering.html"><code><span class="identifier">cuthill_mckee_ordering</span></code></a>
"                and <a href="/doc/libs/1_33_1/libs/graph/doc/king_ordering.html"><code><span class="identifier">king_ordering</span></code></a> producing
"                no results.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added <code><span class="identifier">color_map</span></code> parameter
"                to <code><span class="identifier">dijkstra_shortest_paths</span></code>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/signals/doc/index.html">Signals
"          Library</a>:</span> Fixed problems with the use of Signals across shared library
"          boundaries.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/thread/doc/index.html">Thread
"          library</a>:</span>
"  <code><span class="identifier">read_write_mutex</span></code>
"          has been removed due to problems with deadlocks.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_33_1/libs/wave/index.html">Wave library</a>
"          (V1.2.1):</span> Fixed a couple of problems, refer to the <a href="/doc/libs/1_33_1/libs/wave/ChangeLog">change
"          log</a> for further details.
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_33_1.supported_compilers">
"    <h3><span class="link">Supported Compilers</span></h3>
"    <p>
"      Boost is tested on a wide range of compilers and platforms. Since Boost libraries
"      rely on modern C++ features not available in all compilers, not all Boost libraries
"      will work with every compiler. The following compilers and platforms have been
"      extensively tested with Boost, although many other compilers and platforms
"      will work as well. For more information, see the <a href="https://www.boost.org/regression/release/user/">regression
"      test results</a>.
"    </p>
"    <p>
"      <em>New for this release</em>: Support for building with the newest
"      STLport-5.0 was added. The support includes building with MinGW Runtime 3.8
"      plus STLport-5.0 improved to support wide character operations. Apple GCC 4.0,
"      HP Tru64 C++, and Microsoft Visual C++ 8.0 are supported platforms. We have
"      added an experimental autoconf-like <tt>configure</tt> script for
"      Unix-like systems: run <tt>configure --help</tt> for more information.
"    </p>
"    <ul>
"      <li>
"        <div>
"          <a href="http://developer.apple.com/">Apple GCC</a> 3.3, 4.0 on
"          Mac OS X.
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://www.codegear.com/products/cppbuilder">Borland C++</a>
"          5.6.4 on Windows.
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://gcc.gnu.org">GNU C++</a> 2.95.3 (with and without
"          STLport), 3.2.x., 3.3.x, 3.4.x, 4.0.x on Windows, Linux and Solaris.
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://h30097.www3.hp.com/cplus/">HP C++ for Tru64 UNIX 7.1</a>.
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://www.intel.com/cd/software/products/asmo-na/eng/compilers/index.htm">Intel
"          C++</a> 8.1, 9.0 on Windows, Linux.
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://www.metrowerks.com">Metrowerks CodeWarrior</a> 8.3,
"          9.4, 9.5 on Mac OS X and Windows.
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://msdn.microsoft.com/visualc/">Microsoft Visual C++</a>
"          6.0 (sp5, with and without STLport), 7.0, 7.1, 8.0. Note: Boost does not
"          support the non-standard "Safe" C++ Library shipping with Visual
"          C++ 8.0, which may result in many spurious warnings from Boost headers
"          and other standards-conforming C++ code. To suppress these warnings, define
"          the macro <code><span class="identifier">_SCL_SECURE_NO_DEPRECATE</span></code>.
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_33_1.acknowledgements">
"    <h3><span class="link">Acknowledgements</span></h3>
"    <p>
"      <span class="inset-left"><img src="/gfx/boost_1_33_0.jpg" alt="Medieval Mr. Gregor"/></span>
"<a href="/users/people/doug_gregor.html">Douglas
"      Gregor</a> managed this release.
"    </p>
"    <p>
"      A great number of people contributed their time and expertise to make this
"      release possible. Special thanks go to Aleksey Gurtovoy and Misha Bergal, who
"      managed to keep the regression testing system working throughout the release
"      process; David Abrahams, Beman Dawes, Aleksey Gurtovoy, Bronek Kozicki, Rene
"      Rivera and Jonathan Turkanis for greatly improving the quality of this release;
"      Rene Rivera for the new Boost web page design; and Zoltan "cad" Juhasz
"      for the new Boost logo.
"    </p>
"  </div>
"
-hash
"a747e2b1329808fea438b6e7ea065f2bb2b209cebe97ef56deb990a0da0dbc09
-id
"version_1_33_1
-notice_url
-notice_xml
-pub_date
@Tue, 05 Dec 2006 12:00:00 +0000
-purpose_xml
"
"      Updated Libraries: Any, Config, Python, Smart Pointer, Regex, Iostreams, Functional/Hash,
"      Multi-index Containers, Graph, Signals, Thread, and Wave.
"
-title_xml
"Version 1.33.1
)
(feed/history/boost_1_34_0.qbk
-description_xhtml
"
"
"
"
"  <div id="version_1_34_0.new_libraries">
"    <h3><span class="link">New Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_34_0/doc/html/foreach.html">Foreach Library</a>:</span> <code><span class="identifier">BOOST_FOREACH</span></code> macro for easily iterating
"          over the elements of a sequence, from Eric Niebler.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_34_0/libs/statechart/doc/index.html">Statechart
"          Library</a>:</span>
"  Arbitrarily complex finite state machines can be implemented
"          in easily readable and maintainable C++ code, from Andreas Huber.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_34_0/libs/tr1/index.html">TR1 Library</a>:</span> An
"          implementation of the C++ Technical Report on Standard Library Extensions,
"          from John Maddock. This library does not itself implement the TR1 components,
"          rather it's a thin wrapper that will include your standard library's TR1
"          implementation (if it has one), otherwise it will include the Boost Library
"          equivalents, and import them into namespace <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">tr1</span></code>.
"          Highlights include: Reference Wrappers, Smart Pointers, result_of, Function
"          Object Binders, Polymorphic function wrappers, Type Traits, Random Number
"          Generators and Distributions, Tuples, Fixed Size Array, Hash Function Objects,
"          Regular Expressions, and Complex Number Additional Algorithms.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_34_0/doc/html/typeof.html">Typeof Library</a>:</span> Typeof
"          operator emulation, from Arkadiy Vertleyb and Peder Holt.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_34_0/doc/html/xpressive.html">Xpressive
"          Library</a>:</span> Regular expressions that can be written as strings or as
"          expression templates, and that can refer to each other and themselves recursively
"          with the power of context-free grammars, from Eric Niebler.
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_34_0.updated_libraries">
"    <h3><span class="link">Updated Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_34_0/libs/assign/index.html">Assign Library</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Support for <code><span class="identifier">ptr_map</span><span class="special">&lt;</span><span class="identifier">key</span><span class="special">,</span><span class="identifier">T</span><span class="special">&gt;</span></code> via the new function <code><span class="identifier">ptr_map_insert</span><span class="special">()</span></code>
"              </div>
"            </li>
"            <li>
"              <div>
"                Support for initialization of <a href="/doc/libs/1_34_0/libs/ptr_container/index.html">Pointer
"                Containers</a> when the containers hold pointers to an abstract
"                base class.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_34_0/doc/html/date_time.html">Date_time
"          library</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Support for new US/Canada timezone rules and other bug fixes. See
"                <a href="/doc/libs/1_34_0/doc/html/date_time/details.html#changes">Change
"                History</a> for details.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_34_0/libs/filesystem/doc/index.htm">Filesystem
"          Library</a>:</span> Major upgrade in preparation for submission to the C++
"          Standards Committee for TR2. Changes include:
"          <ul>
"            <li>
"              <div>
"                <a href="/doc/libs/1_34_0/libs/filesystem/doc/i18n.html#Internationalization">Internationalization</a>,
"                provided by class templates <em>basic_path</em>, <em>basic_filesystem_error</em>,
"                <em>basic_directory_iterator</em>, and <em>basic_directory_entry</em>.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/doc/libs/1_34_0/libs/filesystem/doc/i18n.html#Simplification">Simplification</a>
"                of the path interface by eliminating special constructors to identify
"                native formats.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/doc/libs/1_34_0/libs/filesystem/doc/i18n.html#Rationalization">Rationalization</a>
"                of predicate function design, including the addition of several new
"                functions.
"              </div>
"            </li>
"            <li>
"              <div>
"                Clearer specification by reference to <a href="/doc/libs/1_34_0/libs/filesystem/doc/design.htm#POSIX-01">POSIX</a>,
"                the ISO/IEEE Single Unix Standard, with provisions for Windows and
"                other operating systems.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/doc/libs/1_34_0/libs/filesystem/doc/i18n.html#Preservation">Preservation</a>
"                of existing user code whenever possible.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/doc/libs/1_34_0/libs/filesystem/doc/i18n.html#More_efficient">More
"                efficient</a> directory iteration.
"              </div>
"            </li>
"            <li>
"              <div>
"                Addition of a <a href="/doc/libs/1_34_0/libs/filesystem/doc/tr2_proposal.html#Class-template-basic_recursive_directory_iterator">recursive
"                directory iterator</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_34_0/libs/function/index.html">Function
"          Library</a>:</span>
"  Boost.Function now implements a small buffer optimization,
"          which can drastically improve the performance when copying or constructing
"          Boost.Function objects storing small function objects. For instance, <code><span class="identifier">bind</span><span class="special">(&amp;</span><span class="identifier">X</span><span class="special">:</span><span class="identifier">foo</span><span class="special">,</span> <span class="special">&amp;</span><span class="identifier">x</span><span class="special">,</span> <span class="identifier">_1</span><span class="special">,</span> <span class="identifier">_2</span><span class="special">)</span></code> requires no heap allocation when placed
"          into a Boost.Function object.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_34_0/libs/functional/hash/index.html">Functional/Hash
"          Library</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Use declarations for standard classes, so that the library doesn't
"                need to include all of their headers
"              </div>
"            </li>
"            <li>
"              <div>
"                Deprecated the <tt>&lt;boost/functional/hash/*.hpp&gt;</tt>
"                headers.
"              </div>
"            </li>
"            <li>
"              <div>
"                Add support for the <code><span class="identifier">BOOST_HASH_NO_EXTENSIONS</span></code>
"                macro, which disables the extensions to TR1
"              </div>
"            </li>
"            <li>
"              <div>
"                Minor improvements to the hash functions for floating point numbers.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_34_0/libs/graph/doc/index.html">Graph Library</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <a href="/doc/libs/1_34_0/libs/graph/doc/maximum_matching.html"><code><span class="identifier">edmonds_maximum_cardinality_matching</span></code></a>,
"                from Aaron Windsor.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/doc/libs/1_34_0/libs/graph/doc/lengauer_tarjan_dominator.htm"><code><span class="identifier">lengauer_tarjan_dominator_tree</span></code></a>,
"                from JongSoo Park.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/doc/libs/1_34_0/libs/graph/doc/compressed_sparse_row.html"><code><span class="identifier">compressed_sparse_row_graph</span></code></a>,
"                from Jeremiah Willcock and Douglas Gregor of Indiana University.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/doc/libs/1_34_0/libs/graph/doc/sorted_erdos_renyi_gen.html"><code><span class="identifier">sorted_erdos_renyi_iterator</span></code></a>,
"                from Jeremiah Willcock of Indiana University.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/doc/libs/1_34_0/libs/graph/doc/biconnected_components.html"><code><span class="identifier">biconnected_components</span></code></a>
"                now supports a visitor and named parameters, from Janusz Piwowarski.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/doc/libs/1_34_0/libs/graph/doc/adjacency_matrix.html"><code><span class="identifier">adjacency_matrix</span></code></a> now models
"                the <a href="/doc/libs/1_34_0/libs/graph/doc/BidirectionalGraph.html">Bidirectional
"                Graph</a> concept.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/doc/libs/1_34_0/libs/graph/doc/dijkstra_shortest_paths.html"><code><span class="identifier">dijkstra_shortest_paths</span></code></a>
"                now calls <code><span class="identifier">vis</span><span class="special">.</span><span class="identifier">initialize_vertex</span></code> for each vertex
"                during initialization.
"              </div>
"            </li>
"            <li>
"              <div>
"                <em>Note:</em> the name of the compiled library for the
"                <a href="/doc/libs/1_34_0/libs/graph/doc/read_graphviz.html">GraphViz
"                reader</a> has changed to <tt>boost_graph</tt> (from
"                <tt>bgl-viz</tt>) to match Boost conventions.
"              </div>
"            </li>
"            <li>
"              <div>
"                See the <a href="/doc/libs/1_34_0/libs/graph/doc/history.html#1.34.0">complete
"                revision history</a> for more information.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_34_0/libs/multi_array/index.html">MultiArray
"          Library</a>:</span>
"  Boost.MultiArray now by default provides range-checking
"          for <code><span class="keyword">operator</span><span class="special">[]</span></code>.
"          Range checking can be disabled by defining the macro <code><span class="identifier">BOOST_DISABLE_ASSERTS</span></code>
"          before including <tt>multi_array.hpp</tt>. A bug in <code><span class="identifier">multi_array</span><span class="special">::</span><span class="identifier">resize</span><span class="special">()</span></code>
"          related to storage orders was fixed.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_34_0/libs/multi_index/doc/index.html">Multi-index
"          Containers Library</a>:</span>
"          <ul>
"            <li>
"              <div>
"                New <a href="/doc/libs/1_34_0/libs/multi_index/doc/tutorial/indices.html#rnd_indices">random
"                access indices</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Non key-based indices feature new <a href="/doc/libs/1_34_0/libs/multi_index/doc/tutorial/indices.html#rearrange">rearrange
"                facilities</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                This version also includes a number of optimizations and usage improvements.
"                For a complete list of changes, see the library <a href="/doc/libs/1_34_0/libs/multi_index/doc/release_notes.html#boost_1_34">release
"                notes</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_34_0/libs/optional/index.html">Optional
"          Library</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">none_t</span> <span class="keyword">and</span>
"                <span class="identifier">boost</span><span class="special">::</span><span class="identifier">none</span></code> now added to Optional's documentation
"              </div>
"            </li>
"            <li>
"              <div>
"                Relational operators now directly support arguments of type <code><span class="char">'T'</span></code> and <code><span class="char">'none_t'</span></code>
"              </div>
"            </li>
"            <li>
"              <div>
"                operator-&gt;() now also works with reference types.
"              </div>
"            </li>
"            <li>
"              <div>
"                Helper functions <code><span class="identifier">make_optional</span><span class="special">(</span><span class="identifier">val</span><span class="special">),</span> <span class="identifier">make_optional</span><span class="special">(</span><span class="identifier">cond</span><span class="special">,</span><span class="identifier">val</span><span class="special">)</span> <span class="keyword">and</span> <span class="identifier">get_optional_value_or</span><span class="special">(</span><span class="identifier">opt</span><span class="special">,</span><span class="identifier">alternative_value</span><span class="special">)</span></code>
"                added.
"              </div>
"            </li>
"            <li>
"              <div>
"                Constructor taking a boolean condition (as well as a value) added.
"              </div>
"            </li>
"            <li>
"              <div>
"                Member function <code><span class="identifier">get_value_or</span><span class="special">(</span><span class="identifier">alternative_value</span><span class="special">)</span></code> added.
"              </div>
"            </li>
"            <li>
"              <div>
"                Incompatbility bug with mpl::apply&lt;&gt; fixed.
"              </div>
"            </li>
"            <li>
"              <div>
"                Converting assignment bug with uninitialized lvalues fixed.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_34_0/libs/parameter/index.html">Parameter
"          Library</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Every ArgumentPack is now a valid <a href="/doc/libs/1_34_0/libs/mpl/doc/refmanual/forward-sequence.html">MPL
"                Forward Sequence.</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                Support for unnamed arguments (those whose keyword is deduced from
"                their types) is added.
"              </div>
"            </li>
"            <li>
"              <div>
"                Support for named and unnamed template arguments is added.
"              </div>
"            </li>
"            <li>
"              <div>
"                New overload generation macros solve the <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2002/n1385.htm">forwarding
"                problem</a> directly.
"              </div>
"            </li>
"            <li>
"              <div>
"                See also the Python library changes, below.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_34_0/libs/ptr_container/index.html">Pointer
"          Container Library</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Support for serialization via <a href="/doc/libs/1_34_0/libs/serialization/index.html">Boost.Serialization.</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                Exceptions can be disabled by defining the macro BOOST_PTR_CONTAINER_NO_EXCEPTIONS
"                before including any header. This macro is defined by default if
"                BOOST_NO_EXCEPTIONS is defined.
"              </div>
"            </li>
"            <li>
"              <div>
"                Additional <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">auto_ptr</span><span class="special">&lt;</span><span class="identifier">T</span><span class="special">&gt;</span></code>
"                overloads added s.t. one can also pass <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">auto_ptr</span><span class="special">&lt;</span><span class="identifier">T</span><span class="special">&gt;</span></code> instead of only <code><span class="identifier">T</span><span class="special">*</span></code>
"                arguments to member functions.
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">transfer</span><span class="special">()</span></code>
"                now has weaker requirements s.t. one can transfer objects from <code><span class="identifier">ptr_container</span><span class="special">&lt;</span><span class="identifier">Derived</span><span class="special">&gt;</span></code>
"                to <code><span class="identifier">ptr_container</span><span class="special">&lt;</span><span class="identifier">Base</span><span class="special">&gt;</span></code>,
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_34_0/libs/python/index.html">Python Library</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Boost.Python now automatically appends C++ signatures to docstrings.
"                The new <a href="/doc/libs/1_34_0/libs/python/doc/v2/docstring_options.html"><tt>docstring_options.hpp</tt></a>
"                header is available to control the content of docstrings.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/doc/libs/1_34_0/libs/python/doc/v2/stl_iterator.html#stl_input_iterator-spec"><code><span class="identifier">stl_input_iterator</span></code></a>, for
"                turning a Python iterable object into an STL input iterator, from
"                Eric Niebler.
"              </div>
"            </li>
"            <li>
"              <div>
"                Support for <code><span class="keyword">void</span><span class="special">*</span></code>
"                conversions is added.
"              </div>
"            </li>
"            <li>
"              <div>
"                Integrated support for wrapping C++ functions built with the parameter
"                library; keyword names are automatically known to docsstrings.
"              </div>
"            </li>
"            <li>
"              <div>
"                Enhancements to the API for better embedding support (<code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">python</span><span class="special">::</span><span class="identifier">import</span><span class="special">()</span></code>,
"                <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">python</span><span class="special">::</span><span class="identifier">exec</span><span class="special">()</span></code>,
"                and <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">python</span><span class="special">::</span><span class="identifier">exec_file</span><span class="special">()</span></code>).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_34_0/doc/html/signals.html">Signals Library</a>:</span> More
"          improvements to signal invocation performance from Robert Zeh.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_34_0/libs/smart_ptr/smart_ptr.htm">Smart
"          Pointers Library</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <a href="/doc/libs/1_34_0/libs/smart_ptr/shared_ptr.htm#allocator_constructor">Allocator
"                support</a> as proposed in <a href="http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2005/n1851.pdf">N1851</a>
"                (162 Kb PDF).
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/doc/libs/1_34_0/libs/smart_ptr/pointer_cast.html"><code><span class="identifier">pointer_cast</span></code></a> and <a href="/doc/libs/1_34_0/libs/smart_ptr/pointer_to_other.html"><code><span class="identifier">pointer_to_other</span></code></a> utilities
"                to allow pointer-independent code, from Ion Gaztanaga.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_34_0/libs/algorithm/string/index.html">String
"          Algorithm Library</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <code><span class="identifier">lexicographical_compare</span></code>
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">join</span></code>
"              </div>
"            </li>
"            <li>
"              <div>
"                New comparison predicates <code><span class="identifier">is_less</span></code>,
"                <code><span class="identifier">is_not_greater</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Negative indexes support (like Perl) in various algorihtms (<code><span class="special">*</span><span class="identifier">_head</span><span class="special">/</span><span class="identifier">tail</span></code>,
"                <code><span class="special">*</span><span class="identifier">_nth</span></code>).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/libs/1_34_0/libs/wave/index.html">Wave Library</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Wave now correctly recognizes pp-number tokens as mandated by the
"                C++ Standard, which are converted to C++ tokens right before they
"                are returned from the library.
"              </div>
"            </li>
"            <li>
"              <div>
"                Several new preprocessing hooks have been added. For a complete description
"                please refer to the related documentation page: <a href="/doc/libs/1_34_0/libs/wave/doc/class_reference_ctxpolicy.html">The
"                Context Policy</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Shared library (dll) support has been added for the generated Wave
"                libraries.
"              </div>
"            </li>
"            <li>
"              <div>
"                The overall error handling has been improved. It is now possible
"                to recover and continue after an error or a warning was issued.
"              </div>
"            </li>
"            <li>
"              <div>
"                Support for optional comment and/or full whitespace preservation
"                in the generated output stream has been added.
"              </div>
"            </li>
"            <li>
"              <div>
"                The Wave library now performs automatic include guard detection to
"                avoid accessing header files more than once, if appropriate.
"              </div>
"            </li>
"            <li>
"              <div>
"                Full interactive mode has been added to the Wave tool. Now the Wave
"                tool can be used just like Python or Perl for instance to interactively
"                try out your BOOST_PP macros. Additionally it is now possible to
"                load and save the current state of an interactive session (macro
"                tables et.al.).
"              </div>
"            </li>
"            <li>
"              <div>
"                The overall performance has been improved by upto 40-60%, depending
"                on the concrete files to process.
"              </div>
"            </li>
"            <li>
"              <div>
"                Support for new pragmas has been added allowing to control certain
"                library features from inside the preprocessed sources (partial output
"                redirection, control of generated whitespace and #line directives).
"              </div>
"            </li>
"            <li>
"              <div>
"                Optional support for #pragma message "..." has been added.
"              </div>
"            </li>
"            <li>
"              <div>
"                This version also includes a number of bug fixes and usage improvements.
"                For a complete list of changes, see the libraries <a href="/doc/libs/1_34_0/libs/wave/ChangeLog">change
"                log</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_34_0.supported_compilers">
"    <h3><span class="link">Supported Compilers</span></h3>
"    <p>
"      Boost is tested on a wide range of compilers and platforms. Since Boost libraries
"      rely on modern C++ features not available in all compilers, not all Boost libraries
"      will work with every compiler. The following compilers and platforms have been
"      extensively tested with Boost, although many other compilers and platforms
"      will work as well. For more information, see the <a href="https://www.boost.org/regression/release/user/">regression
"      test results</a>.
"    </p>
"    <ul>
"      <li>
"        <div>
"          <a href="http://developer.apple.com/">Apple GCC</a> 4.0.1 on Mac
"          OS X.
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://www.codegear.com/products/cppbuilder">Borland C++</a>
"          5.8.2 on Windows.
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://gcc.gnu.org/">GNU C++</a>
"          <ul>
"            <li>
"              <div>
"                3.2.x., 3.3.x, 3.4.x, 4.0.x, 4.1.x on Linux
"              </div>
"            </li>
"            <li>
"              <div>
"                4.1.x on Solaris
"              </div>
"            </li>
"            <li>
"              <div>
"                3.4.x on Windows
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://h30097.www3.hp.com/cplus/">HP aC++ A.06.14</a>.
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://www.intel.com/cd/software/products/asmo-na/eng/compilers/index.htm">Intel
"          C++</a> 9.1 on Windows, 9.0 on Linux.
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://www.metrowerks.com/">Metrowerks CodeWarrior</a>
"          9.4 on Windows.
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://msdn.microsoft.com/visualc/">Microsoft Visual C++</a>
"          6.0 (sp5, with and without STLport), 7.0, 7.1, 8.0. Note: Boost does not
"          support the non-standard "Safe" C++ Library shipping with Visual
"          C++ 8.0, which may result in many spurious warnings from Boost headers
"          and other standards-conforming C++ code. To suppress these warnings, define
"          the macro <code><span class="identifier">_SCL_SECURE_NO_DEPRECATE</span></code>.
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://developers.sun.com/sunstudio/compilers_index.html">Sun
"          Studio 11</a> on Solaris.
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_34_0.acknowledgements">
"    <h3><span class="link">Acknowledgements</span></h3>
"    <p>
"      <a href="/users/people/thomas_witt.html">Thomas Witt</a> managed this
"      release.
"    </p>
"    <p>
"      A great number of people contributed their time and expertise to make this
"      release possible. Special thanks go to Vladimir Prus for making Boost.Build
"      version 2 a reality, David Abrahams for authoring a new getting started guide
"      and Greg D. for answering countless questions.
"    </p>
"  </div>
"
-hash
"00f04c28816837c6a3be75774bad48800844546e09e5f6eb97e6a29d0270db36
-id
"version_1_34_0
-notice_url
-notice_xml
-pub_date
@Sat, 12 May 2007 12:00:00 +0000
-purpose_xml
"
"      New Libraries: Foreach, Statechart, TR1, Typeof, Xpressive. Updated Libraries:
"      Assign, Date_time, Filesystem, Function, Hash, Graph, MultiArray, Multi-Index,
"      Optional, Parameter, Pointer Container, Python, Signals, Smart Pointer, String
"      Algorithm, Wave
"
-title_xml
"Version 1.34.0
)
(feed/history/boost_1_34_1.qbk
-description_xhtml
"
"
"
"
"  <p>
"    This is a bug fix release addressing many problems with the 1.34.0 release. It
"    is a recommended upgrade for all users of Boost 1.34.0. For a complete list of
"    fixes see <a href="http://svn.boost.org/trac/boost/query?status=closed&amp;milestone=Boost+1.34.1">Boost
"    Trac</a>.
"  </p>
"  <div id="version_1_34_1.supported_compilers">
"    <h3><span class="link">Supported Compilers</span></h3>
"    <p>
"      New in this release is improved support for the IBM XL C/C++ compiler.
"    </p>
"    <p>
"      Boost is tested on a wide range of compilers and platforms. Since Boost libraries
"      rely on modern C++ features not available in all compilers, not all Boost libraries
"      will work with every compiler. New in this release The following compilers
"      and platforms have been extensively tested with Boost, although many other
"      compilers and platforms will work as well. For more information, see the <a href="https://www.boost.org/regression/release/user/">regression test results</a>.
"    </p>
"    <ul>
"      <li>
"        <div>
"          <a href="http://developer.apple.com/">Apple GCC</a> 4.0.1 on Mac
"          OS X.
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://www.codegear.com/products/cppbuilder">Borland C++</a>
"          5.8.2 on Windows.
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://gcc.gnu.org/">GNU C++</a>
"          <ul>
"            <li>
"              <div>
"                3.2.x., 3.3.x, 3.4.x, 4.0.x, 4.1.x on Linux
"              </div>
"            </li>
"            <li>
"              <div>
"                4.1.x on Solaris
"              </div>
"            </li>
"            <li>
"              <div>
"                3.4.x on Windows
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://h30097.www3.hp.com/cplus/">HP C++ for Tru64 UNIX 7.1</a>.
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://www.hp.com/go/c++">HP aC++ A.06.14</a>.
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://www.intel.com/cd/software/products/asmo-na/eng/compilers/index.htm">Intel
"          C++</a> 9.1 on Windows, 9.0 on Linux.
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://www.metrowerks.com/">Metrowerks CodeWarrior</a>
"          9.4 on Windows.
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://msdn.microsoft.com/visualc/">Microsoft Visual C++</a>
"          6.0 (sp5, with and without STLport), 7.0, 7.1, 8.0. Note: Boost does not
"          support the non-standard "Safe" C++ Library shipping with Visual
"          C++ 8.0, which may result in many spurious warnings from Boost headers
"          and other standards-conforming C++ code. To suppress these warnings, define
"          the macro <code><span class="identifier">_SCL_SECURE_NO_DEPRECATE</span></code>.
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://developers.sun.com/sunstudio/index.jsp">Sun Studio 11</a>
"          on Solaris.
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_34_1.acknowledgements">
"    <h3><span class="link">Acknowledgements</span></h3>
"    <p>
"      <a href="/users/people/thomas_witt.html">Thomas Witt</a> managed this
"      release.
"    </p>
"    <p>
"      A great number of people contributed their time and expertise to make this
"      release possible. Special thanks go to Kim Barrett consolidating Boost.Iostreams
"      changes from various branches and Rene Rivera for general build and installation
"      support.
"    </p>
"  </div>
"
-hash
"ecf489dfd2ac0e411107511f5e03caa2e72aea77e60cdcea096173ad717d28ad
-id
"version_1_34_1
-notice_url
-notice_xml
-pub_date
@Tue, 24 Jul 2007 12:00:00 +0000
-purpose_xml
"
"      Bugfix Release.
"
-title_xml
"Version 1.34.1
)
(feed/history/boost_1_38_0.qbk
-description_xhtml
"
"
"
"
"  <div id="version_1_38_0.new_libraries">
"    <h3><span class="link">New Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/flyweight/index.html">Flyweight</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Design pattern to manage large quantities of highly redundant objects,
"                from Joaquín M López Muñoz.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/scope_exit/doc/html/index.html">ScopeExit</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Execute arbitrary code at scope exit, from Alexander Nasonov.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/utility/swap.html">Swap</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Enhanced generic swap function, from Joseph Gauterin.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_38_0.updated_libraries">
"    <h3><span class="link">Updated Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/accumulators/index.html">Accumulators</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Add <code><span class="identifier">rolling_sum</span></code>,
"                <code><span class="identifier">rolling_count</span></code> and
"                <code><span class="identifier">rolling_mean</span></code> accumulators.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/html/any.html">Any</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Use a by-value argument for <code><span class="keyword">operator</span><span class="special">=</span></code> (<a href="https://svn.boost.org/trac/boost/ticket/2311">#2311</a>).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/asio/index.html">Asio</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improved compatibility with some Windows firewall software.
"              </div>
"            </li>
"            <li>
"              <div>
"                Ensured arguments to <code><span class="identifier">windows</span><span class="special">::</span><span class="identifier">overlapped_ptr</span><span class="special">::</span><span class="identifier">complete</span><span class="special">()</span></code> are correctly passed to the completion
"                handler (<a href="https://svn.boost.org/trac/boost/ticket/2614">#2614</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed a link problem and multicast failure on QNX (<a href="https://svn.boost.org/trac/boost/ticket/2504">#2504</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/2530">#2530</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed a compile error in SSL support on MinGW / g++ 3.4.5.
"              </div>
"            </li>
"            <li>
"              <div>
"                Drop back to using a pipe for notification if eventfd is not available
"                at runtime on Linux (<a href="https://svn.boost.org/trac/boost/ticket/2683">#2683</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Various minor bug and documentation fixes (<a href="https://svn.boost.org/trac/boost/ticket/2534">#2534</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/2541">#2541</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/2607">#2607</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/2617">#2617</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/2619">#2619</a>)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/config/index.html">Config</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Add new macros BOOST_NO_STD_UNORDERED and BOOST_NO_INITIALIZER_LISTS.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added Codegear compiler support.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added Dragonfly to the BSD family of configs.
"              </div>
"            </li>
"            <li>
"              <div>
"                Updated MSVC's binary ABI settings to match compiler default when
"                doing 64-bit builds.
"              </div>
"            </li>
"            <li>
"              <div>
"                Recognise latest compilers from MS and Intel.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/date_time/index.html">Date_Time</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added support for formatting and reading time durations longer than
"                24 hours with new formatter: <code><span class="special">%</span><span class="number">0</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Removed the <code><span class="identifier">testfrmwk</span><span class="special">.</span><span class="identifier">hpp</span></code>
"                file from the public include directory.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed several bugs and compile errors.
"              </div>
"            </li>
"            <li>
"              <div>
"                For full details see the <a href="/doc/libs/1_38_0/doc/html/date_time/details.html#date_time.changes">change
"                history</a>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/exception/index.html">Exception</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improved and more customizable <a href="/libs/exception/doc/diagnostic_information.html">diagnostic_information</a>
"                output.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/filesystem/index.html">Filesystem</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix native(name) test failures on POSIX-like systems.
"              </div>
"            </li>
"            <li>
"              <div>
"                Several bugfixes (<a href="https://svn.boost.org/trac/boost/ticket/2543">#2543</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/2224">#2224</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/2531">#2531</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/1840">#1840</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/2542">#2542</a>).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/graph/index.html">Graph</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added a new algorithms for Travelling Salesman Problem approximation
"                (<code><span class="identifier">metric_tsp_approx</span></code>)
"                and resource-constrained Shortest Paths (<code><span class="identifier">r_c_shortest_paths</span></code>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Support for named vertices in <code><span class="identifier">adjacency_list</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                A number of bugfixes ( <a href="https://svn.boost.org/trac/boost/ticket/416">#416</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/1622">#1622</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/1700">#1700</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/2209">#2209</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/2392">#2392</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/2460">#2460</a>,
"                and <a href="https://svn.boost.org/trac/boost/ticket/2550">#2550</a>)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/functional/hash/index.html">Hash</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <code><span class="identifier">boost</span><span class="special">/</span><span class="identifier">functional</span><span class="special">/</span><span class="identifier">detail</span><span class="special">/</span><span class="identifier">container_fwd</span><span class="special">.</span><span class="identifier">hpp</span></code> has been moved to <code><span class="identifier">boost</span><span class="special">/</span><span class="identifier">detail</span><span class="special">/</span><span class="identifier">container_fwd</span><span class="special">.</span><span class="identifier">hpp</span></code>. The current location is deprecated.
"              </div>
"            </li>
"            <li>
"              <div>
"                For more detail, see the <a href="/doc/html/hash/changes.html#hash.changes.boost_1_38_0">library
"                changelog</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/interprocess/index.html">Interprocess</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Updated documentation to show rvalue-references functions instead
"                of emulation functions.
"              </div>
"            </li>
"            <li>
"              <div>
"                More non-copyable classes are now movable.
"              </div>
"            </li>
"            <li>
"              <div>
"                Move-constructor and assignments now leave moved object in default-constructed
"                state instead of just swapping contents.
"              </div>
"            </li>
"            <li>
"              <div>
"                Several bugfixes (<a href="https://svn.boost.org/trac/boost/ticket/2391">#2391</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/2431">#2431</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/1390">#1390</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/2570">#2570</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/2528">#2528</a>).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/intrusive/index.html">Intrusive</a>:</span>
"          <ul>
"            <li>
"              <div>
"                New treap-based containers: treap, treap_set, treap_multiset.
"              </div>
"            </li>
"            <li>
"              <div>
"                Corrected compilation bug for Windows-based 64 bit compilers.
"              </div>
"            </li>
"            <li>
"              <div>
"                Corrected exception-safety bugs in container constructors.
"              </div>
"            </li>
"            <li>
"              <div>
"                Updated documentation to show rvalue-references functions instead
"                of emulation functions.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/conversion/lexical_cast.htm">Lexical Cast</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Changed to work without RTTI when <code><span class="identifier">BOOST_NO_TYPEID</span></code>
"                is defined (<a href="https://svn.boost.org/trac/boost/ticket/1220">#1220</a>).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/math/doc/sf_and_dist/html/index.html">Math</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added Johan Råde's optimised floating point classification routines.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed code so that it compiles in GCC's -pedantic mode (bug report
"                <a href="https://svn.boost.org/trac/boost/ticket/1451">#1451</a>).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/multi_index/doc/index.html">Multi-index Containers</a>:</span>
"  Some
"          redundant type definitions have been deprecated. Consult the library <a href="/libs/multi_index/doc/release_notes.html#boost_1_38">release notes</a>
"          for further information.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/proto/index.html">Proto</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix problem with SFINAE of binary operators (Bug <a href="https://svn.boost.org/trac/boost/ticket/2407">2407</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix <code><span class="identifier">proto</span><span class="special">::</span><span class="identifier">call</span></code> transform for callable transforms
"                with &gt;3 arguments.
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">result_of</span><span class="special">::</span><span class="identifier">value</span></code> changed behavior for array-by-value
"                terminals.
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">unpack_expr</span></code> requires
"                only Forward Sequences rather than Random Access Sequences.
"              </div>
"            </li>
"            <li>
"              <div>
"                Deprecate legacy undocumented <code><span class="identifier">BOOST_PROTO_DEFINE_</span><span class="special">(</span><span class="identifier">VARARG_</span><span class="special">)</span><span class="identifier">FUNCTION_TEMPLATE</span></code>
"                macros.
"              </div>
"            </li>
"            <li>
"              <div>
"                Add <code><span class="identifier">BOOST_PROTO_REPEAT</span></code>
"                and <code><span class="identifier">BOOST_PROTO_LOCAL_ITERATE</span></code>
"                macros to help with repetitive code generation
"              </div>
"            </li>
"            <li>
"              <div>
"                Support for nullary expressions with tag types other than <code><span class="identifier">proto</span><span class="special">::</span><span class="identifier">tag</span><span class="special">::</span><span class="identifier">terminal</span></code>
"              </div>
"            </li>
"            <li>
"              <div>
"                Allow 0- and 1-argument variants of <code><span class="identifier">proto</span><span class="special">::</span><span class="identifier">or_</span></code>
"                and <code><span class="identifier">proto</span><span class="special">::</span><span class="identifier">and_</span></code>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/regex/index.html">Regex</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <em>Breaking change</em>: empty expressions, and empty
"                alternatives are now allowed when using the Perl regular expression
"                syntax. This change has been added for Perl compatibility, when the
"                new <code><span class="identifier">syntax_option_type</span></code>
"                <em>no_empty_expressions</em> is set then the old behaviour
"                is preserved and empty expressions are prohibited. This is issue
"                <a href="https://svn.boost.org/trac/boost/ticket/1081">#1081</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added support for Perl style ${n} expressions in format strings (issue
"                <a href="https://svn.boost.org/trac/boost/ticket/2556">#2556</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Added support for accessing the location of sub-expressions within
"                the regular expression string (issue <a href="https://svn.boost.org/trac/boost/ticket/2269">#2269</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed compiler compatibility issues <a href="https://svn.boost.org/trac/boost/ticket/2244">#2244</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/2514">#2514</a>,
"                and <a href="https://svn.boost.org/trac/boost/ticket/2244">#2458</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/doc/html/thread.html">Thread</a>:</span>
"          <ul>
"            <li>
"              <div>
"                No longer catches unhandled exceptions in threads as this debuggers
"                couldn't identify the cause of unhandled exceptions in threads. An
"                unhandled exception will still cause the application to terminate.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/tr1/index.html">TR1</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added support for the TR1 math functions and the unordered containers.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/type_traits/index.html">Type Traits</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added support for Codegear intrinsics.
"              </div>
"            </li>
"            <li>
"              <div>
"                Minor tweaks to warning suppression and alignment_of code.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/unordered/index.html">Unordered</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Use <a href="/libs/utility/swap.html"><code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">swap</span></code></a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Use a larger prime number list for selecting the number of buckets.
"              </div>
"            </li>
"            <li>
"              <div>
"                Use <a href="/libs/type_traits/doc/html/boost_typetraits/category/alignment.html">aligned
"                storage</a> to store the types.
"              </div>
"            </li>
"            <li>
"              <div>
"                Add support for C++0x initializer lists where they're available.
"              </div>
"            </li>
"            <li>
"              <div>
"                For more detail, see the <a href="/doc/html/unordered/changes.html#unordered.changes.boost_1_38_0">library
"                changelog</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/xpressive/index.html">Xpressive</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <code><span class="identifier">basic_regex</span></code> gets
"                nested <code><span class="identifier">syntax_option_flags</span></code>
"                and <code><span class="identifier">value_type</span></code> typedef,
"                for compatibility with <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">basic_regex</span></code>
"              </div>
"            </li>
"            <li>
"              <div>
"                Ported to Proto v4; Proto v2 at <tt>boost/xpressive/proto</tt>
"                has been removed.
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">regex_error</span></code> inherits
"                from <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">exception</span></code>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_38_0.other_changes">
"    <h3><span class="link">Other Changes</span></h3>
"    <ul>
"      <li>
"        <div>
"          Experimental support for building Boost with <a href="http://www.cmake.org/">CMake</a>
"          has been introduced in this version. For more details see the <a href="https://svn.boost.org/trac/boost/wiki/CMake">wiki</a>,
"          Discussion is taking place on the <a href="https://lists.boost.org/mailman/listinfo.cgi/boost-cmake">Boost-cmake
"          mailing list</a>.
"        </div>
"      </li>
"      <li>
"        <div>
"          Fixed subversion properties for several files. Most notably, unix shell
"          scripts should always have unix line endings, even in the windows packages.
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_38_0.compilers_tested">
"    <h3><span class="link">Compilers Tested</span></h3>
"    <p>
"      Boost's primary test compilers are:
"    </p>
"    <ul>
"      <li>
"        <div>
"          OS X:
"          <ul>
"            <li>
"              <div>
"                GCC 4.0.1 on Intel OS X 10.4.10, 10.5.2
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC 4.0.1 on PowerPC OS X 10.4.9
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Linux:
"          <ul>
"            <li>
"              <div>
"                GCC 4.3.2 on Ubuntu Linux.
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC 4.3.3 on Debian "unstable".
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          HP-UX:
"          <ul>
"            <li>
"              <div>
"                GCC 4.2.1 on HP-UX 64-bit.
"              </div>
"            </li>
"            <li>
"              <div>
"                HP C/aC++ B3910B A.06.17 on HP-UX 64-bit.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Windows:
"          <ul>
"            <li>
"              <div>
"                Visual C++ 7.1 SP1, 8.0 SP1 and 9.0 SP1 on Windows XP.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"    <p>
"      Boost's additional test compilers include:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Linux:
"          <ul>
"            <li>
"              <div>
"                GCC 4.1.1, 4.2.1 on 64-bit Red Hat Enterprise Linux
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC 4.1.2 on 64-bit Redhat Server 5.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC 3.4.3, GCC 4.0.1, GCC 4.2.4 and GCC 4.3.2 on Red Hat Enterprise
"                Linux
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC 4.3.2 with C++0x extensions
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC 4.2.1 on OpenSuSE Linux
"              </div>
"            </li>
"            <li>
"              <div>
"                pgCC 8.0-0a 64-bit target on Red Hat Enterprise Linux
"              </div>
"            </li>
"            <li>
"              <div>
"                QLogic PathScale(TM) Compiler Suite: Version 3.1 on Red Hat Enterprise
"                Linux
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          OS X:
"          <ul>
"            <li>
"              <div>
"                Intel 9.1, 10.0 on OS X 10.4.10
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel 10.1, 11.0 on OS X 10.5.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Windows:
"          <ul>
"            <li>
"              <div>
"                Visual C++ 9.0 on Vista EE 64-bit.
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++ 9.0 express on Vista 32-bit.
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++ 9.0 on XP 32-bit.
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++ 8.0, using STLport, on XP and Windows Mobile 5.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++ 7.1, using STLport, on XP
"              </div>
"            </li>
"            <li>
"              <div>
"                Borland 5.9.3
"              </div>
"            </li>
"            <li>
"              <div>
"                Borland 6.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel C++ 11.0, with a Visual C++ 9.0 backend, on XP 32-bit.
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel C++ 11.0, with a Visual C++ 9.0 backend, on Vista 64-bit.
"              </div>
"            </li>
"            <li>
"              <div>
"                Comeau 4.3.10.1 beta 2, with a Visual C++ 9.0 backend.
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC 3.4.4, on Cygwin
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          AIX:
"          <ul>
"            <li>
"              <div>
"                IBM XL C/C++ Enterprise Edition for AIX, V10.1.0.0, on AIX Version
"                5.3.0.40
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          FreeBSD:
"          <ul>
"            <li>
"              <div>
"                GCC 4.2.1 on FreeBSD 7.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          NetBSD:
"          <ul>
"            <li>
"              <div>
"                GCC 4.1.2 on NetBSD 4.0/i386 and NetBSD 4.0/amd64.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          QNX:
"          <ul>
"            <li>
"              <div>
"                QNX Software Development Platform 6.4.0 x86
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Solaris:
"          <ul>
"            <li>
"              <div>
"                Sun C++ 5.7, 5.8, 5.9 on Solaris 5.10
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC 3.4.6 on Solaris 5.10
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_38_0.acknowledgements">
"    <h3><span class="link">Acknowledgements</span></h3>
"    <p>
"      <a href="/users/people/beman_dawes.html">Beman Dawes</a>, Eric Niebler,
"      <a href="/users/people/rene_rivera.html">Rene Rivera</a>, and Daniel
"      James managed this release. Thanks to Vicente Botet for helping compile these
"      release notes.
"    </p>
"  </div>
"
-hash
"4f69e64088ef6919d64361d96af2c4161a122dc40f6ec94547dd106e5fb5f3eb
-id
"version_1_38_0
-notice_url
-notice_xml
-pub_date
@Sun, 08 Feb 2009 12:00:00 +0000
-purpose_xml
"
"      New Libraries: Flyweight, ScopeExit, Swap. Updated Libraries: Accumulators,
"      Any, Asio, Config, Date_Time, Exception, Filesystem, Graph, Hash, Interprocess,
"      Intrusive, Lexical Cast, Math, Multi-index Containers, Proto, Regex, Thread,
"      TR1, Type Traits, Unordered, Xpressive. Other Changes: Experimental CMake build
"      system.
"
-title_xml
"Version 1.38.0
)
(feed/history/boost_1_50_0.qbk
-description_xhtml
"
"
"
"
"  <div id="version_1_50_0.patches">
"    <h3><span class="link">Patches</span></h3>
"    <ul>
"      <li>
"        <div>
"          <a href="/patches/1_50_0/001-unordered.patch">Boost.Unordered patch</a>
"          - Fixes a bug when compiled using a C++11 compiler, but with a C++03 allocator.
"          When inserting elements, <code><span class="identifier">allocator_traits</span></code>
"          detects that the node can be constructed using an accidental implicit conversion
"          which causes several problems.
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="http://cppcms.com/files/locale/boost_locale_utf.patch">Locale
"          Patch</a> - Fixes a bug which causes <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">locale</span><span class="special">::</span><span class="identifier">utf</span><span class="special">::</span><span class="identifier">utf_traits</span></code>
"          to accept some invalid UTF-8 sequences, which is a possible security flaw.
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_50_0.new_libraries">
"    <h3><span class="link">New Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/algorithm/">Algorithm</a>:</span>
"  A collection of
"          useful generic algorithms, from Marshall Clow. This includes several different
"          searching algorithms, as well as most of the new algorithms from the C++11
"          standard library
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/functional/overloaded_function/">Functional/OverloadedFunction</a>:</span>
"  Overload
"          different functions into a single function object, from Lorenzo Caminiti.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/local_function/">LocalFunction</a>:</span>
"  Program
"          functions locally, within other functions, directly within the scope where
"          they are needed, from Lorenzo Caminiti.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/utility/identity_type/">Utility/IdentityType</a>:</span>
"  Wrap
"          types within round parenthesis so they can always be passed as macro parameters,
"          from Lorenzo Caminiti.
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_50_0.updated_libraries">
"    <h3><span class="link">Updated Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/accumulators/">Accumulators</a>:</span>
"          <ul>
"            <li>
"              <div>
"                add missing <code><span class="preprocessor">#include</span>
"                <span class="special">&lt;</span><span class="identifier">boost</span><span class="special">/</span><span class="identifier">throw_exception</span><span class="special">.</span><span class="identifier">hpp</span><span class="special">&gt;</span></code>, fixes <a href="https://svn.boost.org/trac/boost/ticket/6702">#6702</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                work around for msvc which allows ctor templates to be copy ctors,
"                fixes <a href="https://svn.boost.org/trac/boost/ticket/6535">#6535</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                shorten filenames to meet boost guidelines, fixes <a href="https://svn.boost.org/trac/boost/ticket/6196">#6196</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/array/">Array</a>:</span>
"          <ul>
"            <li>
"              <div>
"                add support for Boost.Hash <a href="https://svn.boost.org/trac/boost/ticket/6791">#6791</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/asio/">Asio</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Changed the <code><span class="identifier">epoll_reactor</span></code>
"                backend to do lazy registration for <code><span class="identifier">EPOLLOUT</span></code>
"                events.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed the <code><span class="identifier">epoll_reactor</span></code>
"                handling of out-of-band data, which was broken by an incomplete fix
"                in the last release.
"              </div>
"            </li>
"            <li>
"              <div>
"                Changed Asio's SSL wrapper to respect OpenSSL's <code><span class="identifier">OPENSSL_NO_ENGINE</span></code>
"                feature test <code><span class="preprocessor">#define</span></code>
"                (<a href="https://svn.boost.org/trac/boost/ticket/6432">#6432</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed <code><span class="identifier">windows</span><span class="special">::</span><span class="identifier">object_handle</span></code> so that it works
"                with Windows compilers that support C++11 move semantics (such as
"                <tt>g++</tt>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Improved the performance of strand rescheduling.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added support for <tt>g++</tt> 4.7 when compiling in C++11
"                mode (<a href="https://svn.boost.org/trac/boost/ticket/6620">#6620</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed a problem where <code><span class="identifier">signal_set</span></code>
"                handlers were not being delivered when the <code><span class="identifier">io_service</span></code>
"                was constructed with a <code><span class="identifier">concurrency_hint</span></code>
"                of 1 (<a href="https://svn.boost.org/trac/boost/ticket/6657">#6657</a>).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/bimap/">Bimap</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Remove spurious dependency on Boost.Serialization, fixes <a href="https://svn.boost.org/trac/boost/ticket/3868">#3868</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Solve unused constructor parameter warning, fixes <a href="https://svn.boost.org/trac/boost/ticket/5749">#5749</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Add key_type and mapped_type (leaving data_type for backward compatibility)
"                typedefs to map views, fixes <a href="https://svn.boost.org/trac/boost/ticket/6031">#6031</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/chrono/">Chrono</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed Bugs:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6361">#6361</a>
"                      integer overflow in boost::chrono::process_real_cpu_clock::now()
"                      under Windows 32bits.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6628">#6628</a>
"                      compiler warning in process_cpu_clocks.hpp.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6666">#6666</a>
"                      thread_clock.hpp needs pthread.h.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/concept_check/">Concept Check</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6738">#6738</a>
"                      Shadowed variable warning.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/filesystem/">Filesystem</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Remove Filesystem Version 2 from the distribution. Version 3 is now
"                the only distributed version. Those still using V2 are urged to migrate
"                to V3 as soon as possible.
"              </div>
"            </li>
"            <li>
"              <div>
"                Add constexpr value_type preferred_separator to class path.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix <a href="https://svn.boost.org/trac/boost/ticket/5118">#5118</a>,
"                <code><span class="identifier">replace_extension</span></code>
"                doesn't work as specified in documentation. The documentation, implementation,
"                and test cases have all had fixes applied. The documentation had
"                failed to mention that any existing extension is removed. The behavior
"                for simple cases has been reverted to the Version 2 behavior, but
"                with corrections so that complex replacements now work. Two test
"                cases from <a href="https://svn.boost.org/trac/boost/ticket/5118">#5118</a>
"                have been added.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix <a href="https://svn.boost.org/trac/boost/ticket/3737">#3737</a>,
"                Boost.Filesystem does not compile on Windows Mobile. On Windows,
"                <code><span class="special">&lt;</span><span class="identifier">sys</span><span class="special">/</span><span class="identifier">stat</span><span class="special">.</span><span class="identifier">h</span><span class="special">&gt;</span></code> is no longer included.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix <a href="https://svn.boost.org/trac/boost/ticket/4065">#4065</a>,
"                Boost Filesystem lexicographic path comparison inconsistent. This
"                required multiple source code bug fixes and code cleanup, correcting
"                problems not related to lexicographical issues.
"              </div>
"            </li>
"            <li>
"              <div>
"                Add class path member function compare for consistency with std::string.
"              </div>
"            </li>
"            <li>
"              <div>
"                Tighten <code><span class="identifier">BOOST_FILESYSTEM_DYN_LINK</span></code>
"                and <code><span class="identifier">BOOST_FILESYSTEM_STATIC_LINK</span></code>
"                logic in <code><span class="identifier">filesystem</span><span class="special">/</span><span class="identifier">config</span><span class="special">.</span><span class="identifier">hpp</span></code>
"                so that one or the other is always defined, and both being defined
"                is a <code><span class="preprocessor">#error</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix <a href="https://svn.boost.org/trac/boost/ticket/6690">#6690</a>
"                and <a href="https://svn.boost.org/trac/boost/ticket/6737">#6737</a>,
"                resolving static linking related problems with VC++ 8 through 11.
"                Note that this fix may reintroduce codecvt thread safety problems
"                <a href="https://svn.boost.org/trac/boost/ticket/4889">#4889</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/6320">#6320</a>,
"                for these compilers if static linking is used.
"              </div>
"            </li>
"            <li>
"              <div>
"                Add <code><span class="identifier">path</span><span class="special">::</span><span class="keyword">operator</span><span class="special">+=</span></code>
"                and concat functions to tack on things like suffixes or numbers.
"                Suggested by Ed Smith-Rowland and others.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix <a href="https://svn.boost.org/trac/boost/ticket/6809">#6809</a>,
"                Implementation of <code><span class="identifier">filesystem</span><span class="special">::</span><span class="identifier">rename</span><span class="special">()</span></code> method for MS Windows is wrong,
"                by adding <code><span class="identifier">MOVEFILE_COPY_ALLOWED</span></code>
"                to deal with renames across drives, volumes, file systems. Fix has
"                no effect on non-Windows systems.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix <a href="https://svn.boost.org/trac/boost/ticket/6819">#6819</a>,
"                A path operand with a source that was a one character array was treated
"                as empty, even if it wasn't empty. Such arrays can occur in unions
"                or in code using C variable length array idioms.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix <a href="https://svn.boost.org/trac/boost/ticket/6932">#6932</a>,
"                create_directories throws exception even if <code><span class="identifier">error_code</span></code>
"                is specified.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/foreach/">Foreach</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Revert fix for <a href="https://svn.boost.org/trac/boost/ticket/6131">#6131</a>
"                which caused more harm than good.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/geometry/">Geometry</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed Bugs:
"                <ul>
"                  <li>
"                    <div>
"                      the return type of comparable projected point strategy for
"                      integer points was wrong (integer), fixed
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      several robustness issues in intersection of segments and polygons,
"                      fixed
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      invalid intersection output is filtered out
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      disjoint for multi_polygon's might incorrectly return true,
"                      fixed
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Solved tickets
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6585">6585</a>
"                      patch for alternative syntax multipoint, applied
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6584">6584</a>
"                      patch for bug in distance, applied
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/5730">5730</a>
"                      same issue as 6584, fixed
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6166">6166</a>
"                      patch for missing transformation, applied
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6696">6696</a>
"                      invalid intersection output, was (by chance) already fixed
"                      in Trunk before reported
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Additional functionality
"                <ul>
"                  <li>
"                    <div>
"                      added algorithm "touches" (OGC SF compliant) for
"                      *polygon/*polygon
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/graph/">Graph</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed Bugs:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/4622">#4622</a>
"                      clear_vertex on a vertex with a self-loop can cause a segmentation
"                      fault.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6033">#6033</a>
"                      Lowpoint map calculated by biconnected_components(...) is sometimes
"                      wrong.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6242">#6242</a>
"                      isomorphism doesn't reset mapping.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6435">#6435</a>
"                      cube_topology documentation should say 3D, not 2D.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6520">#6520</a>
"                      small_world_1_70_6_0p02.png is broken in documentation of graph_parallel.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6564">#6564</a>
"                      BGL copy constructor for subgraph does not track local vertices/edges.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6573">#6573</a>
"                      BGL: boost::isomorphism routine fails with large graphs.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6583">#6583</a>
"                      Dijkstra Visitor Concept docs probably show wrong type for
"                      variable.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6647">#6647</a>
"                      BGL strong_components do not compile on MSVC 8.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6656">#6656</a>
"                      Dependent type in subgraph used without typename.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6707">#6707</a>
"                      is_straight_line_drawing.hpp missing #include &lt;map&gt;.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6708">#6708</a>
"                      Make bool boost::intersects() in is_straight_line_drawing.hpp
"                      inline?
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6739">#6739</a>
"                      Cannot use write_graphviz_dp with a constified subgraph.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6858">#6858</a>
"                      boost::get() calls wrongly resolved by g++.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6892">#6892</a>
"                      VertexIndexGraph concept not required for bron_kerbosch_all_cliques().
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Other bugs and warnings not in Trac.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/functional/hash/">Hash</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Support <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">array</span></code> and <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">tuple</span></code>
"                when available (<a href="https://svn.boost.org/trac/boost/ticket/6806">#6806</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Avoid gcc's <code><span class="special">-</span><span class="identifier">Wfloat</span><span class="special">-</span><span class="identifier">equal</span></code>
"                warning (<a href="https://svn.boost.org/trac/boost/ticket/6771">#6771</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Add deprecation warning to the long deprecated <code><span class="identifier">boost</span><span class="special">/</span><span class="identifier">functional</span><span class="special">/</span><span class="identifier">detail</span><span class="special">/</span><span class="identifier">container_fwd</span><span class="special">.</span><span class="identifier">hpp</span></code>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/iostreams/">Iostreams</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improved gzip support (<a href="https://svn.boost.org/trac/boost/ticket/5908">#5908</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Update tests for latest Boost.Filesystem and Boost.Test.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix some documentation errors (<a href="https://svn.boost.org/trac/boost/ticket/6530">#6530</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/6650">#6650</a>).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/iterator/">Iterator</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/5127">#5127</a>
"                      Incorrect result_of usage in transform_iterator
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/5697">#5697</a>
"                      iterator_facade::operator-&gt; is broken for proxy references
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/multi_array/">MultiArray</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Concepts bug fix and Workaround for Visual Studio 2010 (<a href="https://svn.boost.org/trac/boost/ticket/4874">#4874</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix to assert.cpp test case (<a href="https://svn.boost.org/trac/boost/changeset/78498">Patch</a>)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/conversion/lexical_cast.htm">Lexical cast</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">bad_lexical_cast</span></code> exception is now
"                globaly visible and can be catched even if code is compiled with
"                -fvisibility=hidden
"              </div>
"            </li>
"            <li>
"              <div>
"                Now it is possible to compile and use library with disabled exceptions
"                <a href="https://svn.boost.org/trac/boost/ticket/5800">#5800</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                Better performance, less memory usage and bugfixes for <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">iterator_range</span><span class="special">&lt;</span><span class="identifier">character_type</span><span class="special">*&gt;</span></code>
"                conversions
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed bugs and warnings: <a href="https://svn.boost.org/trac/boost/ticket/6645">#6645</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/6562">#6562</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/6812">#6812</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/6852">#6852</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/6717">#6717</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/6670">#6770</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/6504">#6504</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/locale/">Locale</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed build issues with STLPort library
"              </div>
"            </li>
"            <li>
"              <div>
"                Boost.System is now required depenency
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed bugs <a href="https://svn.boost.org/trac/boost/ticket/6635">#6635</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/6833">#6833</a>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/math/">Math</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Promoted math constants to be 1st class citizens, including convenient
"                access to the most widely used built-in float, double, long double
"                via three namespaces.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added the Owen's T function and Skew Normal distribution written
"                by Benjamin Sobotta.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added Hankel functions.
"              </div>
"            </li>
"            <li>
"              <div>
"                Corrected issue <a href="https://svn.boost.org/trac/boost/ticket/6627">#6627
"                nonfinite_num_put formatting of 0.0 is incorrect</a> based on
"                a patch submitted by K R Walker.
"              </div>
"            </li>
"            <li>
"              <div>
"                Changed constant initialization mechanism so that it is thread safe
"                even for user-defined types, also so that user defined types get
"                the full precision of the constant, even when <code><span class="keyword">long</span>
"                <span class="keyword">double</span></code> does not. So for example
"                128-bit rational approximations will work with UDT's and do the right
"                thing, even though <code><span class="keyword">long</span> <span class="keyword">double</span></code> may be only 64 or 80 bits.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed issue in <code><span class="identifier">bessel_jy</span></code>
"                which causes Y[sub 8.5](4[pi]) to yield a NaN.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/msm/">MSM</a>:</span>
"          <ul>
"            <li>
"              <div>
"                eUML : better syntax for front-ends defined with eUML as transition
"                table only. Caution: Breaking Change!<a href="https://www.boost.org/doc/libs/1_50_0/libs/msm/doc/HTML/ch03s04.html#eUML-composite-table">https://www.boost.org/doc/libs/1_50_0/libs/msm/doc/HTML/ch03s04.html#eUML-composite-table</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugfix: graph building was only working if initial_state defined
"                as a sequence.
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugfix: flags defined for a Terminate or Interrupt state do not break
"                the blocking function of these states any more.
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugfix: multiple deferred events from several regions were not working
"                in every case.
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugfix: visitor was passed by value to submachines.
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugfix: no_transition was not called for submachines who send an
"                event to themselves.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed warnings with gcc.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/program_options/">Program Options</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improved error reporting (<a href="https://svn.boost.org/trac/boost/changeset/77827">Patch
"                from Leo Goodstadt</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Support for customizing name of option's value in help messages (<a href="https://svn.boost.org/trac/boost/ticket/4781">#4781</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed compilation with gcc 4.7 (<a href="https://svn.boost.org/trac/boost/ticket/6790">#6790</a>).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/property_map/">PropertyMap</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed Bugs:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6539">#6539</a>
"                      the return type of get() is not documented correctly.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6721">#6721</a>
"                      property_map_traits documentation does not mention reference.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/proto/">Proto</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Use <code><span class="keyword">decltype</span></code>-based
"                <code><span class="identifier">result_of</span></code> if and
"                only if the compiler implements N3276.
"              </div>
"            </li>
"            <li>
"              <div>
"                For C++11, force parameter to <code><span class="identifier">mpl</span><span class="special">::</span><span class="identifier">eval_if_c</span></code>
"                and <code><span class="identifier">mpl</span><span class="special">::</span><span class="identifier">if_c</span></code> to be <code><span class="keyword">bool</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Disable <tt>'__forceinline not inlined'</tt> warning on
"                msvc.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/ratio/">Ratio</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed Bugs:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6498">#6498</a>
"                      boost::ratio won't compile with default settings.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/scope_exit/">ScopeExit</a>:</span>
"          <ul>
"            <li>
"              <div>
"                New Features:
"                <ul>
"                  <li>
"                    <div>
"                      Use variadic macros to specify captures as commas-separated
"                      lists (but kept preprocessor sequence syntax for backward compatibility).
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Capture the object in scope using <code><span class="identifier">this_</span></code>.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Support empty captures using <code><span class="keyword">void</span></code>.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Implicit lambda-like captures using <code><span class="identifier">BOOST_SCOPE_EXIT_ALL</span></code>
"                      on compilers that support C++11 lambda functions.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/thread/">Thread</a>:</span>
"          <ul>
"            <li>
"              <div>
"                New Features:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/1850">#1850</a>
"                      Request for unlock_guard to compliment lock_guard.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/2637">#2637</a>
"                      Request for shared_mutex duration timed_lock and timed_lock_shared.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/2741">#2741</a>
"                      Proposal to manage portable and non portable thread attributes.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/3567">#3567</a>
"                      Request for shared_lock_guard.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6194">#6194</a>
"                      Adapt to Boost.Move.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6195">#6195</a>
"                      c++11 compliance: Provide the standard time related interface
"                      using Boost.Chrono.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6217">#6217</a>
"                      Enhance Boost.Thread shared mutex interface following Howard
"                      Hinnant proposal.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6224">#6224</a>
"                      c++11 compliance: Add the use of standard noexcept on compilers
"                      supporting them.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6226">#6226</a>
"                      c++11 compliance: Add explicit bool conversion from locks.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6228">#6228</a>
"                      Add promise constructor with allocator following the standard
"                      c++11.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6230">#6230</a>
"                      c++11 compliance: Follows the exception reporting mechanism
"                      as defined in the c++11.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6266">#6266</a>
"                      Breaking change: thread destructor should call terminate if
"                      joinable.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6269">#6269</a>
"                      Breaking change: thread move assignment should call terminate
"                      if joinable.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6272">#6272</a>
"                      c++11 compliance: Add thread::id hash specialization.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6273">#6273</a>
"                      c++11 compliance: Add cv_status enum class and use it on the
"                      conditions wait functions.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6231">#6231</a>
"                      Add BasicLockable requirements in the documentation to follow
"                      c++11.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6342">#6342</a>
"                      c++11 compliance: Adapt the one_flag to the c++11 interface.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6671">#6671</a>
"                      upgrade_lock: missing mutex and release functions.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6672">#6672</a>
"                      upgrade_lock:: missing constructors from time related types.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6675">#6675</a>
"                      upgrade_lock:: missing non-member swap.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Added missing packaged_task::result_type and packaged_task::
"                      constructor with allocator.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Added packaged_task::reset()
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed Bugs:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/2575">#2575</a>
"                      Bug- Boost 1.36.0 on Itanium platform.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/4345">#4345</a>
"                      thread::id and joining problem with cascade of threads.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/4921">#4921</a>
"                      BOOST_THREAD_USE_DLL and BOOST_THREAD_USE_LIB are crucial and
"                      need to be documented.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/5013">#5013</a>
"                      documentation: boost::thread: pthreas_exit causes terminate().
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/5173">#5173</a>
"                      boost::this_thread::get_id is very slow.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/5351">#5351</a>
"                      interrupt a future get boost::unknown_exception.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/5516">#5516</a>
"                      Upgrade lock is not acquired when previous upgrade lock releases
"                      if another read lock is present.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/5990">#5990</a>
"                      shared_future&lt;T&gt;::get() has wrong return type.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6174">#6174</a>
"                      packaged_task doesn't correctly handle moving results.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6222">#6222</a>
"                      Compile error with SunStudio: unique_future move.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6673">#6673</a>
"                      shared_lock: move assign doesn't works with c++11.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6674">#6674</a>
"                      shared_mutex: try_lock_upgrade_until doesn't works.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix issue signaled on the ML with task_object(task_object const&amp;)
"                      in presence of task_object(task_object&amp;&amp;)
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/unordered/">Unordered</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix equality for <code><span class="identifier">unordered_multiset</span></code>
"                and <code><span class="identifier">unordered_multimap</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Implement <code><span class="identifier">reserve</span></code>
"                (<a href="https://svn.boost.org/trac/boost/ticket/6857">#6857</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Avoid gcc's <code><span class="special">-</span><span class="identifier">Wfloat</span><span class="special">-</span><span class="identifier">equal</span></code>
"                and <code><span class="special">-</span><span class="identifier">Wshadow</span></code>
"                warnings (<a href="https://svn.boost.org/trac/boost/ticket/6190">#6190</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/6771">#6771</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix namespace issue with bcp (<a href="https://svn.boost.org/trac/boost/ticket/6905">#6905</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix Sun workarounds (<a href="https://svn.boost.org/trac/boost/ticket/6784">#6784</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Some internal changes to bucket allocation.
"              </div>
"            </li>
"            <li>
"              <div>
"                See the <a href="/doc/html/unordered/changes.html#unordered.changes.boost_1_50_0">change
"                log</a> for full details.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/wave/index.html">Wave</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Wave V2.3.2, see the <a href="/libs/wave/ChangeLog">Changelog</a>
"                for details.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/xpressive/">xpressive</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Remove very ugly <code><span class="identifier">lexical_cast</span></code>
"                hack with a slightly less ugly one.
"              </div>
"            </li>
"            <li>
"              <div>
"                Replace MPL assert with static assert since it's problematic in C++11,
"                fixes <a href="https://svn.boost.org/trac/boost/ticket/6846">#6846</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_50_0.compilers_tested">
"    <h3><span class="link">Compilers Tested</span></h3>
"    <p>
"      Boost's primary test compilers are:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Linux:
"          <ul>
"            <li>
"              <div>
"                Intel: 11.1
"              </div>
"            </li>
"            <li>
"              <div>
"                LLVM Clang 2.8
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.2.4, 4.3.4, 4.4.3, 4.5.3, 4.6.2
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++0x mode: 4.3.4, 4.4.3, 4.5.3, 4.6.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          OS X:
"          <ul>
"            <li>
"              <div>
"                Intel: 11.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.4.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++0x mode: 4.4.4
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Windows:
"          <ul>
"            <li>
"              <div>
"                Visual C++ 8.0, 9.0, 10.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, mingw: 4.4.0, 4.4.7, 4.5.4, 4.6.1, 4.7.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          FreeBSD:
"          <ul>
"            <li>
"              <div>
"                GCC 4.2.1, 32 and 64 bit
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          QNX:
"          <ul>
"            <li>
"              <div>
"                QCC, C++0x mode: 4.4.0, 4.4.7, 4.5.4, 4.6.3, 4.7.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"    <p>
"      Boost's additional test compilers include:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Linux:
"          <ul>
"            <li>
"              <div>
"                Clang from subversion
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.2.4, 4.3.4, 4.4.4, 4.5.3, 4.6.2
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++0x mode: 4.3.4, 4.4.4, 4.5.3, 4.6.2
"              </div>
"            </li>
"            <li>
"              <div>
"                pgCC: 11.9
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel: 10.1, 11.1, 12.0, 12.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual Age 10.1
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          OS X:
"          <ul>
"            <li>
"              <div>
"                Clang from subversion
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel 11.1, 12.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.4.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++0x mode: 4.4.4
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Windows:
"          <ul>
"            <li>
"              <div>
"                Visual C++ 8.0, 10.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++ with STLport: 9.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++, Windows Mobile 5, with STLport: 9.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, mingw: 4.4.0, 4.4.7, 4.5.2, 4.5.4, 4.6.4, 4.7.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++0x mode, mingw: 4.5.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          AIX:
"          <ul>
"            <li>
"              <div>
"                IBM XL C/C++ Enterprise Edition, V12.1.0.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          FreeBSD:
"          <ul>
"            <li>
"              <div>
"                GCC 4.2.1, 32 and 64 bit
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Solaris:
"          <ul>
"            <li>
"              <div>
"                Sun 5.10
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_50_0.acknowledgements">
"    <h3><span class="link">Acknowledgements</span></h3>
"    <p>
"      <a href="/users/people/beman_dawes.html">Beman Dawes</a>, Eric Niebler,
"      <a href="/users/people/rene_rivera.html">Rene Rivera</a>, Daniel James,
"      Vladimir Prus and Marshall Clow managed this release.
"    </p>
"  </div>
"
-hash
"2d06c08c5b7b1c3a7a2563de6d8dfcdf72f4752f8f433f91d36c26ab1ee90e8c
-id
"version_1_50_0
-notice_url
-notice_xml
-pub_date
@Thu, 28 Jun 2012 08:48:57 -0400
-purpose_xml
"
"      New Libraries: Algorithm, Functional/OverloadedFunction, LocalFunction, Utility/IdentityType.
"      Updated Libraries: Accumulators, Array, Asio, Bimap, Chrono, Concept Check,
"      Filesystem, Foreach, Graph, Geometry, Hash, Iostreams, Iterator, MultiArray,
"      Lexical cast, Locale, MSM, Program Options, PropertyMap, Proto, Ratio, ScopeExit,
"      Thread, Unordered, Wave, xpressive
"
-title_xml
"Version 1.50.0
)
(feed/history/boost_1_51_0.qbk
-description_xhtml
"
"
"
"
"  <div id="version_1_51_0.patches">
"    <h3><span class="link">Patches</span></h3>
"    <ul>
"      <li>
"        <div>
"          <a href="http://cppcms.com/files/locale/boost_locale_utf.patch">Locale
"          Patch</a> - Fixes a bug which causes <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">locale</span><span class="special">::</span><span class="identifier">utf</span><span class="special">::</span><span class="identifier">utf_traits</span></code>
"          to accept some invalid UTF-8 sequences, which is a possible security flaw.
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_51_0.new_libraries">
"    <h3><span class="link">New Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/context/">Context</a>:</span>
"  Context switching library,
"          from Oliver Kowalke.
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_51_0.updated_libraries">
"    <h3><span class="link">Updated Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/algorithm/">Algorithm</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed <code><span class="identifier">is_sorted_until</span></code>
"                ; now matches the c++11 standard behavior on ranges with duplicate
"                values.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added range support for the rest of the search algorithms.
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">unhex</span></code> now uses Boost.Exception
"                to signal bad input.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/asio/">Asio</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed an incompatibility between <code><span class="identifier">ip</span><span class="special">::</span><span class="identifier">tcp</span><span class="special">::</span><span class="identifier">iostream</span></code>
"                and C++11 (<a href="https://svn.boost.org/trac/boost/ticket/7162">#7162</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Decorated GCC attribute names with underscores to prevent interaction
"                with user-defined macros (<a href="https://svn.boost.org/trac/boost/ticket/6415">#6415</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Added missing <code><span class="preprocessor">#include</span>
"                <span class="special">&lt;</span><span class="identifier">cctype</span><span class="special">&gt;</span></code>, needed for some versions of
"                MinGW.
"              </div>
"            </li>
"            <li>
"              <div>
"                Changed to use <tt>gcc</tt>'s atomic builtins on ARM CPUs,
"                when available (<a href="https://svn.boost.org/trac/boost/ticket/7140">#7140</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Changed strand destruction to be a no-op, to allow strand objects
"                to be destroyed after their associated <code><span class="identifier">io_service</span></code>
"                has been destroyed.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added support for some newer versions of glibc which provide the
"                <code><span class="identifier">epoll_create1</span><span class="special">()</span></code>
"                function but always fail with <code><span class="identifier">ENOSYS</span></code>
"                (<a href="https://svn.boost.org/trac/boost/ticket/7012">#7012</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Changed the SSL implementation to throw an exception if SSL engine
"                initialisation fails (<a href="https://svn.boost.org/trac/boost/ticket/6303">#6303</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed another regression in <code><span class="identifier">buffered_write_stream</span></code>
"                (<a href="https://svn.boost.org/trac/boost/ticket/6310">#6310</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Implemented various minor performance improvements, primarily targeted
"                at Linux x86 and x86-64 platforms.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/config/">Config</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Deprecated a whole bunch of macros that were c++11 specific, but
"                not named to show that they were c++11 specific. Made new macros
"                with better names, and paired the old macros with the new ones. Updated
"                the documentation to list the deprecated macros.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/chrono/">Chrono</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/6918">#6918</a>
"                Boost Chrono compilation failure on HP uX due to undefined pthread_getcpuclockid.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/6241">#6241</a>
"                boost::chrono compilation problems without std::wstring support.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/6987">#6987</a>
"                Documentation &amp; C++11.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/7041">#7041</a>
"                time_point.hpp depends on Boost.System.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/7042">#7042</a>
"                Avoiding time_point and duration dependency on time.h and CLOCK_REALTIME.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/7058">#7058</a>
"                Make it work when BOOST_NO_EXCEPTIONS is defined.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/7069">#7069</a>
"                Misspellings in clock_string&lt;thread_clock&gt;.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/7081">#7081</a>
"                WinError.h capitalization in boost/detail/win/basic_types.hpp.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/geometry/">Geometry</a>:</span>
"          <ul>
"            <li>
"              <div>
"                points accessed through a pointer (e.g. in a linestring) should now
"                be specialized without the pointer. In previous versions a type
"                <code><span class="identifier">my_point</span></code> used like
"                <code><span class="identifier">linestring</span><span class="special">&lt;</span><span class="identifier">my_point</span><span class="special">*&gt;</span></code>
"                had to be specalized like: <code><span class="keyword">template</span><span class="special">&lt;&gt;</span> <span class="keyword">struct</span>
"                <span class="identifier">tag</span><span class="special">&lt;</span><span class="identifier">my_point</span><span class="special">*&gt;</span></code>.
"                Now the library itself removes the pointer before calling the traits
"                class, so now it should be like: <code><span class="keyword">template</span><span class="special">&lt;&gt;</span> <span class="keyword">struct</span>
"                <span class="identifier">tag</span><span class="special">&lt;</span><span class="identifier">my_point</span><span class="special">&gt;</span></code>
"              </div>
"            </li>
"            <li>
"              <div>
"                intersection was sometimes wrong for integer points, fixed
"              </div>
"            </li>
"            <li>
"              <div>
"                documentation, order of parameters in simplify was wrong, fixed
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/7030">7030</a>
"                spherical distance, fixed (by patch of Karsten Ahnert)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/graph/">Graph</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Refactored support for internal and bundled properties in Boost.Graph-provided
"                graph types, and cleaned up named parameter functionality:
"                <ul>
"                  <li>
"                    <div>
"                      Enabled old-style (non-bundled) internal properties in <code><span class="identifier">compressed_sparse_row_graph</span></code>.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Bundled properties should work correctly for all graph types
"                      and adaptors.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugs fixed:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6993">#6993</a>: Typo Bundled Properties document
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/7002">#7002</a>: Problem with initialization of CSR bidirectional
"                      graph
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/7023">#7023</a>: Enclose internal type graphml_reader in anonymous
"                      namespace
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Other bugs and warnings not in Trac
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/functional/hash/">Hash</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Support the standard smart pointers.
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">hash_value</span></code> now implemented
"                using SFINAE to avoid implicit casts to built in types when calling
"                it.
"              </div>
"            </li>
"            <li>
"              <div>
"                Updated to use the new config macros.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/conversion/lexical_cast.htm">Lexical cast</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Better performance, less memory usage for <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">array</span><span class="special">&lt;</span><span class="identifier">character_type</span><span class="special">,</span> <span class="identifier">N</span><span class="special">&gt;</span></code> and <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">array</span><span class="special">&lt;</span><span class="identifier">character_type</span><span class="special">,</span> <span class="identifier">N</span><span class="special">&gt;</span></code> conversions.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed bug with volatile input parameter <a href="https://svn.boost.org/trac/boost/ticket/7157">#7157</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/math/">Math</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Updated to use the new config macros.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/msm/">MSM</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Support for boost::any <a href="https://www.boost.org/doc/libs/1_51_0/libs/msm/doc/HTML/ch03s03.html#any-event">https://www.boost.org/doc/libs/1_51_0/libs/msm/doc/HTML/ch03s03.html#any-event</a>
"                or kleene <a href="https://www.boost.org/doc/libs/1_51_0/libs/msm/doc/HTML/ch03s04.html#kleene-event">https://www.boost.org/doc/libs/1_51_0/libs/msm/doc/HTML/ch03s04.html#kleene-event</a>
"                as acceptable events
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugfix: compiler error with fsm internal table and none (compound)
"                event.
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugfix: euml::defer_ leading to stack overflow.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/proto/">Proto</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Proto transforms get pseudo-parameter pack expansion support for
"                unpacking expressions. See the <a href="/doc/html/proto/appendices.html#boost_proto.appendices.release_notes.boost_1_51">Release
"                Notes</a> for more information.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/ratio/">Ratio</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/7075">#7075</a>
"                Workaround for error: the type of partial specialization template
"                parameter constant "n1" depends on another template parameter.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/regex/">Regex</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Updated to use the new config macros.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/thread/">Thread</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/4258">#4258</a>
"                Linking with boost thread does not work on mingw/gcc 4.5.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/4885">#4885</a>
"                Access violation in set_tss_data at process exit due to invalid assumption
"                about TlsAlloc.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/6931">#6931</a>
"                mutex waits forwever with Intel Compiler and /debug:parallel
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/7044">#7044</a>
"                boost 1.50.0 header missing.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/7052">#7052</a>
"                Thread: BOOST_THREAD_PROVIDES_DEPRECATED_FEATURES_SINCE_V3_0_0 only
"                masks thread::operator==, thread::operator!= forward declarations,
"                not definitions.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/7066">#7066</a>
"                An attempt to fix current_thread_tls_key static initialization order.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/7074">#7074</a>
"                Multiply defined symbol boost::allocator_arg.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/7078">#7078</a>
"                Trivial 64-bit warning fix on Windows for thread attribute stack
"                size
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/7089">#7089</a>
"                BOOST_THREAD_WAIT_BUG limits functionality without solving anything
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/unordered/">Unordered</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix construction/destruction issue when using a C++11 compiler with
"                a C++03 allocator (<a href="https://svn.boost.org/trac/boost/ticket/7100">#7100</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Remove a <code><span class="keyword">try</span><span class="special">..</span><span class="keyword">catch</span></code> to support compiling without
"                exceptions.
"              </div>
"            </li>
"            <li>
"              <div>
"                Adjust SFINAE use to try to supprt g++ 3.4 (<a href="https://svn.boost.org/trac/boost/ticket/7175">#7175</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Updated to use the new config macros.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/wave/">Wave</a>:</span>
"          <ul>
"            <li>
"              <div>
"                See the <a href="/libs/wave/ChangeLog">Changelog</a> for details.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/xpressive/">xpressive</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Work around buggy wide ctype facet on cygwin and mingw.
"              </div>
"            </li>
"            <li>
"              <div>
"                Work around absence of __isctype on some glibc implementations.
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">op</span><span class="special">::</span><span class="identifier">as</span></code> shouldn't assume <code><span class="identifier">string</span><span class="special">::</span><span class="identifier">iterator</span></code> != <code><span class="keyword">char</span><span class="special">*</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix assertion in <code><span class="identifier">cpp_regex_traits</span></code>
"                on libc++, thanks to John Fletcher.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_51_0.compilers_tested">
"    <h3><span class="link">Compilers Tested</span></h3>
"    <p>
"      Boost's primary test compilers are:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Linux:
"          <ul>
"            <li>
"              <div>
"                GCC: 4.2.4, 4.3.4, 4.4.3, 4.5.3, 4.6.2, 4.7
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11 mode: 4.3.4, 4.4.3, 4.5.3, 4.6.2
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel: 11.1, 12.0, 12.1
"              </div>
"            </li>
"            <li>
"              <div>
"                LLVM Clang 2.8
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          OS X:
"          <ul>
"            <li>
"              <div>
"                GCC: 4.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11 mode: 4.4
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel: 11.1, 12.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Windows:
"          <ul>
"            <li>
"              <div>
"                GCC, mingw: 4.4.0, 4.4.7, 4.5.4, 4.6.3
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++: 8.0, 9.0, 10.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          FreeBSD:
"          <ul>
"            <li>
"              <div>
"                GCC: 4.2.1, 32 and 64 bit
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"    <p>
"      Boost's additional test compilers include:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Linux:
"          <ul>
"            <li>
"              <div>
"                Clang: from subversion
"              </div>
"            </li>
"            <li>
"              <div>
"                LLVM Clang: 3.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.2.4, 4.3.4, 4.4.4, 4.4.7, 4.5.3, 4.6.2, 4.6.3, 4.7.0, 4.7.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11 mode: 4.3.4, 4.4.4, 4.5.3, 4.6.3
"              </div>
"            </li>
"            <li>
"              <div>
"                pgCC: 11.9
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel: 10.1, 11.1, 12.0, 12.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual Age: 10.1
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          OS X:
"          <ul>
"            <li>
"              <div>
"                Clang: from subversion
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11 mode: from subversion
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel: 11.1, 12.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11 mode: 4.4
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Windows:
"          <ul>
"            <li>
"              <div>
"                Visual C++: 8.0, 9.0, 10.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, mingw: 4.4.0, 4.6.3, 4.7.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          AIX:
"          <ul>
"            <li>
"              <div>
"                IBM XL C/C++ Enterprise Edition: V12.1.0.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          FreeBSD:
"          <ul>
"            <li>
"              <div>
"                GCC: 4.2.1, 32 and 64 bit
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Solaris:
"          <ul>
"            <li>
"              <div>
"                Sun: 5.10
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_51_0.acknowledgements">
"    <h3><span class="link">Acknowledgements</span></h3>
"    <p>
"      <a href="/users/people/beman_dawes.html">Beman Dawes</a>, Eric Niebler,
"      <a href="/users/people/rene_rivera.html">Rene Rivera</a>, Daniel James,
"      Vladimir Prus and Marshall Clow managed this release.
"    </p>
"  </div>
"
-hash
"9e684e2980e609aa395842445efa590af6f16155ce879319aad6bae1c9b345e1
-id
"version_1_51_0
-notice_url
-notice_xml
-pub_date
@Mon, 20 Aug 2012 16:00:21 -0700
-purpose_xml
"
"      New Libraries: Context. Updated Libraries: Algorithm, Asio, Config, Chrono,
"      Geometry, Graph, Hash, Lexical Cast, Math, MSM, Proto, Ratio, Regex, Thread,
"      Unordered, Wave, xpressive
"
-title_xml
"Version 1.51.0
)
(feed/history/boost_1_55_0.qbk
-description_xhtml
"
"
"
"
"  <div id="version_1_55_0.other_downloads">
"    <h3><span class="link">Other Downloads</span></h3>
"    <ul>
"      <li>
"        <div>
"          <a href="https://sourceforge.net/projects/boost/files/boost-binaries/1.55.0/">Windows
"          binaries</a>
"        </div>
"      </li>
"      <li>
"        <div>
"          <a href="https://sourceforge.net/projects/boost/files/boost-docs/1.55.0/">PDF
"          documentation</a> (only for BoostBook based documentation).
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_55_0.news">
"    <h3><span class="link">News</span></h3>
"    <p>
"      Support was removed from <a href="/libs/config/">Config</a> for some
"      very old versions of compilers. The new minimum requirements are:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Digitial Mars 8.41
"        </div>
"      </li>
"      <li>
"        <div>
"          GCC 3.3
"        </div>
"      </li>
"      <li>
"        <div>
"          Intel 6.0
"        </div>
"      </li>
"      <li>
"        <div>
"          Visual C++ 7.1
"        </div>
"      </li>
"    </ul>
"    <p>
"      <strong>Note:</strong> This is just the mininimum requirements
"      for Config. Some Boost libraries may have higher mininimum requirements and
"      not support all platforms or compilers.
"    </p>
"    <p>
"      Other compilers are currently unchanged, but we are considering removing support
"      for some other old compilers. <strong>Candidates</strong> for
"      removal are:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Metroworks C++ (i.e. codewarrior)
"        </div>
"      </li>
"      <li>
"        <div>
"          SunPro 5.7 and earlier
"        </div>
"      </li>
"      <li>
"        <div>
"          Borland C++ Builder 2006 (5.82) and earlier
"        </div>
"      </li>
"    </ul>
"    <p>
"      If you're using any of these, please let us know on the mailing lists. We will
"      take into account any feedback received before making a decision.
"    </p>
"  </div>
"  <div id="version_1_55_0.known_bugs">
"    <h3><span class="link">Known Bugs with Visual Studio
"    2013/Visual C++ 12</span></h3>
"    <p>
"      Visual Studio 2013 was released quite late in the release process, so there
"      exist several unresolved issues. These include:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Serialization can't compile because of a missing include.
"        </div>
"      </li>
"      <li>
"        <div>
"          Using <code><span class="identifier">has_member_function_callable_with</span></code>
"          from Boost.Container's <code><span class="identifier">allocator_traits</span></code>
"          causes a compile error (<a href="https://svn.boost.org/trac/boost/ticket/9332">#9332</a>).
"        </div>
"      </li>
"      <li>
"        <div>
"          In libraries such as Unordered and MultiIndex, calling overloaded functions
"          with initializer lists can result in a compile error, with Visual C++ claiming
"          that the overloads are ambiguous. This is a Visual C++ bug and it isn't
"          clear if there's a good workaround. This won't affect code that doesn't
"          use initializer lists, or uses an initializer list that doesn't require
"          an implicit conversion (i.e. an initializer list of the container's exact
"          value type).
"        </div>
"      </li>
"      <li>
"        <div>
"          Thread: <code><span class="identifier">ex_scoped_thread</span></code>
"          compile fails (<a href="https://svn.boost.org/trac/boost/ticket/9333">#9333</a>).
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_55_0.patches">
"    <h3><span class="link">Patches</span></h3>
"    <ol>
"      <li>
"        <div>
"          <a href="/patches/1_55_0/001-log_fix_dump_avx2.patch">Log patch</a>:
"          fixes incorrect output of the <a href="https://www.boost.org/doc/libs/1_55_0/libs/log/doc/html/log/detailed/utilities.html#log.detailed.utilities.manipulators.dump">dump</a>
"          manipulator, when used on AVX2-enabled CPU (e.g. Intel Haswell).
"        </div>
"      </li>
"    </ol>
"  </div>
"  <div id="version_1_55_0.new_libraries">
"    <h3><span class="link">New Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/predef/">Predef</a>:</span> This library defines a
"          set of compiler, architecture, operating system, library, and other version
"          numbers from the information it can gather of C, C++, Objective C, and
"          Objective C++ predefined macros or those defined in generally available
"          headers, from Rene Rivera.
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_55_0.updated_libraries">
"    <h3><span class="link">Updated Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/accumulators/">Accumulators</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/7915">#7915</a> Fix silly typos.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/8850">#8850</a> Fix MSVC warnings.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/8262">#8262</a> Rename <code><span class="identifier">average</span></code>
"                to <code><span class="identifier">fdiv</span></code>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/any/">Any</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">bad_any_cast</span></code> exception is now visible
"                across modules <a href="https://svn.boost.org/trac/boost/ticket/8751">#8751</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added <code><span class="identifier">clear</span><span class="special">()</span></code>
"                member function.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added missing <code><span class="identifier">BOOST_NOEXCEPT</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed issue with const rvalues <a href="https://svn.boost.org/trac/boost/ticket/9215">#9215</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/asio/">Asio</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Implemented a limited port to Windows Runtime. This support requires
"                that the language extensions be enabled. Due to the restricted facilities
"                exposed by the Windows Runtime API, the port also comes with the
"                following caveats:
"                <ul>
"                  <li>
"                    <div>
"                      The core facilities such as the <code><span class="identifier">io_service</span></code>,
"                      <code><span class="identifier">strand</span></code>, buffers,
"                      composed operations, timers, etc., should all work as normal.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      For sockets, only client-side TCP is supported.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Explicit binding of a client-side TCP socket is not supported.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      The <code><span class="identifier">cancel</span><span class="special">()</span></code> function is not supported
"                      for sockets. Asynchronous operations may only be cancelled
"                      by closing the socket.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Operations that use <code><span class="identifier">null_buffers</span></code>
"                      are not supported.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Only <code><span class="identifier">tcp</span><span class="special">::</span><span class="identifier">no_delay</span></code> and <code><span class="identifier">socket_base</span><span class="special">::</span><span class="identifier">keep_alive</span></code> options are supported.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Resolvers do not support service names, only numbers. I.e.
"                      you must use "80" rather than "http".
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Most resolver query flags have no effect.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed a regression (introduced in Boost 1.54) where, on some platforms,
"                errors from <code><span class="identifier">async_connect</span></code>
"                were not correctly propagated through to the completion handler (<a href="https://svn.boost.org/trac/boost/ticket/8795">#8795</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed a Windows-specific regression (introduced in Boost 1.54) that
"                occurs when multiple threads are running an <code><span class="identifier">io_service</span></code>.
"                When the bug occurs, the result of an asynchronous operation (error
"                and bytes transferred) is incorrectly discarded and zero values used
"                instead. For TCP sockets this results in spurious end-of-file notifications
"                (<a href="https://svn.boost.org/trac/boost/ticket/8933">#8933</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed a bug in handler tracking, where it was not correctly printing
"                out some handler IDs (<a href="https://svn.boost.org/trac/boost/ticket/8808">#8808</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed the comparison used to test for successful synchronous accept
"                operations so that it works correctly with unsigned socket descriptors
"                (<a href="https://svn.boost.org/trac/boost/ticket/8752">#8752</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Ensured the signal number is correctly passed to the completion handler
"                when starting an <code><span class="identifier">async_wait</span></code>
"                on a signal that is already raised (<a href="https://svn.boost.org/trac/boost/ticket/8738">#8738</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Suppressed a g++ 4.8+ warning about unused typedefs (<a href="https://svn.boost.org/trac/boost/ticket/8980">#8980</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Enabled the move optimisation for handlers that use the default invocation
"                hook (<a href="https://svn.boost.org/trac/boost/ticket/8624">#8624</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Clarified that programs must not issue overlapping <code><span class="identifier">async_write_at</span></code> operations (<a href="https://svn.boost.org/trac/boost/ticket/8669">#8669</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Changed the Windows <code><span class="identifier">HANDLE</span></code>
"                backend to treat <code><span class="identifier">ERROR_MORE_DATA</span></code>
"                as a non-fatal error when returned by <code><span class="identifier">GetOverlappedResult</span></code>
"                for a synchronous read (<a href="https://svn.boost.org/trac/boost/ticket/8722">#8722</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++ language extensions use <code><span class="identifier">generic</span></code>
"                as a keyword. Added a workaround that renames the namespace to <code><span class="identifier">cpp_generic</span></code> when those language
"                extensions are in effect.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed some asynchronous operations that missed out on getting <code><span class="identifier">async_result</span></code> support in Boost 1.54.
"                In particular, the buffered stream templates have been updated so
"                that they adhere to current handler patterns (<a href="https://svn.boost.org/trac/boost/ticket/9000">#9000</a>, <a href="https://svn.boost.org/trac/boost/ticket/9001">#9001</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Enabled move support for Microsoft Visual Studio 2012 (<a href="https://svn.boost.org/trac/boost/ticket/8959">#8959</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Added <code><span class="identifier">use_future</span></code>
"                support for Microsoft Visual Studio 2012.
"              </div>
"            </li>
"            <li>
"              <div>
"                Removed a use of <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">min</span></code>
"                in the Windows IOCP backend to avoid a dependency on the <code><span class="special">&lt;</span><span class="identifier">algorithm</span><span class="special">&gt;</span></code> header (<a href="https://svn.boost.org/trac/boost/ticket/8758">#8758</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Eliminated some unnecessary handler copies.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed various minor and cosmetic issues in code and documentation
"                (including <a href="https://svn.boost.org/trac/boost/ticket/8347">#8347</a>, <a href="https://svn.boost.org/trac/boost/ticket/8950">#8950</a>, <a href="https://svn.boost.org/trac/boost/ticket/8953">#8953</a>, <a href="https://svn.boost.org/trac/boost/ticket/8965">#8965</a>, <a href="https://svn.boost.org/trac/boost/ticket/8997">#8997</a>).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/atomic/">Atomic</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added support for 64-bit atomic operations on x86 target for GCC,
"                MSVC and compatible compilers. The support is enabled when it is
"                known at compile time that the target CPU supports required instructions.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added support for 128-bit atomic operations on x86-64 target for
"                GCC and compatible compilers. The support is enabled when it is known
"                at compile time that the target CPU supports required instructions.
"                The support can be tested for with the new <code><span class="identifier">BOOST_ATOMIC_INT128_LOCK_FREE</span></code>
"                macro.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added a more efficient implementation of <code><span class="identifier">atomic</span><span class="special">&lt;&gt;</span></code> based on GCC <code><span class="identifier">__atomic</span><span class="special">*</span></code>
"                intrinsics available since GCC 4.7.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added support for more ARM v7 CPUs, improved detection of Thumb 2.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added support for x32 (i.e. 64-bit x86 with 32-bit pointers) target
"                on GCC and compatible compilers.
"              </div>
"            </li>
"            <li>
"              <div>
"                Removed dependency on Boost.Thread.
"              </div>
"            </li>
"            <li>
"              <div>
"                Internal lock pool now includes proper padding and alignment to avoid
"                false sharing.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed compilation with Intel compiler on Windows. Removed internal
"                macro duplication when compiled on Windows.
"              </div>
"            </li>
"            <li>
"              <div>
"                Some code refactoring to use C++11 features when available.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/chrono/">Chrono</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <em>Fixed Bugs:</em>
"                <ul>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/7868">#7868</a>
"                      <code><span class="identifier">chrono_io</span></code> parses
"                      time incorrectly (1.53 and 1.52)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/9028">#9028</a>
"                      Typo in <code><span class="identifier">boost</span><span class="special">/</span><span class="identifier">chrono</span><span class="special">/</span><span class="identifier">stopwatches</span><span class="special">/</span><span class="identifier">formatters</span><span class="special">/</span><span class="identifier">base_formatter</span><span class="special">.</span><span class="identifier">hpp</span></code>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/9147">#9147</a>
"                      uninitialized <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">tm</span></code>
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/circular_buffer/">Circular Buffer</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added support for rvalue references and rvalue references emulation
"                using Boost.Move. Values are moved only if value type has noexcept
"                move constructor and noexcept move assignment operator <a href="https://svn.boost.org/trac/boost/ticket/7888">#7888</a>.
"                Now Circular Buffer is usable with move-only types.
"              </div>
"            </li>
"            <li>
"              <div>
"                Much better documentation.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="http://svn.boost.org/trac/boost/ticket/5362">#5362</a>
"                circular_buffer does not compile with <code><span class="identifier">BOOST_NO_EXCEPTIONS</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="http://svn.boost.org/trac/boost/ticket/7025">#7025</a>
"                circular buffer reports warning: " type qualifiers ignored on
"                function return type" while compile.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="http://svn.boost.org/trac/boost/ticket/7950">#7950</a>
"                Eliminate W4-warnings under VS2005 - warning C4913: user defined
"                binary operator ',' exists but no overload could convert all operands,
"                default built-in binary operator ',' used.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/config/">Config</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <strong>Breaking change:</strong> Removed support
"                for some older compilers. The new minimum compiler versions are:
"              </div>
"              <ul>
"                <li>
"                  <div>
"                    Digitial Mars 8.41
"                  </div>
"                </li>
"                <li>
"                  <div>
"                    GCC 3.3
"                  </div>
"                </li>
"                <li>
"                  <div>
"                    Intel 6.0
"                  </div>
"                </li>
"                <li>
"                  <div>
"                    Visual C++ 7.1
"                  </div>
"                </li>
"              </ul>
"              <div>
"                Other compilers are unchanged.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/container/">Container</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Implemented <span class="link">SCARY
"                iterators</span>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed bugs <a href="https://svn.boost.org/trac/boost/ticket/8269">#8269</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/8473">#8473</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/8892">#8892</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/9009">#9009</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/9064">#9064</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/9092">#9092</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/9108">#9108</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/context/">Context</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <a href="http://svn.boost.org/trac/boost/ticket/8650">#8650</a>
"                SSE2 intrinsics
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/coroutine/">Coroutine</a>:</span>
"          <ul>
"            <li>
"              <div>
"                New interface (unidirectional data transfer).
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="http://svn.boost.org/trac/boost/ticket/8782">#8782</a>
"                no best alternative
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="http://svn.boost.org/trac/boost/ticket/8801">#8801</a>
"                auto-linking
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/filesystem/">Filesystem</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed Android compilation <a href="https://svn.boost.org/trac/boost/ticket/8706">#8706</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/fusion/">Fusion</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/8759">#8759</a> specialization of <code><span class="identifier">convert_impl</span></code>
"                for <code><span class="identifier">map_tag</span></code>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/geometry/index.html">Geometry</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <em>Additional functionality</em>
"                <ul>
"                  <li>
"                    <div>
"                      Added centroid for segment type
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Added intersects() and disjoints() for Segment-Box and Linestring-Box
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Added rtree creation using packing algorithm
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Added contains() and covers() spatial query predicates
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Added iterative queries
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                <em>Bugfixes</em>
"                <ul>
"                  <li>
"                    <div>
"                      In some cases .back() or .clear() was called, violating the
"                      usage of Concepts. Fixed for the reported cases
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                <em>Solved tickets</em>
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/6958">6958</a>
"                      Intersection generates self-intersection. Caused by spike,
"                      fixed
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/8364">8364</a>
"                      Invalid input exception, caused by spikes in previous steps,
"                      fixed
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/8365">8365</a>
"                      Invalid input exception, caused by spikes in previous steps,
"                      fixed
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/8969">8969</a>
"                      boost::geometry::model::point single argument constructor should
"                      be explicit
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/8825">8825</a>
"                      Patch adding member variable documentation to doxygen_xml2qbk
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/8652">8652</a>
"                      Intersection fails for triangle-triangle intersection. Caused
"                      by spike, fixed
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/9047">9047</a>
"                      Boost files that include themselves (strategies/intersection.hpp),
"                      fixed
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/graph/index.html">Graph</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <code><span class="keyword">void</span></code> is no longer allowed
"                as a bundled property type (for example, in the VertexProperties
"                template parameters to graph types); it did not work reliably before,
"                but a static assertion now forbids it entirely. Use <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">no_property</span></code> instead.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added support for <code><span class="identifier">finish_edge</span></code>
"                visitor event point in depth-first search; the change should be backward-compatible
"                with visitors that do not have that member function.
"              </div>
"            </li>
"            <li>
"              <div>
"                Disabled building of tests on Sun compiler.
"              </div>
"            </li>
"            <li>
"              <div>
"                Multiple source vertices are supported in non-named-parameter versions
"                of <code><span class="identifier">breadth_first_visit</span></code>,
"                <code><span class="identifier">breadth_first_search</span></code>,
"                <code><span class="identifier">dijkstra_shortest_paths</span></code>,
"                and <code><span class="identifier">dijkstra_shortest_paths_no_init</span></code>.
"                This feature is not yet documented; to use it, replace the single
"                parameter for the source vertex in each of these functions by two
"                input iterators of the same type containing the source vertices to
"                use.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added Hawick circuits algorithm; contributed by Louis Dionne.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added edge coloring algorithm; contributed by Maciej Piechotka.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added min-cost max-flow algorithm; contributed by Piotr Wygocki.
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugs and feature requests from Trac fixed: <a href="https://svn.boost.org/trac/boost/ticket/5269">#5269</a>, <a href="https://svn.boost.org/trac/boost/ticket/8317">#8317</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/8433">#8433</a>, <a href="https://svn.boost.org/trac/boost/ticket/8791">#8791</a>, <a href="https://svn.boost.org/trac/boost/ticket/8877">#8877</a>, <a href="https://svn.boost.org/trac/boost/ticket/8986">#8986</a>, <a href="https://svn.boost.org/trac/boost/ticket/9012">#9012</a>, <a href="https://svn.boost.org/trac/boost/ticket/9080">#9080</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/functional/hash/">Hash</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Simplify a SFINAE check so that it will hopefully work on Sun 5.9
"                (<a href="https://svn.boost.org/trac/boost/ticket/8822">#8822</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Suppress Visual C++ infinite loop warning (<a href="https://svn.boost.org/trac/boost/ticket/8568">#8568</a>).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/interprocess/">Interprocess</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed bugs <a href="https://svn.boost.org/trac/boost/ticket/7156">#7156</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/7164">#7164</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/8277">#8277</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/8976">#8976</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/9065">#9065</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/9073">#9073</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/9008">#9008</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/intrusive/">Intrusive</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <strong>Source breaking</strong>: Deprecated <code><span class="identifier">xxx_dont_splay</span></code> functions from splay
"                containers. Deprecated <code><span class="identifier">splay_set_hook</span></code>
"                from splay containers, use <code><span class="identifier">bs_set_hook</span></code>
"                instead. Both will be removed in Boost 1.56.
"              </div>
"            </li>
"            <li>
"              <div>
"                <strong>ABI breaking</strong>: Hash containers' end
"                iterator was implemented pointing to one-past the end of the bucket
"                array (see <a href="https://svn.boost.org/trac/boost/ticket/8698">#8698</a>)
"                causing severe bugs when values to be inserted where allocated next
"                to the bucket array. End iterator implementation was changed to point
"                to the beginning of the bucket array.
"              </div>
"            </li>
"            <li>
"              <div>
"                Big refactoring in order to reduce template and debug symbol bloat.
"                Test object files have been slashed to half in MSVC compilers in
"                Debug mode. Toolchains without Identical COMDAT Folding (ICF) should
"                notice size improvements.
"              </div>
"            </li>
"            <li>
"              <div>
"                Implemented <span class="link">SCARY iterators</span>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/conversion/lexical_cast.htm">Lexical cast</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">bad_alloc</span></code> exceptions are now are
"                not converted to <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">bad_lexical_cast</span></code>
"                <a href="https://svn.boost.org/trac/boost/ticket/8966">#8966</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added static assert that checks for <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">numeric_limits</span></code>
"                specializations if they are required for conversion. Use <code><span class="identifier">BOOST_HAS_INT128</span></code> for detecting
"                128 bit integers support <a href="https://svn.boost.org/trac/boost/ticket/8790">#8790</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Documentation improved and more usage examples added.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/log/">Log</a>:</span>
"          <ul>
"            <li>
"              <div>
"                General changes:
"                <ul>
"                  <li>
"                    <div>
"                      Added a new configuration macro <code><span class="identifier">BOOST_LOG_WITHOUT_DEFAULT_FACTORIES</span></code>.
"                      By defining this macro the user can disable compilation of
"                      the default filter and formatter factories used by settings
"                      parsers. This can substantially reduce binary sizes while still
"                      retaining support for settings parsers.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Rewritten some of the parsers to reduce the compiled binary
"                      size. The rewritten parsers are more robust in detecting ambiguous
"                      and incorrect input.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      The following headers are deprecated: <code><span class="identifier">boost</span><span class="special">/</span><span class="identifier">log</span><span class="special">/</span><span class="identifier">utility</span><span class="special">/</span><span class="identifier">intrusive_ref_counter</span><span class="special">.</span><span class="identifier">hpp</span></code>,
"                      <code><span class="identifier">boost</span><span class="special">/</span><span class="identifier">log</span><span class="special">/</span><span class="identifier">utility</span><span class="special">/</span><span class="identifier">explicit_operator_bool</span><span class="special">.</span><span class="identifier">hpp</span></code>, <code><span class="identifier">boost</span><span class="special">/</span><span class="identifier">log</span><span class="special">/</span><span class="identifier">utility</span><span class="special">/</span><span class="identifier">empty_deleter</span><span class="special">.</span><span class="identifier">hpp</span></code>.
"                      These headers will be removed in future releases. The contents
"                      of these headers were moved to other libraries.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bug fixes:
"                <ul>
"                  <li>
"                    <div>
"                      Fixed <code><span class="identifier">timer</span></code>
"                      attribute generating incorrect time readings on Windows on
"                      heavy thread contention when <code><span class="identifier">QueryPerformanceCounter</span></code>
"                      API was used.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fixed a bug in the filter parser that prevented using parsed
"                      filters with some attributes.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fixed thread id formatting discrepancies between the default
"                      sink and formatters.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Closed tickets: <a href="https://svn.boost.org/trac/boost/ticket/8815">#8815</a>, <a href="https://svn.boost.org/trac/boost/ticket/8819">#8819</a>, <a href="https://svn.boost.org/trac/boost/ticket/8915">#8915</a>, <a href="https://svn.boost.org/trac/boost/ticket/8917">#8917</a>,
"                      <a href="https://svn.boost.org/trac/boost/ticket/9139">#9139</a>, <a href="https://svn.boost.org/trac/boost/ticket/9140">#9140</a>, <a href="https://svn.boost.org/trac/boost/ticket/9153">#9153</a>, <a href="https://svn.boost.org/trac/boost/ticket/9155">#9155</a>.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                See <a href="/libs/log/doc/html/log/changelog.html">changelog</a>
"                for more details.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/math/">Math</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Suppress numerous warnings (mostly from GCC-4.8 and MSVC) <a href="https://svn.boost.org/trac/boost/ticket/8384">#8384</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/8855">#8855</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/9107">#9107</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/9109">#9109</a>..
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed PGI compilation issue <a href="https://svn.boost.org/trac/boost/ticket/8333">#8333</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed PGI constant value initialization issue that caused erf to
"                generate incorrect results <a href="https://svn.boost.org/trac/boost/ticket/8621">#8621</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Prevent macro expansion of some C99 macros that are also C++ functions
"                <a href="https://svn.boost.org/trac/boost/ticket/8732">#8732</a>
"                and <a href="https://svn.boost.org/trac/boost/ticket/8733">#8733</a>..
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed Student's T distribution to behave correctly with huge degrees
"                of freedom (larger than the largest representable integer) <a href="https://svn.boost.org/trac/boost/ticket/8837">#8837</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Make some core functions usable with <code><span class="keyword">long</span>
"                <span class="keyword">double</span></code> even when the platform
"                has no standard library <code><span class="keyword">long</span>
"                <span class="keyword">double</span></code> support <a href="https://svn.boost.org/trac/boost/ticket/8940">#8940</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix error handling of distributions to catch invalid scale and location
"                parameters when the random variable is infinite <a href="https://svn.boost.org/trac/boost/ticket/9042">#9042</a>
"                and <a href="https://svn.boost.org/trac/boost/ticket/9126">#9126</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Add workaround for broken &lt;tuple&gt; in Intel C++ 14 <a href="https://svn.boost.org/trac/boost/ticket/9087">#9087</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Improve consistency of argument reduction in the elliptic integrals
"                <a href="https://svn.boost.org/trac/boost/ticket/9104">#9104</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix bug in inverse incomplete beta that results in cancellation errors
"                when the beta function is really an arcsine or Student's T distribution.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix issue in Bessel I and K function continued fractions that causes
"                spurious over/underflow.
"              </div>
"            </li>
"            <li>
"              <div>
"                Add improvement to non-central chi squared distribution quantile
"                due to Thomas Luu.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/move/">Move</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed bugs <a href="https://svn.boost.org/trac/boost/ticket/7952">#7952</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/8764">#8764</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/8765">#8765</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/8842">#8842</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/8979">#8979</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/msm/">Meta State Machine</a>:</span>
"          <ul>
"            <li>
"              <div>
"                New feature: interrupt states now support a sequence of events to
"                end the interruption.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed Trac <a href="https://svn.boost.org/trac/boost/ticket/8686">#8686</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/multiprecision/">Multiprecision</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added support for Boost.Serialization.
"              </div>
"            </li>
"            <li>
"              <div>
"                Suppressed some GCC warnings. See <a href="https://svn.boost.org/trac/boost/ticket/8872">8872</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed bug in pow for large integer arguments. See <a href="https://svn.boost.org/trac/boost/ticket/8809">8809</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed bug in pow for calculation of 0[super N]. See <a href="https://svn.boost.org/trac/boost/ticket/8798">8798</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed bug in fixed precision cpp_int IO code that causes conversion
"                to string to fail when the bit count is very small (less than CHAR_BIT).
"                See <a href="https://svn.boost.org/trac/boost/ticket/8745">8745</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed bug in cpp_int that causes left shift to fail when a fixed
"                precision type would overflow. See <a href="https://svn.boost.org/trac/boost/ticket/8741">8741</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed some cosmetic warnings from cpp_int. See <a href="https://svn.boost.org/trac/boost/ticket/8748">8748</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed calls to functions which are required to be macros in C99.
"                See <a href="https://svn.boost.org/trac/boost/ticket/8732">8732</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed bug that causes construction from INT_MIN, LONG_MIN etc to
"                fail in cpp_int. See <a href="https://svn.boost.org/trac/boost/ticket/8711">8711</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/multi_index/index.html">Multi-index Containers</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Boost.MultiIndex has been brought to a higher level of compliance
"                with C++11.
"              </div>
"              <ul>
"                <li>
"                  <div>
"                    <code><span class="identifier">multi_index_container</span></code>
"                    is now efficiently movable.
"                  </div>
"                </li>
"                <li>
"                  <div>
"                    Initializer lists supported.
"                  </div>
"                </li>
"                <li>
"                  <div>
"                    Emplace functions provided.
"                  </div>
"                </li>
"                <li>
"                  <div>
"                    Non-copyable elements (such as <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">unique_ptr</span><span class="special">&lt;</span><span class="identifier">T</span><span class="special">&gt;</span></code>) supported. This includes
"                    insertion of a range [<code><span class="identifier">first</span></code>,<code><span class="identifier">last</span></code>) where the iterators point
"                    to a type that is convertible to that of the element: no copy
"                    construction happens in the process.
"                  </div>
"                </li>
"                <li>
"                  <div>
"                    Random access indices provide <code><span class="identifier">shrink_to_fit</span><span class="special">()</span></code>.
"                  </div>
"                </li>
"              </ul>
"              <div>
"                Refer to the <a href="/libs/multi_index/doc/compiler_specifics.html">compiler
"                specifics</a> section for limitations on pre-C++11 compilers.
"              </div>
"            </li>
"            <li>
"              <div>
"                The following classes are deprecated:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="/libs/multi_index/doc/reference/key_extraction.html#member_offset"><code><span class="identifier">member_offset</span></code></a>,
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="/libs/multi_index/doc/reference/key_extraction.html#const_mem_fun_explicit"><code><span class="identifier">const_mem_fun_explicit</span></code></a>,
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="/libs/multi_index/doc/reference/key_extraction.html#const_mem_fun_explicit"><code><span class="identifier">mem_fun_explicit</span></code></a>,
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="/libs/multi_index/doc/reference/key_extraction.html#composite_key_result_equal_to"><code><span class="identifier">composite_key_result_equal_to</span></code></a>,
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="/libs/multi_index/doc/reference/key_extraction.html#composite_key_result_less"><code><span class="identifier">composite_key_result_less</span></code></a>,
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="/libs/multi_index/doc/reference/key_extraction.html#composite_key_result_greater"><code><span class="identifier">composite_key_result_greater</span></code></a>,
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="/libs/multi_index/doc/reference/key_extraction.html#composite_key_result_hash"><code><span class="identifier">composite_key_result_hash</span></code></a>.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Maintenance fixes.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/mpi/">MPI</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Replaced calls to deprecated MPI functions
"              </div>
"            </li>
"            <li>
"              <div>
"                Added support for multi-threaded initialization
"              </div>
"            </li>
"            <li>
"              <div>
"                Added in-place collectives
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/phoenix/">Phoenix</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/9049">#9049</a> <code><span class="identifier">phoenix</span><span class="special">::</span><span class="identifier">function</span></code>
"                constructor is constexpr.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/polygon/">Polygon</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Updated CGAL part of the Voronoi benchmark with patches from Sebastien
"                Loriot. Updated documentation.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added polygon decomposition capability to polygon_90_set_data container
"                (patch from Intel). Updated documentation.
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugs fixed from Trac: <a href="https://svn.boost.org/trac/boost/ticket/8197">#8197</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/property_map/index.html">PropertyMap</a>:</span>
"          <ul>
"            <li>
"              <div>
"                dynamic_properties objects can now be built by non-destructively
"                chaining <code><span class="special">.</span><span class="identifier">property</span><span class="special">(</span><span class="identifier">name</span><span class="special">,</span> <span class="identifier">pm</span><span class="special">)</span></code> calls. Example:
"              </div>
"<pre><span class="identifier">boost</span><span class="special">::</span><span class="identifier">dynamic_properties</span><span class="special">()</span>
"  <span class="special">.</span><span class="identifier">property</span><span class="special">(</span><span class="string">"color"</span><span class="special">,</span> <span class="identifier">color_map</span><span class="special">)</span>
"  <span class="special">.</span><span class="identifier">property</span><span class="special">(</span><span class="string">"pos"</span><span class="special">,</span> <span class="identifier">position_map</span><span class="special">)</span>
"</pre>
"            </li>
"            <li>
"              <div>
"                The use of raw pointers as property maps is deprecated; it often
"                failed on Visual Studio in the past. This usage has been removed
"                from all tests and examples in Boost.Graph. The replacement to use
"                for vertex properties in graphs (the most common use for this feature)
"                is:
"              </div>
"<pre><span class="identifier">boost</span><span class="special">::</span><span class="identifier">make_iterator_property_map</span><span class="special">(</span>
"  <span class="special">&lt;</span><span class="identifier">pointer</span> <span class="keyword">or</span> <span class="identifier">container</span> <span class="special">.</span><span class="identifier">begin</span><span class="special">()</span> <span class="identifier">iterator</span><span class="special">&gt;,</span>
"  <span class="identifier">get</span><span class="special">(</span><span class="identifier">boost</span><span class="special">::</span><span class="identifier">vertex_index</span><span class="special">,</span> <span class="special">&lt;</span><span class="identifier">graph</span> <span class="identifier">object</span><span class="special">&gt;))</span>
"</pre>
"              <div>
"                (Note: the lack of namespace qualification on get() in this code
"                is necessary for generic code). Outside a graph context, the closest
"                equivalent is:
"              </div>
"<pre><span class="identifier">boost</span><span class="special">::</span><span class="identifier">make_iterator_property_map</span><span class="special">(</span>
"  <span class="special">&lt;</span><span class="identifier">pointer</span><span class="special">&gt;,</span>
"  <span class="identifier">boost</span><span class="special">::</span><span class="identifier">typed_identity_property_map</span><span class="special">&lt;</span><span class="identifier">std</span><span class="special">::</span><span class="identifier">size_t</span><span class="special">&gt;())</span>
"</pre>
"              <div>
"                There are commented-out static assertions on lines 151 and 159 of
"                <code><span class="special">&lt;</span><span class="identifier">boost</span><span class="special">/</span><span class="identifier">property_map</span><span class="special">/</span><span class="identifier">property_map</span><span class="special">.</span><span class="identifier">hpp</span><span class="special">&gt;</span></code> that can be un-commented to find
"                deprecated uses of pointers in user code.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/rational">Rational</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added <code><span class="identifier">lowest</span></code> and
"                <code><span class="identifier">max_digits10</span></code>, members
"                of std::numeric_limits added in C++11, to the unit-test code. Needed
"                since Boost.Test refers to one of them when compiled in C++11 mode.
"              </div>
"            </li>
"            <li>
"              <div>
"                Changed initialization of some internal variables to something that
"                cannot be a narrowing conversion, which fixes issue <a href="https://svn.boost.org/trac/boost/ticket/5855">#5855</a>. Needed
"                since narrowing conversions are an error in C++11.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/smart_ptr/index.html">SmartPtr</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added <code><span class="identifier">boost</span><span class="special">/</span><span class="identifier">smart_ptr</span><span class="special">/</span><span class="identifier">intrusive_ref_counter</span><span class="special">.</span><span class="identifier">hpp</span></code> header, extracted from Boost.Log.
"                The header implements a mixin base class that adds support for <code><span class="identifier">intrusive_ptr</span></code> to user's classes.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/thread/">Thread</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <em>New Features:</em>
"                <ul>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/8519">#8519</a>
"                      Synchro: Update class barrier with a completion function.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/8515">#8515</a>
"                      Async: Add <code><span class="identifier">shared_future</span><span class="special">::</span><span class="identifier">then</span></code>.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/8519">#8519</a>
"                      Synchro: Update class barrier with a completion function
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/8615">#8615</a>
"                      Async: Replace make_future/make_shared_future by make_ready_future.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/8627">#8627</a>
"                      Async: Add future&lt;&gt;::unwrap and unwrapping constructor.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/8677">#8677</a>
"                      Async: Add future&lt;&gt;::get_or.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/8678">#8678</a>
"                      Async: Add future&lt;&gt;::fallback_to.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/8891">#8891</a>
"                      upgrade_to_unique_lock: missing mutex() function.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/8955">#8955</a>
"                      Request for more efficient way to get exception_ptr from future.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                <em>Fixed Bugs:</em>
"                <ul>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/7461">#7461</a>
"                      detail::win32::ReleaseSemaphore may be called with count_to_release
"                      equal to 0
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/8070">#8070</a>
"                      prefer GetTickCount64 over GetTickCount
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/8768">#8768</a>
"                      win32 condition_variable::wait_until infinite wait in rare
"                      cases.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/8817">#8817</a>
"                      Boost Thread Windows CE _createthreadex handling breaks mingw
"                      w64.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/8943">#8943</a>
"                      Failed to compile code using boost::call_once with Intel C++
"                      Composer XE 2013 on Windows.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/8931">#8931</a>
"                      Typos in external_locking reference.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/9029">#9029</a>
"                      Misprint in documentation.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/9037">#9037</a>
"                      gcc -Wshadow gives warnings in condition_variable{,_fwd}.hpp.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/9041">#9041</a>
"                      Boost.Thread DSO's may need to link with Boost.Atomic.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/9048">#9048</a>
"                      boost::scoped_thread useless ctor with variadic template arguments.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/9079">#9079</a>
"                      Condition variable will wait forever for some timepoint values
"                      (Win).
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/timer/">Timer</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed compilation on Intel compiler <a href="https://svn.boost.org/trac/boost/ticket/8956">#8956</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/type_traits/">Type Traits</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added <code><span class="identifier">is_copy_contructible</span></code>
"                trait <a href="https://svn.boost.org/trac/boost/ticket/8802">#8802</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/unordered/">Unordered</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Avoid some warnings (<a href="https://svn.boost.org/trac/boost/ticket/8851">#8851</a>, <a href="https://svn.boost.org/trac/boost/ticket/8874">#8874</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Avoid exposing some detail functions via. ADL on the iterators.
"              </div>
"            </li>
"            <li>
"              <div>
"                Work around variadic parameter bug in Visual Studio 2013. The compiler
"                still has problems with initializer lists, but it might not be possible
"                to work around those.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/utility/index.html">Utility</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">result_of</span></code> can be set to use TR1
"                protocol by default and fall back to <code><span class="keyword">decltype</span></code>
"                if the function object does not support it (like C++11 lambda functions,
"                for example). Define <code><span class="identifier">BOOST_RESULT_OF_USE_TR1_WITH_DECLTYPE_FALLBACK</span></code>
"                configuration macro to enable this mode.
"              </div>
"            </li>
"            <li>
"              <div>
"                Improved support for C++11 in the <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">base_from_member</span></code>
"                class template. The class implements perfect forwarding for the constructor
"                arguments, if the compiler supports rvalue references, variadic templates
"                and function template default arguments.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added <code><span class="identifier">boost</span><span class="special">/</span><span class="identifier">utility</span><span class="special">/</span><span class="identifier">explicit_operator_bool</span><span class="special">.</span><span class="identifier">hpp</span></code> and <code><span class="identifier">boost</span><span class="special">/</span><span class="identifier">utility</span><span class="special">/</span><span class="identifier">empty_deleter</span><span class="special">.</span><span class="identifier">hpp</span></code>
"                headers, which were extracted from Boost.Log. The headers implement
"                utilities for defining explicit conversion operators to <code><span class="keyword">bool</span></code> and a deleter function object
"                that does nothing, respectively.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/variant/">Variant</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed compilation of constructor and assignment operator with const
"                rvalues input parameters <a href="https://svn.boost.org/trac/boost/ticket/8988">#8988</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed compilation of move assignment operator for situations when
"                one of the variant template classes has nothrow copy constructor
"                and throwing move constructor <a href="https://svn.boost.org/trac/boost/ticket/8772">#8772</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix compilation on exception-disabled environments <a href="https://svn.boost.org/trac/boost/ticket/8717">#8717</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix unreachable code warnings <a href="https://svn.boost.org/trac/boost/ticket/8665">#8665</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Removed duplicate code <a href="https://svn.boost.org/trac/boost/ticket/7601">#7601</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/wave/">Wave</a>:</span>
"          <ul>
"            <li>
"              <div>
"                See the <a href="/libs/wave/ChangeLog">Changelog</a> for details.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/xpressive">xpressive</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/8843">#8843</a> throw instead of assert at incomplete charset
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/8880">#8880</a> remove unused local typedef
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/8882">#8882</a> use RAII instead of try/catch in sequence_stack.hpp
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/8474">#8474</a> make xpressive play nice with clang's -Wimplicit-fallthrough
"                diagnostic
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_55_0.updated_tools">
"    <h3><span class="link">Updated Tools</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/tools/quickbook">Quickbook</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Quickbook 1.6 finalized, see the <a href="/doc/html/quickbook/versions.html#language_versions.1_6">Quickbook
"                documentation for details</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_55_0.compilers_tested">
"    <h3><span class="link">Compilers Tested</span></h3>
"    <p>
"      Boost's primary test compilers are:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Linux:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.3, 3.2, 3.1, 3.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11, libc++: 3.4, 3.3
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.8.1, 4.7.3, 4.6.3, 4.5.3, 4.4.7
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++98: 4.8.1
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          OS X:
"          <ul>
"            <li>
"              <div>
"                GCC: 4.2
"              </div>
"            </li>
"            <li>
"              <div>
"                Apple Clang: 5.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Apple Clang, C++11: 5.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Windows:
"          <ul>
"            <li>
"              <div>
"                GCC, mingw: 4.8.0, 4.7.2, 4.6.3, 4.5.4, 4.4.7
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++: 11.0, 10.0, 9.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"    <p>
"      Boost's additional test compilers include:
"    </p>
"    <ul>
"      <li>
"        <div>
"          OS X:
"          <ul>
"            <li>
"              <div>
"                Apple Clang: 5.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Apple Clang, C++11: 5.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang: trunk
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: trunk
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.2.1
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Linux:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.3, 3.2, 3.1, 3.0, trunk
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.4
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11, libc++: 3.4, 3.3
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.9.0 (experimental), 4.8.1, 4.7.3, 4.6.4, 4.5.3, 4.4.7
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++98: 4.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel: 13.0.1, 12.1.6
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Windows:
"          <ul>
"            <li>
"              <div>
"                GCC, mingw: 4.8.0, 4.7.2, 4.6.3, 4.5.4, 4.4.7
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++: 11.0, 10.0, 9.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_55_0.acknowledgements">
"    <h3><span class="link">Acknowledgements</span></h3>
"    <p>
"      <a href="/users/people/beman_dawes.html">Beman Dawes</a>, Eric Niebler,
"      <a href="/users/people/rene_rivera.html">Rene Rivera</a>, Daniel James,
"      Vladimir Prus and Marshall Clow managed this release.
"    </p>
"  </div>
"
-hash
"fe8648672118c6c59e478971676e0fb2c5fd51c182b9917c11c18a7e5e8b8911
-id
"version_1_55_0
-notice_url
-notice_xml
-pub_date
@Mon, 11 Nov 2013 11:50:20 -0800
-purpose_xml
"
"      New Libraries: Predef. Updated Libraries: Accumulators, Any, Asio, Atomic,
"      Config, Chrono, Circular Buffer, Container, Context, Coroutine, Filesystem,
"      Fusion, Geometry, Graph, Hash, Interprocess, Intrusive, Lexical Cast, Log,
"      Math, Meta State Machine, Move, Multiprecision, Multi-index Containers, MPI,
"      Phoenix, Polygon, PropertyMap, Rational, Thread, Timer, Type Traits, Unordered,
"      Utility, Variant, Wave, xpressive.
"
-title_xml
"Version 1.55.0
)
(feed/history/boost_1_64_0.qbk
-description_xhtml
"
"
"
"  <div id="version_1_64_0.new_libraries">
"    <h3><span class="link">New Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/process/">Process</a>:</span>
"  Process library by Klemens
"          D. Morgenstern, that provides cross platorm ways to allows you to:
"        </div>
"        <ul>
"          <li>
"            <div>
"              create child processes
"            </div>
"          </li>
"          <li>
"            <div>
"              setup streams for child processes
"            </div>
"          </li>
"          <li>
"            <div>
"              communicate with child processes through streams (synchronously or
"              asynchronously)
"            </div>
"          </li>
"          <li>
"            <div>
"              wait for processes to exit (synchronously or asynchronously)
"            </div>
"          </li>
"          <li>
"            <div>
"              terminate processes
"            </div>
"          </li>
"        </ul>
"        <div>
"          Broken feature:
"        </div>
"        <ul>
"          <li>
"            <div>
"              <a href="https://github.com/klemens-morgenstern/boost-process/issues/67">GitHub
"              #67: <em>"group.wait() does not return"</em></a>.
"            </div>
"          </li>
"        </ul>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_64_0.updated_libraries">
"    <h3><span class="link">Updated Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/any/">Any</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Suppressed false warnings about returning reference to temporary
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">addressof</span></code> is now used instead of
"                directly taking the address <a href="https://svn.boost.org/trac/boost/ticket/12615">#12615</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                Headers are not included using double quotes any more <a href="https://svn.boost.org/trac/boost/ticket/12053">#12053</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                CI tests now run with <code><span class="identifier">address</span></code>,
"                <code><span class="identifier">leak</span></code>, and <code><span class="identifier">undefined</span></code> sanitizers
"              </div>
"            </li>
"            <li>
"              <div>
"                Added more test
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/atomic/">Atomic</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed possible incorrect code generation in 64-bit atomic operations
"                on 32-bit x86 with gcc versions older than 4.7 and compatible compilers.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/config/">Config</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added <code><span class="identifier">BOOST_NO_CXX11_SFINAE_EXPR</span></code>
"                defect detection.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/container/">Container</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed bugs:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/12749">Trac
"                      #12749: <em>"container::pmr::polymorphic_allocator
"                      compilation error"</em></a>.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/11333">Trac
"                      #11333: <em>"boost::basic_string_ref should interop
"                      with boost::container::basic_string"</em></a>.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/container/pull/45">GitHub
"                      #45: <em>"emplace_back must return reference to
"                      back(), not to *end()"</em></a>.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/context/">Context</a>:</span>
"          <ul>
"            <li>
"              <div>
"                new API: call/cc
"              </div>
"            </li>
"            <li>
"              <div>
"                deprecated API:execution-context
"              </div>
"            </li>
"            <li>
"              <div>
"                stack manipulation on MIPS fixed
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/12719">#12719</a> segmentation fault when built with mingw-w64
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/12948">#12948</a> Unexpected snprintf result is on Android ARM
"              </div>
"            </li>
"            <li>
"              <div>
"                #38: context_entry() crashes on macOS
"              </div>
"            </li>
"            <li>
"              <div>
"                #39: Unknown directive .cpu on aarch64 with Clang 3.8 on Android
"              </div>
"            </li>
"            <li>
"              <div>
"                #41: std::bind() fails with invoke()
"              </div>
"            </li>
"            <li>
"              <div>
"                #46: "rename of continuation member functions" missed a
"                spot
"              </div>
"            </li>
"            <li>
"              <div>
"                #50: bad assembly for fcontext on ppc64/sysv/elf
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/conversion/">Conversion</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Docs were ported to Quickbook (thanks to Mikhail Maksimov for the
"                port)
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed a memory leak in test (thanks to Mikhail Maksimov for the fix)
"              </div>
"            </li>
"            <li>
"              <div>
"                CI tests now run with <code><span class="identifier">address</span></code>,
"                <code><span class="identifier">leak</span></code>, and <code><span class="identifier">undefined</span></code> sanitizers
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/core/">Core</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Implemented <code><span class="keyword">constexpr</span></code>
"                <code><span class="identifier">addressof</span></code> on compilers
"                that support C++11 <code><span class="keyword">constexpr</span></code>
"                and SFINAE expressions (Glen Fernandes). <code><span class="identifier">BOOST_CORE_NO_CONSTEXPR_ADDRESSOF</span></code>
"                macro indicates when <code><span class="keyword">constexpr</span></code>
"                <code><span class="identifier">addressof</span></code> is not
"                available.
"              </div>
"            </li>
"            <li>
"              <div>
"                In <code><span class="identifier">lightweight_test</span><span class="special">.</span><span class="identifier">hpp</span></code>,
"                added new macros <code><span class="identifier">BOOST_TEST_ALL_EQ</span></code>
"                and <code><span class="identifier">BOOST_TEST_ALL_WITH</span></code>
"                for testing container contents (Bjorn Reese).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/coroutine2/">Coroutine2</a>:</span>
"          <ul>
"            <li>
"              <div>
"                #4: coroutine2&lt;&gt; does not accept std::bind
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/dll/">DLL</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed WinCE compilation
"              </div>
"            </li>
"            <li>
"              <div>
"                Added <code><span class="identifier">boost</span><span class="special">:</span><span class="identifier">dll</span><span class="special">::</span><span class="identifier">symbol_location_ptr</span></code> function for
"                getting location of a symbol by pointer that could not be dereferenced
"                (<code><span class="keyword">void</span></code> pointer for example)
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed UB in <code><span class="identifier">detail</span><span class="special">::</span><span class="identifier">aggressive_ptr_cast</span></code>
"                for member pointers
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed leaks in experimental smart imports
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed warnings
"              </div>
"            </li>
"            <li>
"              <div>
"                CI tests now run with <code><span class="identifier">address</span></code>
"                and <code><span class="identifier">leak</span></code> sanitizers
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/fiber/">Fiber</a>:</span>
"          <ul>
"            <li>
"              <div>
"                (un)bounded_channel&lt;&gt; removed
"              </div>
"            </li>
"            <li>
"              <div>
"                #100: ASIO: unbuffered_channel / scheduler notify issue
"              </div>
"            </li>
"            <li>
"              <div>
"                #105: skynet variants crash on windows
"              </div>
"            </li>
"            <li>
"              <div>
"                #106: Passing a fixed_stack allocator to async/packaged_task doesn't
"                compile
"              </div>
"            </li>
"            <li>
"              <div>
"                #110: Compile error on ARMv6
"              </div>
"            </li>
"            <li>
"              <div>
"                #111: endless-loop in buffered_channel::try_value_pop()
"              </div>
"            </li>
"            <li>
"              <div>
"                #114: buffered_channel::try_push<code> <span class="identifier">does</span>
"                <span class="keyword">not</span> <span class="identifier">wake</span>
"                <span class="identifier">fibers</span> <span class="identifier">in</span>
"                </code>pop`
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/geometry/">Geometry</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improvements:
"                <ul>
"                  <li>
"                    <div>
"                      matrix transformation is now based on Boost.QVM instead of
"                      Boost.Ublas
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Breaking changes:
"                <ul>
"                  <li>
"                    <div>
"                      ublas_transformer is renamed to matrix_transformer
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      explicit modifier is added to constructors of rtree index::dynamic_*
"                      parameters
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      strategy::area::huiller replaced by strategy::area::spherical
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Solved issues:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/geometry/issues/363">363</a>
"                      Missing includes in geometry/index/parameters.hpp
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/geometry/issues/364">364</a>
"                      within(Linear, Areal) compilation error when arguments use
"                      different point types
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/geometry/issues/370">370</a>
"                      Buffer Seg Faults with Ring as Input
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Solved tickets:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/11899">11899</a>
"                      boost::geometry::equals doesn't handle open polygons
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/11930">11930</a>
"                      Inaccuracy of area::huiller strategy
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/11931">11931</a>
"                      Wrong spherical area with pole encircling polygons
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/12410">12410</a>
"                      Lack of support of geographic coordinate system in correct()
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/12566">12566</a>
"                      Ambiguous template instantiation in equal_to&lt;&gt; when pair
"                      value contains raw pointer
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/12861">12861</a>
"                      Segmentation fault in stdlibc++ (gcc 4.8.2) affecting rtree
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/12885">12885</a>
"                      Use BOOST_THROW_EXCEPTION instead of throw
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugfixes:
"                <ul>
"                  <li>
"                    <div>
"                      Fix distance_measure in get_turn_info
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/functional/hash/">Hash</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Stop using <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">unary_function</span></code> and <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">binary_function</span></code> when they're not
"                available.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/interprocess/">Interprocess</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed bugs:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/12617">Trac
"                      #12617 (<em>"clock_gettime not available on OS X
"                      10.11"</em>)</a>.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/12744">Trac
"                      #12744 (<em>"winapi::set_timer_resolution inadvertently
"                      changes timer resolution (Windows)"</em>)</a>.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/interprocess/pull/32">GitHub
"                      Pull #32 (<em>"Conform to std::pointer_traits requirements"</em>)</a>.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/interprocess/pull/33">GitHub
"                      Pull #33 (<em>"explicit cast to derived class"
"                      and "64/32 bit processes sharing"</em>)</a>.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/interprocess/pull/34">GitHub
"                      Pull #34 (<em>"Update example to use multi_index::member
"                      instead of BOOST_MULTI_INDEX_MEMBER"</em>)</a>.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/interprocess/pull/35">GitHub
"                      Pull #35 (<em>"Fixed options for cross-compilation"</em>)</a>.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                New experimental option <code><span class="identifier">BOOST_INTERPROCESS_BOOTSTAMP_IS_SESSION_MANAGER_BASED</span></code>
"                from Windows systems. This option derives the unique bootstamp used
"                to name the folder where shared memory is placed from registry values
"                associated with the session manager. This option only works on Vista
"                and later systems and might be more stable than the default version.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/intrusive/">Intrusive</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed bugs:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/12745">Boost
"                      Trac #12745: <em>key_nodeptr_comp broken if the key type
"                      is void*</em></a>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/12761">Boost
"                      Trac #12761: <em>intrusive::set::swap doesn't swap the
"                      comparison function*</em></a>
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/lexical_cast/">LexicalCast</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed multiple warnings <a href="https://svn.boost.org/trac/boost/ticket/11842">#11842</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                CI tests now run with <code><span class="identifier">address</span></code>,
"                <code><span class="identifier">leak</span></code>, and <code><span class="identifier">undefined</span></code> sanitizers
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/math/">Math</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Big push to ensure all functions in also in C99 are compatible with
"                Annex F.
"              </div>
"            </li>
"            <li>
"              <div>
"                Improved accuracy of the Bessel functions I0, I1, K0 and K1, see
"                <a href="https://svn.boost.org/trac/boost/ticket/12066">12066</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/multi_index/index.html">Multi-index Containers</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed a bug related to ambiguous references in the presence of more
"                than one ranked index (ticket <a href="https://svn.boost.org/trac/boost/ticket/12955">#12955</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Maintenance fixes.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/multiprecision/">Multiprecision</a>:</span>
"          <ul>
"            <li>
"              <div>
"                In <code><span class="identifier">cpp_bin_float</span></code>
"                prevent double rounding when converting to a denormalized float.
"                See <a href="https://svn.boost.org/trac/boost/ticket/12527">#12527</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix bug in integer sqrt for very small integers. See <a href="https://svn.boost.org/trac/boost/ticket/12559">#12559</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix conversion to signed-zero in <code><span class="identifier">cpp_bin_float</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Change <code><span class="identifier">cpp_bin_float</span></code>
"                rounding code to round at arbitrary location so we can use it for
"                conversions, see <a href="https://svn.boost.org/trac/boost/ticket/12527">#12527</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Improve performance of 128-bit bit-scan operations.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix subtraction of very small quantities in <code><span class="identifier">cpp_bin_float</span></code>.
"                See: <a href="https://svn.boost.org/trac/boost/ticket/12580">#12580</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Bring error handling into line with C99 Annex F. See <a href="https://svn.boost.org/trac/boost/ticket/12581">#12581</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix bitwise export of trivial <code><span class="identifier">cpp_int</span></code>'s,
"                see <a href="https://svn.boost.org/trac/boost/ticket/12627">#12627</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix <code><span class="identifier">ilogb</span></code> (and code
"                that uses it) to consistently return the smallest value of the exponent
"                type when the argument is zero, see <a href="https://svn.boost.org/trac/boost/ticket/12625">#12625</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Allow conversion from <code><span class="identifier">__float128</span></code>
"                to <code><span class="identifier">cpp_bin_float</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix bug in left shift of <code><span class="identifier">cpp_int</span></code>
"                which would result in bit-loss, see <a href="https://svn.boost.org/trac/boost/ticket/12790">#12790</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed bugs in bounded but variable precision <code><span class="identifier">cpp_int</span></code>'s
"                caused by over-aggressive constexpr optimization, see <a href="https://svn.boost.org/trac/boost/ticket/12798">#12798</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/predef/">Predef</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix Intel C/C++ compiler version specification.
"              </div>
"            </li>
"            <li>
"              <div>
"                Add <code><span class="identifier">BOOST_VERSION_NUMBER_MAJOR</span></code>,
"                <code><span class="identifier">BOOST_VERSION_NUMBER_MINOR</span></code>,
"                <code><span class="identifier">BOOST_VERSION_NUMBER_PATCH</span></code>
"                macros to extract components from valid version numbers.
"              </div>
"            </li>
"            <li>
"              <div>
"                Change VS version numbering. Versions after VS2015 will use the compiler
"                version instead of the varied product versions.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/regex/">Regex</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Compiling with Oracle C++ toolset is no longer restricted to static
"                linking.
"              </div>
"            </li>
"            <li>
"              <div>
"                Big effort to de-fuzz the library using libFuzzer and fix identified
"                issues, see: <a href="https://svn.boost.org/trac/boost/ticket/12818">#12818</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/smart_ptr/">Smart Pointers</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Rewrite of <code><span class="identifier">allocate_shared</span></code>
"                and <code><span class="identifier">make_shared</span></code> for
"                arrays for a more optimal and more maintainable implementation (Glen
"                Fernandes)
"              </div>
"            </li>
"            <li>
"              <div>
"                Pointer cast functions with move semantics (Chris Glover)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/test/">Test</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Boost.test v3.5 see the <a href="/doc/libs/1_64_0/libs/test/doc/html/boost_test/change_log.html">Change
"                log</a> section for more details.
"              </div>
"            </li>
"            <li>
"              <div>
"                New feature:
"                <ul>
"                  <li>
"                    <div>
"                      Now Boost.Test provides <strong>customization
"                      points</strong> for logging user defined types
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      JUnit output format can now have a <em>log-level</em>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      JUnit output format has not better performances when the test
"                      modules have a lot of checks
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bug fixes
"                <ul>
"                  <li>
"                    <div>
"                      Trac tickets <a href="https://svn.boost.org/trac/boost/ticket/11756">#11756</a>, <a href="https://svn.boost.org/trac/boost/ticket/12540">#12540</a>, <a href="https://svn.boost.org/trac/boost/ticket/12712">#12712</a>, <a href="https://svn.boost.org/trac/boost/ticket/12748">#12748</a>,
"                      <a href="https://svn.boost.org/trac/boost/ticket/12778">#12778</a>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Pull request <a href="https://github.com/boostorg/test/pull/107">PR107</a>,
"                      <a href="https://github.com/boostorg/test/pull/108">PR108</a>
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/type_index/">TypeIndex</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added <code><span class="identifier">BOOST_TYPE_INDEX_IMPLEMENT_RUNTIME_CAST</span></code>,
"                which implements the functionality for <code><span class="identifier">runtime_cast</span></code>
"                but does not include the <code><span class="identifier">BOOST_TYPE_INDEX_REGISTER_CLASS</span></code>
"                macro (thanks to Chris Glover for imlpementing it)
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed undefined macro warning in stl_type_index.hpp <a href="https://svn.boost.org/trac/boost/ticket/12739">#12739</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                CI tests now run with <code><span class="identifier">address</span></code>,
"                <code><span class="identifier">leak</span></code>, and <code><span class="identifier">undefined</span></code> sanitizers
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/type_traits/">TypeTraits</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added new traits <code><span class="identifier">make_void</span></code>
"                and <code><span class="identifier">void_t</span></code>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/unordered/">Unordered</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Initial support for new C++17 member functions: <code><span class="identifier">insert_or_assign</span></code>
"                and <code><span class="identifier">try_emplace</span></code> in
"                <code><span class="identifier">unordered_map</span></code>, <code><span class="identifier">merge</span></code> and <code><span class="identifier">extract</span></code>
"                in all containers.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/variant/">Variant</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed construction of variant from <code><span class="identifier">recursive_variant_</span></code>
"                (thanks to Mikhail Maksimov for the fix) <a href="https://svn.boost.org/trac/boost/ticket/12508">#12508</a>, <a href="https://svn.boost.org/trac/boost/ticket/12645">#12645</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                Do not enable variadic templates for MSVC2015Update1 as it still
"                has issues <a href="https://svn.boost.org/trac/boost/ticket/12236">#12236</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                Workaround GCC6 crash (thanks to Mikhail Maksimov for the workaround)
"                <a href="https://svn.boost.org/trac/boost/ticket/12680">#12680</a>, <a href="https://svn.boost.org/trac/boost/ticket/7120">#7120</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                Made <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">polymorphic_</span><span class="special">*</span><span class="identifier">get</span></code> to work as <code><span class="identifier">boost</span><span class="special">::*</span><span class="identifier">get</span></code>
"                in undocumented border cases and fixed tests <a href="https://svn.boost.org/trac/boost/ticket/11950">#11950</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                CI tests now run with <code><span class="identifier">address</span></code>,
"                <code><span class="identifier">leak</span></code>, and <code><span class="identifier">undefined</span></code> sanitizers
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_64_0.compilers_tested">
"    <h3><span class="link">Compilers Tested</span></h3>
"    <p>
"      Boost's primary test compilers are:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Linux:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.0, 3.8.1, 3.9.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 3.8.1, 3.9.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.5, 3.6, 3.7.1, 3.8.1, 3.9.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 3.9.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 6.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.4.7, 4.7.2, 4.7.3, 4.8.5, 4.9.4, 6.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 5.4.1, 6.2.0, 6.3.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++1z: 6.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel: 16.0, 17.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel, C++11: 16.0, 17.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel, C++14: 16.0, 17.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          OS X:
"          <ul>
"            <li>
"              <div>
"                Apple Clang: 7.0.2
"              </div>
"            </li>
"            <li>
"              <div>
"                Apple Clang, C++11: 7.0.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Windows:
"          <ul>
"            <li>
"              <div>
"                GCC, C++03, mingw: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11, mingw: 4.6.4, 4.7.3, 4.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14, mingw: 4.9.3, 5.1.0, 5.2.0, 5.3.0, 6.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Android:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.6, 3.7, 3.8
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.9, 5.4, 6.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          FreeBSD:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.8
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.8
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.8
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 3.8
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          QNX:
"          <ul>
"            <li>
"              <div>
"                QCC: 4.4.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          SunOS:
"          <ul>
"            <li>
"              <div>
"                Oracle Solaris Studio: 12.5
"              </div>
"            </li>
"            <li>
"              <div>
"                Oracle Solaris Studio, C++11: 12.5
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"    <p>
"      Boost's additional test compilers include:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Linux:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.0, 3.8.1, 3.9.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.8.1, 3.9.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.4, 3.5, 3.6, 3.7. 3.8, 3.8.1, 3.9.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 3.9.1, 4.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 6.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.4.7, 4.7.2, 4.7.3, 4.8.5, 4.9.4, 6.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 5.4.1, 6.2.0, 6.3.0, 7.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++1z: 6.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel: 16.0, 17.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel, C++11: 16.0, 17.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel, C++14: 16.0, 17.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          OS X:
"          <ul>
"            <li>
"              <div>
"                Apple Clang: 7.0.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Windows:
"          <ul>
"            <li>
"              <div>
"                GCC, C++03, mingw: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Android:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.6, 3.7, 3.8
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.9, 5.4, 6.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          FreeBSD:
"          <ul>
"            <li>
"              <div>
"                Clang, C++98: 3.8
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.8
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.8
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 3.8
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          QNX:
"          <ul>
"            <li>
"              <div>
"                QCC: 4.4.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          SunOS:
"          <ul>
"            <li>
"              <div>
"                Oracle Solaris Studio: 12.5
"              </div>
"            </li>
"            <li>
"              <div>
"                Oracle Solaris Studio, C++11: 12.5
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_64_0.acknowledgements">
"    <h3><span class="link">Acknowledgements</span></h3>
"    <p>
"      <a href="/users/people/beman_dawes.html">Beman Dawes</a>, Eric Niebler,
"      <a href="/users/people/rene_rivera.html">Rene Rivera</a>, Daniel James,
"      Vladimir Prus and Marshall Clow managed this release.
"    </p>
"  </div>
"
-hash
"b567df07e42085fe7f6679e9a0cc4963578cc06651deeb18111695bdc5c9bd0d
-id
"version_1_64_0
-notice_url
-notice_xml
-pub_date
-purpose_xml
"
"      New Library: Process. Updated Libraries: Any, Atomic, Config, Container, Context,
"      Conversion, Core, Coroutine2, DLL, Fiber, Geometry, Hash, Interprocess, Intrusive,
"      LexicalCast, Math, Multi-index Containers, Multiprecision, Predef, Regex, Smart
"      Pointers, Test, TypeIndex, TypeTraits, Unordered, Variant.
"
-title_xml
"Version 1.64.0
)
(feed/history/boost_1_65_0.qbk
-description_xhtml
"
"
"
"  <div id="version_1_65_0.known_issues">
"    <h3><span class="link">Known Issues</span></h3>
"    <p>
"      These are patches from library authors which were found too late to be fixed
"      in the release. Be careful as they have not been through the normal testing
"      process.
"    </p>
"    <p>
"      Combined patch for fixes to issues: <a href="/patches/1_65_0/boost_1_65_0.patch">boost_1_65_0.patch</a>.
"      Use <code><span class="identifier">patch</span> <span class="special">-</span><span class="identifier">p1</span> <span class="special">&lt;</span> <span class="identifier">boost_1_65_0</span><span class="special">.</span><span class="identifier">patch</span></code> from the root of the boost repo to
"      apply. Or you can apply the patches individually below.
"    </p>
"    <ul>
"      <li>
"        <div>
"          Context and Fiber don't return continuations when they should:
"          <ul>
"            <li>
"              <div>
"                <a href="/patches/1_65_0/0001-context-function-executed-by-resume_with-has-to-retu.patch">Context
"                patch</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/patches/1_65_0/0002-fiber-resume_with-requires-tor-return-a-continuation.patch">Fiber
"                patch</a>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Thread: Bug in <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">condition_variable</span></code> on Windows:
"          <ul>
"            <li>
"              <div>
"                <a href="/patches/1_65_0/0003-thread-130-Bug-in-boost-condition_variable-on-Window.patch">Thread
"                patch 1</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/patches/1_65_0/0004-thread-130-Bug-in-boost-condition_variable-on-Window.patch">Thread
"                patch 2</a>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_65_0.new_libraries">
"    <h3><span class="link">New Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/poly_collection/">PolyCollection</a>:</span>
"  Fast
"          containers of polymorphic objects, from Joaquín M López Muñoz.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/stacktrace/">Stacktrace</a>:</span>
"  Gather, store,
"          copy and print backtraces, from Antony Polukhin.
"          <ul>
"            <li>
"              <div>
"                Note: Library has <a href="https://github.com/boostorg/stacktrace/issues/14">issue
"                with MinGW</a> and may produce empty backtraces with that compiler.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_65_0.removed_libraries">
"    <h3><span class="link">Removed Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          TR1
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_65_0.updated_libraries">
"    <h3><span class="link">Updated Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/asio/">Asio</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Changed to require <tt>g++</tt> versions &gt;= 4.7 to use
"                standard atomics, to fix a linker error when using <tt>g++</tt>
"                4.6 (<a href="https://svn.boost.org/trac/boost/ticket/13121">#13121</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Enabled use of <code><span class="keyword">constexpr</span></code>
"                and variadic templates with recent MSVC versions.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed a race condition in the Linux epoll backend, which may occur
"                when a socket or descriptor is closed while another thread is blocked
"                on epoll.
"              </div>
"            </li>
"            <li>
"              <div>
"                Eliminated use of deprecated <code><span class="identifier">auto_ptr</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed misplaced use of <code><span class="identifier">asio_handler_is_continuation</span></code>
"                result in reactive <code><span class="identifier">async_accept</span></code>
"                implementation.
"              </div>
"            </li>
"            <li>
"              <div>
"                Changed to use <code><span class="identifier">poll</span><span class="special">.</span><span class="identifier">h</span></code>
"                rather than <code><span class="identifier">sys</span><span class="special">/</span><span class="identifier">poll</span><span class="special">.</span><span class="identifier">h</span></code> on some modern POSIX platforms
"                (<a href="https://svn.boost.org/trac/boost/ticket/12419">#12419</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed MSVC intellisense detection.
"              </div>
"            </li>
"            <li>
"              <div>
"                Disabled use of the <code><span class="identifier">__thread</span></code>
"                keyword extension for android/clang/x86 targets.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/context/">Context</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improvements:
"                <ul>
"                  <li>
"                    <div>
"                      call/cc supports ucontext-API (swapcontext)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      call/cc supports Windows-Fiber-API
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      call/cc supports on demand growing (segmented/split) stacks
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugfixes:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/12719">#12719</a>: context test cases and examples segmentation fault
"                      when built with mingw-w64 toolchain
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      #52: Failing to build callcc test with g++-4.9
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                important:
"                <ul>
"                  <li>
"                    <div>
"                      required bug fix <a href="https://github.com/boostorg/context/commit/420554fe9ac01482990e8ae314f4f7ba81010c9a">420554fe9ac01482990e8ae314f4f7ba81010c9a</a>
"                      not included in 1.65
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/config/">Config</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added <code><span class="identifier">BOOST_NO_CXX11_POINTER_TRAITS</span></code>,
"                <code><span class="identifier">BOOST_NO_CXX17_FOLD_EXPRESSIONS</span></code>,
"                <code><span class="identifier">BOOST_NO_CXX17_INLINE_VARIABLES</span></code>,
"                <code><span class="identifier">BOOST_NO_CXX17_STRUCTURED_BINDINGS</span></code>
"                defect detection.
"              </div>
"            </li>
"            <li>
"              <div>
"                BOOST_FALLTHROUGH support for GCC 7 and above. (Glen Fernandes)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/core/">Core</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Implemented <code><span class="identifier">pointer_traits</span></code>
"                for C++03 and higher, that implements <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0653r0.html">P0653r0</a>
"                (Glen Fernandes). This implementation is now used by Align, Circular
"                Buffer, Fiber, Geometry, among other libraries.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added <code><span class="identifier">BOOST_TEST_GT</span></code>
"                and <code><span class="identifier">BOOST_TEST_GE</span></code>
"                to Lightweight Test.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/coroutine2/">Coroutine2</a>:</span>
"          <ul>
"            <li>
"              <div>
"                supports ucontext-API (swapcontext)
"              </div>
"            </li>
"            <li>
"              <div>
"                supports Windows-Fiber-API
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/13064">#13064</a>: different behavior coroutine and coroutine2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/dll/">DLL</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix PE parsing on non Windows platforms.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/fiber/">Fiber</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improvements:
"                <ul>
"                  <li>
"                    <div>
"                      hardware transactional memory (Intel TSX) supported
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      NUMA supported
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      ucontext-API (swapcontext) supported
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Windows-Fiber-API supported
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      on demand growing stacks
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugfixes:
"                <ul>
"                  <li>
"                    <div>
"                      #121: failing to build static lib with GCC 4.8 and C++11
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      #123: assertion failure in schedule_from_remote
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      #125: erratic crashes in testsuite
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      #126: incorrect std::memory_order value in compare_exchange_strong?
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                important:
"                <ul>
"                  <li>
"                    <div>
"                      required bug fix <a href="https://github.com/boostorg/fiber/commit/63f1041f0e484e64dec437a0fa780ea2463abda2">63f1041f0e484e64dec437a0fa780ea2463abda2</a>
"                      not included in 1.65
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/fusion/">Fusion</a>:</span>
"          <ul>
"            <li>
"              <div>
"                MSVC 14.1 supports variadic containers, such as <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">vector</span></code>,
"                <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">deque</span></code>, <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">map</span></code>,
"                <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">set</span></code>, and <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">tuple</span></code>.
"                (<a href="https://svn.boost.org/trac/boost/ticket/12986">#12986</a>)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/geometry/">Geometry</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improvements:
"                <ul>
"                  <li>
"                    <div>
"                      Add correct() overload taking area strategy
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Add is_convex() overload taking side strategy
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Add missing relational operations (covered_by, crosses, equals,
"                      etc.) for MultiPoint/AnyGeometry
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Solved issues:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/12410">12410</a>
"                      Lack of support of geographic coordinate system in correct()
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/13035">13035</a>
"                      Wrong result of non-cartesian intersection strategies for segments
"                      near poles.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/13057">13057</a>
"                      Wrong result of intersects() for linestrings caused by numerical
"                      issue in disjoint() for boxes.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugfixes:
"                <ul>
"                  <li>
"                    <div>
"                      Fix is_valid which could return false for multipolygons where
"                      an interior ring touches another interior ring
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix is_valid which could return false for multipolygons where
"                      a polygon was located in an interior ring, all touching each
"                      other
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix union which could produce invalid results (for some cases,
"                      this needs to define BOOST_GEOMETRY_INCLUDE_SELF_TURNS)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix intersection (idem), but some cases are still not yet valid
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix difference (idem), but some cases are still not yet valid
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix propagation of area strategy into the internals of various
"                      algorithms from intersection strategy
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix uninitialized variable in relate and reference to temporary
"                      in overlay
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix error in disjoint for geographic Segment/Box
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix handling of non-cartesian geometries in various algorithms
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/functional/hash/">Hash</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Support for <code><span class="keyword">char16_t</span></code>,
"                <code><span class="keyword">char32_t</span></code>, <code><span class="identifier">u16string</span></code>, <code><span class="identifier">u32string</span></code>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/log/">Log</a>:</span>
"          <ul>
"            <li>
"              <div>
"                General changes:
"                <ul>
"                  <li>
"                    <div>
"                      Improved compatibility with Solaris.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                See <a href="/libs/log/doc/html/log/changelog.html">changelog</a>
"                for more details.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/phoenix/">Phoenix</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Corrected some documentation. (<a href="https://github.com/boostorg/phoenix/pull/50">PR#50</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">phoenix</span><span class="special">::</span><span class="identifier">erase</span></code> with associative container
"                returns iterator in C++11 mode. (<a href="https://svn.boost.org/trac/boost/ticket/7423">#7423</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">set</span></code> and <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">multiset</span></code>
"                should be worked with predefined lazy functions. (<a href="https://github.com/boostorg/phoenix/pull/52">PR#52</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Disable <code><span class="identifier">phoenix</span><span class="special">::</span><span class="identifier">random_shuffle</span></code> in C++17. (<a href="https://github.com/boostorg/phoenix/pull/53">PR#53</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Don't forward declare, include instead. (<a href="https://svn.boost.org/trac/boost/ticket/11875">#11875</a>)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/predef/">Predef</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix Intel C/C++ version 9999 detection to be 12.1.0.
"              </div>
"            </li>
"            <li>
"              <div>
"                Addition of <code><span class="identifier">BOOST_PREDEF_WORKAROUND</span></code>
"                and <code><span class="identifier">BOOST_PREDEF_TESTED_AT</span></code>
"                macros for defect workarounds and detection.
"              </div>
"            </li>
"            <li>
"              <div>
"                Add ARM64 MSVC SIMD detection. (from Minmin Gong)
"              </div>
"            </li>
"            <li>
"              <div>
"                Add detection of iOS simulator vs device as a platform choice. (from
"                Ruslan Baratov)
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix MinGW incorrect header guard. (from Ruslan Baratov)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/program_options/">Program Options</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Support for storing values into <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">optional</span></code>,
"                thanks to Ed Catmur (<a href="https://svn.boost.org/trac/boost/ticket/7495">#7495</a>,
"                <a href="https://github.com/boostorg/program_options/pull/18">PR#18</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Parsing of implicit options can now use the value from the next token.
"                Since 1.59, unless the value of implicit option was specified in
"                the same token as the option itself, the implicit value was used.
"                That proved inconvenient, and now we again check the next token and
"                use it as value if it's not an option itself. (<a href="https://github.com/boostorg/program_options/issues/25">#25</a>)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/python/">Python</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <code><span class="identifier">eval</span><span class="special">()</span></code>,
"                <code><span class="identifier">exec</span><span class="special">()</span></code>,
"                and <code><span class="identifier">exec_statement</span><span class="special">()</span></code> now allow <code><span class="keyword">char</span>
"                <span class="keyword">const</span> <span class="special">*</span></code>
"                arguments, in addition to <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">python</span><span class="special">::</span><span class="identifier">str</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                The <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">python</span><span class="special">::</span><span class="identifier">numeric</span></code> API has been removed, as
"                it is being obsoleted by <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">python</span><span class="special">::</span><span class="identifier">numpy</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix some build issues when using Python3 with MSVC.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/smart_ptr/">Smart Pointers</a>:</span>
"          <ul>
"            <li>
"              <div>
"                New class template<code><span class="identifier">atomic_shared_ptr</span></code>,
"                that provides thread-safe atomic pointer operations over <code><span class="identifier">shared_ptr</span></code>. (Peter Dimov)
"              </div>
"            </li>
"            <li>
"              <div>
"                New class template <code><span class="identifier">local_shared_ptr</span></code>,
"                where the reference count is updated with non-atomic operations.
"                (Peter Dimov)
"              </div>
"            </li>
"            <li>
"              <div>
"                More optimizations in <code><span class="identifier">allocate_shared</span></code>
"                and <code><span class="identifier">make_shared</span></code> for
"                arrays. (Glen Fernandes)
"              </div>
"            </li>
"            <li>
"              <div>
"                Documentation has been completely rewritten in Asciidoc format.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/test/">Test</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Boost.test v3.6 see the <a href="/doc/libs/1_65_0/libs/test/doc/html/boost_test/change_log.html">Change
"                log</a> section for more details.
"              </div>
"            </li>
"            <li>
"              <div>
"                New feature:
"                <ul>
"                  <li>
"                    <div>
"                      C++17 compatibility (tested on VS2017), thanks to <a href="https://github.com/DanielaE">Daniela
"                      Engert</a>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Direct comparison of C-arrays in <code><span class="identifier">BOOST_TEST</span></code>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Better global fixtures mechanism, and spitting of responsibilities
"                      with <a href="/doc/libs/1_65_0/libs/test/doc/html/boost_test/utf_reference/test_org_reference/test_org_boost_test_global_fixture.html"><code><span class="identifier">BOOST_TEST_GLOBAL_FIXTURE</span></code></a>
"                      for global fixtures and <a href="/doc/libs/1_65_0/libs/test/doc/html/boost_test/utf_reference/link_references/link_boost_test_global_configuration.html"><code><span class="identifier">BOOST_TEST_GLOBAL_CONFIGURATION</span></code></a>
"                      for global initialization (compile time configuration).
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Improved support for fixtures (<code><span class="identifier">setup</span></code>
"                      / <code><span class="identifier">teardown</span></code>
"                      member function) which enables better teardown time checks
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Breaking changes
"                <ul>
"                  <li>
"                    <div>
"                      Some API changes for the loggers
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Deprecating <code><span class="identifier">BOOST_GLOBAL_FIXTURE</span></code>
"                      in favor of <code><span class="identifier">BOOST_TEST_GLOBAL_FIXTURE</span></code>
"                      and <code><span class="identifier">BOOST_TEST_GLOBAL_CONFIGURATION</span></code>
"                      (see above)
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bug fixes
"                <ul>
"                  <li>
"                    <div>
"                      Trac tickets <a href="https://svn.boost.org/trac/boost/ticket/5282">#5282</a>, <a href="https://svn.boost.org/trac/boost/ticket/5563">#5563</a>, <a href="https://svn.boost.org/trac/boost/ticket/11471">#11471</a>, <a href="https://svn.boost.org/trac/boost/ticket/11962">#11962</a>,
"                      <a href="https://svn.boost.org/trac/boost/ticket/12228">#12228</a>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Trac tickets <a href="https://svn.boost.org/trac/boost/ticket/12631">#12631</a>, <a href="https://svn.boost.org/trac/boost/ticket/13011">#13011</a>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Pull request <a href="https://github.com/boostorg/test/pull/106">PR106</a>
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/thread/">Thread</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Important Regression on Windows:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/thread/issues/130">#130</a>
"                      windows: Bug in boost::condition_variable on Windows Please,
"                      merge these two patches
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/thread/commit/fdc0cbcd8ce8f34a19c7cdaf6f1fa679f0a49657">https://github.com/boostorg/thread/commit/fdc0cbcd8ce8f34a19c7cdaf6f1fa679f0a49657</a>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/thread/commit/395e3d786bc1dce9c60eb84da85f5845a2c1fb3d">https://github.com/boostorg/thread/commit/395e3d786bc1dce9c60eb84da85f5845a2c1fb3d</a>
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bug fixes
"                <ul>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/6787">#6787</a>
"                      boost::thread::sleep() hangs if system time is rolled back
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/12519">#12519</a>
"                      boost::thread::try_join_for does not return after timeout
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/12874">#12874</a>
"                      future&lt;&gt; extension constructor must be under BOOST_THREAD_PROVIDES_FUTURE_UNWRAP
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/12888">#12888</a>
"                      Linking with boost thread does not work on mingw/gcc 4.4
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/12958">#12958</a>
"                      sync_bounded_queue::wait_pull_front( lve ) might throw
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/13077">#13077</a>
"                      Linking to static 64bit libboost_thread fails DLL initialization
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/13155">#13155</a>
"                      log doesn't build on a system with pthreads
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/thread/issues/121">#121</a>
"                      on_tls_prepare is broken under VS2017
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/type_index/">TypeIndex</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Include &lt;boost/functional/hash.hpp&gt; if required, thanks to
"                Ed Catmur <a href="https://svn.boost.org/trac/boost/ticket/13009">#13009</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Use native <code><span class="identifier">hash_code</span><span class="special">()</span></code> when possible on GCC-like compilers
"                <a href="https://svn.boost.org/trac/boost/ticket/13027">#13027</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix <code><span class="identifier">ctti_type_index</span></code>
"                for GCC 7 and later, thanks to Benjamin Buch <a href="https://github.com/boostorg/type_index/pull/16">PR16</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/typeof/">Typeof</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix compilation error with clang-cl <a href="https://svn.boost.org/trac10/ticket/11821">ticket
"                11821</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/unordered/">Unordered</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Use the same data structure for <code><span class="identifier">unordered_set</span></code>
"                and <code><span class="identifier">unordered_multiset</span></code>,
"                and for<code><span class="identifier">unordered_map</span></code>
"                and <code><span class="identifier">unordered_multimap</span></code>.
"                This is required for C++17, so that nodes can be merged and extracted
"                between compatible containers.
"              </div>
"            </li>
"            <li>
"              <div>
"                Add deprecated attributes to long deprecated functions.
"              </div>
"            </li>
"            <li>
"              <div>
"                Improved use of <code><span class="identifier">allocator_traits</span></code>
"                <code><span class="identifier">construct</span></code> and <code><span class="identifier">destroy</span></code> on C++11 compilers, using
"                piecewise pair construction when appropriate.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fewer workarounds on newer Oracle compilers.
"              </div>
"            </li>
"            <li>
"              <div>
"                Avoid dereferencing pointers to uninitialized memory (<a href="https://github.com/boostorg/unordered/pull/5">PR
"                #5</a>).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/utility/">Utility</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improved compatibility of <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">next</span></code>/<code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">prior</span></code> with SFINAE-unfriendly iterators.
"                <a href="https://svn.boost.org/trac/boost/ticket/10847">#10847</a>, <a href="https://svn.boost.org/trac/boost/ticket/13002">#13002</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/variant/">Variant</a>:</span>
"          <ul>
"            <li>
"              <div>
"                r-value overload for <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">get</span></code>
"                was added by Albert Sverdlov <a href="https://svn.boost.org/trac/boost/ticket/13018">#13018</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Missing include fro <code><span class="special">&lt;</span><span class="identifier">boost</span><span class="special">/</span><span class="identifier">variant</span><span class="special">/</span><span class="identifier">polymorphic_get</span><span class="special">.</span><span class="identifier">hpp</span><span class="special">&gt;</span></code>
"                header was added by Adam Badura <a href="https://svn.boost.org/trac/boost/ticket/13037">#13037</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">make_variant_over</span></code> was fixed and
"                now works with views and other Forward Sequences (thanks to Mikhail
"                Maksimov for the fix) <a href="https://svn.boost.org/trac/boost/ticket/8554">#8554</a>, <a href="https://svn.boost.org/trac/boost/ticket/10041">#10041</a>, <a href="https://github.com/boostorg/variant/pull/35">PR#35</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_65_0.compilers_tested">
"    <h3><span class="link">Compilers Tested</span></h3>
"    <p>
"      Boost's primary test compilers are:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Linux:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.0, 3.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 3.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.8.1, 3.9.1, 4.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 4.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 5.4.0, 7.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.4.7, 4.7.2, 4.7.3, 4.8.5, 4.9.4, 5.4.0, 7.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 5.4.0, 5.4.1, 6.3.0, 7.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++17: 7.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++1z: 6.3.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel: 16.0, 17.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel, C++11: 16.0, 17.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel, C++14: 16.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          OS X:
"          <ul>
"            <li>
"              <div>
"                Clang: 8.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 8.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 8.1.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Windows:
"          <ul>
"            <li>
"              <div>
"                GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.6.4, 4.7.3, 4.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 4.9.3, 5.1.0, 5.2.0, 5.3.0, 6.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Android:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.6, 3.7, 3.8
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.9, 5.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 6.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          FreeBSD:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.8.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.8.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.8.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 3.8.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          QNX:
"          <ul>
"            <li>
"              <div>
"                QCC, C++11: 4.7.3
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          SunOS:
"          <ul>
"            <li>
"              <div>
"                Oracle Solaris Studio: 12.5_next, 12.5
"              </div>
"            </li>
"            <li>
"              <div>
"                Oracle Solaris Studio, C++11: 12.5_next, 12.5
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"    <p>
"      Boost's additional test compilers include:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Linux:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.0, 3.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 3.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.8.1, 3.9.1, 4.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 4.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 5.4.0, 7.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.4.7, 4.7.2, 4.7.3, 4.8.5, 4.9.4, 5.4.0, 7.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 5.4.1, 6.2.0, 6.3.0, 7.1.0, 8.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++17: 7.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++1z: 6.3.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel: 17.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel, C++11: 16.0, 17.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel, C++14: 16.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          OS X:
"          <ul>
"            <li>
"              <div>
"                Clang: 8.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 8.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 8.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 8.1.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Windows:
"          <ul>
"            <li>
"              <div>
"                GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.6.4, 4.7.3, 4.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 4.9.3, 5.1.0, 5.2.0, 5.3.0, 6.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Android:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.6, 3.7, 3.8
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.9, 5.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 6.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          FreeBSD:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.8.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.8.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.8.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 3.8.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          SunOS:
"          <ul>
"            <li>
"              <div>
"                Oracle Solaris Studio: 12.5_next, 12.5
"              </div>
"            </li>
"            <li>
"              <div>
"                Oracle Solaris Studio, C++11: 12.5_next, 12.5
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_65_0.acknowledgements">
"    <h3><span class="link">Acknowledgements</span></h3>
"    <p>
"      <a href="/users/people/beman_dawes.html">Beman Dawes</a>, Eric Niebler,
"      <a href="/users/people/rene_rivera.html">Rene Rivera</a>, Daniel James,
"      Vladimir Prus and Marshall Clow managed this release.
"    </p>
"  </div>
"
-hash
"86a56965c1c30f1ff9ac0013f8a4e252adb9a5239b36479831018ed7b90afddf
-id
"version_1_65_0
-notice_url
-notice_xml
-pub_date
-purpose_xml
"
"      New Libraries: PolyCollection, Stacktrace. Removed Libraries: TR1. Updated
"      Libraries: Asio, Context, Config, Core, Coroutine2, DLL, Fiber, Fusion, Geometry,
"      Hash, Log, Phoenix, Predef, Program Options, Python, Smart Pointers, Test,
"      Thread, TypeIndex, Typeof, Unordered, Utility, Variant.
"
-title_xml
"Version 1.65.0
)
(feed/history/boost_1_65_1.qbk
-description_xhtml
"
"
"
"  <div id="version_1_65_1.fixes_in_1_65_1">
"    <h3><span class="link">Fixes in 1.65.1</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/config/">Config</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Version macro changes for CUDA.
"              </div>
"            </li>
"            <li>
"              <div>
"                Update last known MSVC version.
"              </div>
"            </li>
"            <li>
"              <div>
"                MSVC 14.11 supports structured bindings.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/context/">Context</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Return a continuation from functions executed by <code><span class="identifier">resume_with</span></code>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/fiber/">Fiber</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Return a continuation from functions executed by <code><span class="identifier">resume_with</span></code>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/smart_ptr/">Smart Pointers</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix Visual C++ version checks.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix compilation for NVCC with host compiler clang.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/stacktrace/">Stacktrace</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Update build testing file to detail with a MinGW issue.
"              </div>
"            </li>
"            <li>
"              <div>
"                Change preprocessor file extensions to work with the installation
"                system.
"              </div>
"            </li>
"            <li>
"              <div>
"                Support FreeBSD and other OSs that do not define <code><span class="identifier">_GNU_SOURCE</span></code>
"                but have <code><span class="identifier">_Unwind_Backtrace</span></code>
"                function.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/thread/">Thread</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix bug in <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">condition_variable</span></code>
"                on Windows (<a href="https://github.com/boostorg/thread/issues/130">#130</a>).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_65_1.compilers_tested">
"    <h3><span class="link">Compilers Tested</span></h3>
"    <p>
"      Boost's primary test compilers are:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Linux:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.0, 4.0.1, 5.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 5.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 5.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++17: 5.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 4.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 5.4.0, 7.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.4.7, 4.7.2, 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 5.4.0, 5.4.1, 6.3.0, 6.4.0, 7.1.0, 7.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++17: 7.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++1z: 6.3.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel: 17.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          OS X:
"          <ul>
"            <li>
"              <div>
"                Clang: 8.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 8.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 8.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 8.1.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Windows:
"          <ul>
"            <li>
"              <div>
"                GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.6.4, 4.7.3, 4.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 4.9.3, 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0,
"                7.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Android:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.6, 3.7, 3.8
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.9, 5.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 6.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          FreeBSD:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.8.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.8.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.8.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 3.8.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          QNX:
"          <ul>
"            <li>
"              <div>
"                QCC, C++11: 4.4.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          SunOS:
"          <ul>
"            <li>
"              <div>
"                Oracle Solaris Studio: 12.5_next, 12.5
"              </div>
"            </li>
"            <li>
"              <div>
"                Oracle Solaris Studio, C++11: , 12.5_next, 12.5
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_65_1.acknowledgements">
"    <h3><span class="link">Acknowledgements</span></h3>
"    <p>
"      <a href="/users/people/beman_dawes.html">Beman Dawes</a>, Daniel James,
"      Vladimir Prus and Marshall Clow managed this release.
"    </p>
"  </div>
"  <div id="version_1_65_1.new_libraries_in_1_65_0">
"    <h3><span class="link">New Libraries in
"    1.65.0</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/poly_collection/">PolyCollection</a>:</span>
"  Fast
"          containers of polymorphic objects, from Joaquín M López Muñoz.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/stacktrace/">Stacktrace</a>:</span>
"  Gather, store,
"          copy and print backtraces, from Antony Polukhin.
"          <ul>
"            <li>
"              <div>
"                Note: Library has <a href="https://github.com/boostorg/stacktrace/issues/14">issue
"                with MinGW</a> and may produce empty backtraces with that compiler.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_65_1.removed_libraries_in_1_65_0">
"    <h3><span class="link">Removed Libraries
"    in 1.65.0</span></h3>
"    <ul>
"      <li>
"        <div>
"          TR1
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_65_1.updated_libraries_in_1_65_0">
"    <h3><span class="link">Updated Libraries
"    in 1.65.0</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/asio/">Asio</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Changed to require <tt>g++</tt> versions &gt;= 4.7 to use
"                standard atomics, to fix a linker error when using <tt>g++</tt>
"                4.6 (<a href="https://svn.boost.org/trac/boost/ticket/13121">#13121</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Enabled use of <code><span class="keyword">constexpr</span></code>
"                and variadic templates with recent MSVC versions.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed a race condition in the Linux epoll backend, which may occur
"                when a socket or descriptor is closed while another thread is blocked
"                on epoll.
"              </div>
"            </li>
"            <li>
"              <div>
"                Eliminated use of deprecated <code><span class="identifier">auto_ptr</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed misplaced use of <code><span class="identifier">asio_handler_is_continuation</span></code>
"                result in reactive <code><span class="identifier">async_accept</span></code>
"                implementation.
"              </div>
"            </li>
"            <li>
"              <div>
"                Changed to use <code><span class="identifier">poll</span><span class="special">.</span><span class="identifier">h</span></code>
"                rather than <code><span class="identifier">sys</span><span class="special">/</span><span class="identifier">poll</span><span class="special">.</span><span class="identifier">h</span></code> on some modern POSIX platforms
"                (<a href="https://svn.boost.org/trac/boost/ticket/12419">#12419</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed MSVC intellisense detection.
"              </div>
"            </li>
"            <li>
"              <div>
"                Disabled use of the <code><span class="identifier">__thread</span></code>
"                keyword extension for android/clang/x86 targets.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/context/">Context</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improvements:
"                <ul>
"                  <li>
"                    <div>
"                      call/cc supports ucontext-API (swapcontext)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      call/cc supports Windows-Fiber-API
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      call/cc supports on demand growing (segmented/split) stacks
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugfixes:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/12719">#12719</a>: context test cases and examples segmentation fault
"                      when built with mingw-w64 toolchain
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      #52: Failing to build callcc test with g++-4.9
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                important:
"                <ul>
"                  <li>
"                    <div>
"                      required bug fix <a href="https://github.com/boostorg/context/commit/420554fe9ac01482990e8ae314f4f7ba81010c9a">420554fe9ac01482990e8ae314f4f7ba81010c9a</a>
"                      not included in 1.65
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/config/">Config</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added <code><span class="identifier">BOOST_NO_CXX11_POINTER_TRAITS</span></code>,
"                <code><span class="identifier">BOOST_NO_CXX17_FOLD_EXPRESSIONS</span></code>,
"                <code><span class="identifier">BOOST_NO_CXX17_INLINE_VARIABLES</span></code>,
"                <code><span class="identifier">BOOST_NO_CXX17_STRUCTURED_BINDINGS</span></code>
"                defect detection.
"              </div>
"            </li>
"            <li>
"              <div>
"                BOOST_FALLTHROUGH support for GCC 7 and above. (Glen Fernandes)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/core/">Core</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Implemented <code><span class="identifier">pointer_traits</span></code>
"                for C++03 and higher, that implements <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0653r0.html">P0653r0</a>
"                (Glen Fernandes). This implementation is now used by Align, Circular
"                Buffer, Fiber, Geometry, among other libraries.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added <code><span class="identifier">BOOST_TEST_GT</span></code>
"                and <code><span class="identifier">BOOST_TEST_GE</span></code>
"                to Lightweight Test.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/coroutine2/">Coroutine2</a>:</span>
"          <ul>
"            <li>
"              <div>
"                supports ucontext-API (swapcontext)
"              </div>
"            </li>
"            <li>
"              <div>
"                supports Windows-Fiber-API
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/13064">#13064</a>: different behavior coroutine and coroutine2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/dll/">DLL</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix PE parsing on non Windows platforms.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/fiber/">Fiber</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improvements:
"                <ul>
"                  <li>
"                    <div>
"                      hardware transactional memory (Intel TSX) supported
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      NUMA supported
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      ucontext-API (swapcontext) supported
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Windows-Fiber-API supported
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      on demand growing stacks
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugfixes:
"                <ul>
"                  <li>
"                    <div>
"                      #121: failing to build static lib with GCC 4.8 and C++11
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      #123: assertion failure in schedule_from_remote
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      #125: erratic crashes in testsuite
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      #126: incorrect std::memory_order value in compare_exchange_strong?
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                important:
"                <ul>
"                  <li>
"                    <div>
"                      required bug fix <a href="https://github.com/boostorg/fiber/commit/63f1041f0e484e64dec437a0fa780ea2463abda2">63f1041f0e484e64dec437a0fa780ea2463abda2</a>
"                      not included in 1.65
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/fusion/">Fusion</a>:</span>
"          <ul>
"            <li>
"              <div>
"                MSVC 14.1 supports variadic containers, such as <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">vector</span></code>,
"                <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">deque</span></code>, <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">map</span></code>,
"                <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">set</span></code>, and <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">tuple</span></code>.
"                (<a href="https://svn.boost.org/trac/boost/ticket/12986">#12986</a>)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/geometry/">Geometry</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improvements:
"                <ul>
"                  <li>
"                    <div>
"                      Add correct() overload taking area strategy
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Add is_convex() overload taking side strategy
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Add missing relational operations (covered_by, crosses, equals,
"                      etc.) for MultiPoint/AnyGeometry
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Solved issues:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/12410">12410</a>
"                      Lack of support of geographic coordinate system in correct()
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/13035">13035</a>
"                      Wrong result of non-cartesian intersection strategies for segments
"                      near poles.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/13057">13057</a>
"                      Wrong result of intersects() for linestrings caused by numerical
"                      issue in disjoint() for boxes.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugfixes:
"                <ul>
"                  <li>
"                    <div>
"                      Fix is_valid which could return false for multipolygons where
"                      an interior ring touches another interior ring
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix is_valid which could return false for multipolygons where
"                      a polygon was located in an interior ring, all touching each
"                      other
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix union which could produce invalid results (for some cases,
"                      this needs to define BOOST_GEOMETRY_INCLUDE_SELF_TURNS)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix intersection (idem), but some cases are still not yet valid
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix difference (idem), but some cases are still not yet valid
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix propagation of area strategy into the internals of various
"                      algorithms from intersection strategy
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix uninitialized variable in relate and reference to temporary
"                      in overlay
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix error in disjoint for geographic Segment/Box
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix handling of non-cartesian geometries in various algorithms
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/functional/hash/">Hash</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Support for <code><span class="keyword">char16_t</span></code>,
"                <code><span class="keyword">char32_t</span></code>, <code><span class="identifier">u16string</span></code>, <code><span class="identifier">u32string</span></code>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/log/">Log</a>:</span>
"          <ul>
"            <li>
"              <div>
"                General changes:
"                <ul>
"                  <li>
"                    <div>
"                      Improved compatibility with Solaris.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                See <a href="/libs/log/doc/html/log/changelog.html">changelog</a>
"                for more details.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/phoenix/">Phoenix</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Corrected some documentation. (<a href="https://github.com/boostorg/phoenix/pull/50">PR#50</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">phoenix</span><span class="special">::</span><span class="identifier">erase</span></code> with associative container
"                returns iterator in C++11 mode. (<a href="https://svn.boost.org/trac/boost/ticket/7423">#7423</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">set</span></code> and <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">multiset</span></code>
"                should be worked with predefined lazy functions. (<a href="https://github.com/boostorg/phoenix/pull/52">PR#52</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Disable <code><span class="identifier">phoenix</span><span class="special">::</span><span class="identifier">random_shuffle</span></code> in C++17. (<a href="https://github.com/boostorg/phoenix/pull/53">PR#53</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Don't forward declare, include instead. (<a href="https://svn.boost.org/trac/boost/ticket/11875">#11875</a>)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/predef/">Predef</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix Intel C/C++ version 9999 detection to be 12.1.0.
"              </div>
"            </li>
"            <li>
"              <div>
"                Addition of <code><span class="identifier">BOOST_PREDEF_WORKAROUND</span></code>
"                and <code><span class="identifier">BOOST_PREDEF_TESTED_AT</span></code>
"                macros for defect workarounds and detection.
"              </div>
"            </li>
"            <li>
"              <div>
"                Add ARM64 MSVC SIMD detection. (from Minmin Gong)
"              </div>
"            </li>
"            <li>
"              <div>
"                Add detection of iOS simulator vs device as a platform choice. (from
"                Ruslan Baratov)
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix MinGW incorrect header guard. (from Ruslan Baratov)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/program_options/">Program Options</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Support for storing values into <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">optional</span></code>,
"                thanks to Ed Catmur (<a href="https://svn.boost.org/trac/boost/ticket/7495">#7495</a>,
"                <a href="https://github.com/boostorg/program_options/pull/18">PR#18</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Parsing of implicit options can now use the value from the next token.
"                Since 1.59, unless the value of implicit option was specified in
"                the same token as the option itself, the implicit value was used.
"                That proved inconvenient, and now we again check the next token and
"                use it as value if it's not an option itself. (<a href="https://github.com/boostorg/program_options/issues/25">#25</a>)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/python/">Python</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <code><span class="identifier">eval</span><span class="special">()</span></code>,
"                <code><span class="identifier">exec</span><span class="special">()</span></code>,
"                and <code><span class="identifier">exec_statement</span><span class="special">()</span></code> now allow <code><span class="keyword">char</span>
"                <span class="keyword">const</span> <span class="special">*</span></code>
"                arguments, in addition to <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">python</span><span class="special">::</span><span class="identifier">str</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                The <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">python</span><span class="special">::</span><span class="identifier">numeric</span></code> API has been removed, as
"                it is being obsoleted by <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">python</span><span class="special">::</span><span class="identifier">numpy</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix some build issues when using Python3 with MSVC.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/smart_ptr/">Smart Pointers</a>:</span>
"          <ul>
"            <li>
"              <div>
"                New class template<code><span class="identifier">atomic_shared_ptr</span></code>,
"                that provides thread-safe atomic pointer operations over <code><span class="identifier">shared_ptr</span></code>. (Peter Dimov)
"              </div>
"            </li>
"            <li>
"              <div>
"                New class template <code><span class="identifier">local_shared_ptr</span></code>,
"                where the reference count is updated with non-atomic operations.
"                (Peter Dimov)
"              </div>
"            </li>
"            <li>
"              <div>
"                More optimizations in <code><span class="identifier">allocate_shared</span></code>
"                and <code><span class="identifier">make_shared</span></code> for
"                arrays. (Glen Fernandes)
"              </div>
"            </li>
"            <li>
"              <div>
"                Documentation has been completely rewritten in Asciidoc format.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/test/">Test</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Boost.test v3.6 see the <a href="/doc/libs/1_65_0/libs/test/doc/html/boost_test/change_log.html">Change
"                log</a> section for more details.
"              </div>
"            </li>
"            <li>
"              <div>
"                New feature:
"                <ul>
"                  <li>
"                    <div>
"                      C++17 compatibility (tested on VS2017), thanks to <a href="https://github.com/DanielaE">Daniela
"                      Engert</a>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Direct comparison of C-arrays in <code><span class="identifier">BOOST_TEST</span></code>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Better global fixtures mechanism, and spitting of responsibilities
"                      with <a href="/doc/libs/1_65_0/libs/test/doc/html/boost_test/utf_reference/test_org_reference/test_org_boost_test_global_fixture.html"><code><span class="identifier">BOOST_TEST_GLOBAL_FIXTURE</span></code></a>
"                      for global fixtures and <a href="/doc/libs/1_65_0/libs/test/doc/html/boost_test/utf_reference/link_references/link_boost_test_global_configuration.html"><code><span class="identifier">BOOST_TEST_GLOBAL_CONFIGURATION</span></code></a>
"                      for global initialization (compile time configuration).
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Improved support for fixtures (<code><span class="identifier">setup</span></code>
"                      / <code><span class="identifier">teardown</span></code>
"                      member function) which enables better teardown time checks
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Breaking changes
"                <ul>
"                  <li>
"                    <div>
"                      Some API changes for the loggers
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Deprecating <code><span class="identifier">BOOST_GLOBAL_FIXTURE</span></code>
"                      in favor of <code><span class="identifier">BOOST_TEST_GLOBAL_FIXTURE</span></code>
"                      and <code><span class="identifier">BOOST_TEST_GLOBAL_CONFIGURATION</span></code>
"                      (see above)
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bug fixes
"                <ul>
"                  <li>
"                    <div>
"                      Trac tickets <a href="https://svn.boost.org/trac/boost/ticket/5282">#5282</a>, <a href="https://svn.boost.org/trac/boost/ticket/5563">#5563</a>, <a href="https://svn.boost.org/trac/boost/ticket/11471">#11471</a>, <a href="https://svn.boost.org/trac/boost/ticket/11962">#11962</a>,
"                      <a href="https://svn.boost.org/trac/boost/ticket/12228">#12228</a>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Trac tickets <a href="https://svn.boost.org/trac/boost/ticket/12631">#12631</a>, <a href="https://svn.boost.org/trac/boost/ticket/13011">#13011</a>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Pull request <a href="https://github.com/boostorg/test/pull/106">PR106</a>
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/thread/">Thread</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Important Regression on Windows:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/thread/issues/130">#130</a>
"                      windows: Bug in boost::condition_variable on Windows Please,
"                      merge these two patches
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/thread/commit/fdc0cbcd8ce8f34a19c7cdaf6f1fa679f0a49657">https://github.com/boostorg/thread/commit/fdc0cbcd8ce8f34a19c7cdaf6f1fa679f0a49657</a>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/thread/commit/395e3d786bc1dce9c60eb84da85f5845a2c1fb3d">https://github.com/boostorg/thread/commit/395e3d786bc1dce9c60eb84da85f5845a2c1fb3d</a>
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bug fixes
"                <ul>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/6787">#6787</a>
"                      boost::thread::sleep() hangs if system time is rolled back
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/12519">#12519</a>
"                      boost::thread::try_join_for does not return after timeout
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/12874">#12874</a>
"                      future&lt;&gt; extension constructor must be under BOOST_THREAD_PROVIDES_FUTURE_UNWRAP
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/12888">#12888</a>
"                      Linking with boost thread does not work on mingw/gcc 4.4
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/12958">#12958</a>
"                      sync_bounded_queue::wait_pull_front( lve ) might throw
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/13077">#13077</a>
"                      Linking to static 64bit libboost_thread fails DLL initialization
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/13155">#13155</a>
"                      log doesn't build on a system with pthreads
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/thread/issues/121">#121</a>
"                      on_tls_prepare is broken under VS2017
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/type_index/">TypeIndex</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Include &lt;boost/functional/hash.hpp&gt; if required, thanks to
"                Ed Catmur <a href="https://svn.boost.org/trac/boost/ticket/13009">#13009</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Use native <code><span class="identifier">hash_code</span><span class="special">()</span></code> when possible on GCC-like compilers
"                <a href="https://svn.boost.org/trac/boost/ticket/13027">#13027</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix <code><span class="identifier">ctti_type_index</span></code>
"                for GCC 7 and later, thanks to Benjamin Buch <a href="https://github.com/boostorg/type_index/pull/16">PR16</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/typeof/">Typeof</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix compilation error with clang-cl <a href="https://svn.boost.org/trac10/ticket/11821">ticket
"                11821</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/unordered/">Unordered</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Use the same data structure for <code><span class="identifier">unordered_set</span></code>
"                and <code><span class="identifier">unordered_multiset</span></code>,
"                and for<code><span class="identifier">unordered_map</span></code>
"                and <code><span class="identifier">unordered_multimap</span></code>.
"                This is required for C++17, so that nodes can be merged and extracted
"                between compatible containers.
"              </div>
"            </li>
"            <li>
"              <div>
"                Add deprecated attributes to long deprecated functions.
"              </div>
"            </li>
"            <li>
"              <div>
"                Improved use of <code><span class="identifier">allocator_traits</span></code>
"                <code><span class="identifier">construct</span></code> and <code><span class="identifier">destroy</span></code> on C++11 compilers, using
"                piecewise pair construction when appropriate.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fewer workarounds on newer Oracle compilers.
"              </div>
"            </li>
"            <li>
"              <div>
"                Avoid dereferencing pointers to uninitialized memory (<a href="https://github.com/boostorg/unordered/pull/5">PR
"                #5</a>).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/utility/">Utility</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improved compatibility of <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">next</span></code>/<code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">prior</span></code> with SFINAE-unfriendly iterators.
"                <a href="https://svn.boost.org/trac/boost/ticket/10847">#10847</a>, <a href="https://svn.boost.org/trac/boost/ticket/13002">#13002</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/variant/">Variant</a>:</span>
"          <ul>
"            <li>
"              <div>
"                r-value overload for <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">get</span></code>
"                was added by Albert Sverdlov <a href="https://svn.boost.org/trac/boost/ticket/13018">#13018</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Missing include fro <code><span class="special">&lt;</span><span class="identifier">boost</span><span class="special">/</span><span class="identifier">variant</span><span class="special">/</span><span class="identifier">polymorphic_get</span><span class="special">.</span><span class="identifier">hpp</span><span class="special">&gt;</span></code>
"                header was added by Adam Badura <a href="https://svn.boost.org/trac/boost/ticket/13037">#13037</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">make_variant_over</span></code> was fixed and
"                now works with views and other Forward Sequences (thanks to Mikhail
"                Maksimov for the fix) <a href="https://svn.boost.org/trac/boost/ticket/8554">#8554</a>, <a href="https://svn.boost.org/trac/boost/ticket/10041">#10041</a>, <a href="https://github.com/boostorg/variant/pull/35">PR#35</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"
-hash
"72df3d2b536664edec583cb63cea32ab76f7970c8524eb359272cb2bb184bde4
-id
"version_1_65_1
-notice_url
-notice_xml
-pub_date
-purpose_xml
"
"      Bug fixes: Config, Context, Fiber, Smart Pointers, Stacktrace, Thread
"
-title_xml
"Version 1.65.1
)
(feed/history/boost_1_66_0.qbk
-description_xhtml
"
"
"
"  <div id="version_1_66_0.note_about_the_new_visual_studio">
"    <h3><span class="link">Note about
"    the new Visual Studio release</span></h3>
"    <p>
"      Visual Studio 15.5 was released too late for us to test this release with it.
"    </p>
"  </div>
"  <div id="version_1_66_0.new_libraries">
"    <h3><span class="link">New Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/beast/">Beast</a>:</span>
"  Portable HTTP, WebSocket,
"          and network operations using only C++11 and Boost.Asio, from Vinnie Falco.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/callable_traits/">CallableTraits</a>:</span>
"  A spiritual
"          successor to Boost.FunctionTypes, Boost.CallableTraits is a header-only
"          C++11 library for the compile-time inspection and manipulation of all 'callable'
"          types. Additional support for C++17 features, from Barrett Adair.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/mp11/">Mp11</a>:</span>
"  A C++11 metaprogramming library,
"          from Peter Dimov.
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_66_0.updated_libraries">
"    <h3><span class="link">Updated Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/asio/">Asio</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Implemented interface changes to reflect the Networking TS (<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/n4656.pdf">N4656</a>).
"                <ul>
"                  <li>
"                    <div>
"                      See the <a href="/doc/libs/1_66_0/doc/html/boost_asio/net_ts.html">list</a>
"                      of new interfaces and, where applicable, the corresponding
"                      old interfaces that have been superseded.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      The service template parameters, and the corresponding classes,
"                      are disabled by default. For example, instead of <code><span class="identifier">basic_socket</span><span class="special">&lt;</span><span class="identifier">Protocol</span><span class="special">,</span>
"                      <span class="identifier">SocketService</span><span class="special">&gt;</span></code>
"                      we now have simply <code><span class="identifier">basic_socket</span><span class="special">&lt;</span><span class="identifier">Protocol</span><span class="special">&gt;</span></code>. The old interface can
"                      be enabled by defining the <code><span class="identifier">BOOST_ASIO_ENABLE_OLD_SERVICES</span></code>
"                      macro.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Removed previously deprecated functions.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added support for customised handler tracking.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added reactor-related (i.e. descriptor readiness) events to handler
"                tracking.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added special "concurrency hint" values that may be used
"                to disable locking on a per <code><span class="identifier">io_context</span></code>
"                basis.
"              </div>
"            </li>
"            <li>
"              <div>
"                Enabled perfect forwarding for the first <code><span class="identifier">ssl</span><span class="special">::</span><span class="identifier">stream</span><span class="special">&lt;&gt;</span></code> constructor argument.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added ability to release ownership of the underlying native socket.
"                (Requires Windows 8.1 or later when using the I/O completion port
"                backend.)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/atomic/">Atomic</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Implemented a set of experimental extended atomic operations for
"                integral types:
"                <ul>
"                  <li>
"                    <div>
"                      <code><span class="identifier">fetch_negate</span></code>,
"                      <code><span class="identifier">fetch_complement</span></code>
"                      - atomically replaces the value with a negated or binary complemented
"                      value and returns the original value
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <code><span class="identifier">opaque_</span><span class="special">&lt;</span><span class="identifier">op</span><span class="special">&gt;</span></code>
"                      - equivalent to <code><span class="identifier">fetch_</span><span class="special">&lt;</span><span class="identifier">op</span><span class="special">&gt;</span></code> except that it doesn't
"                      return the original value
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <code><span class="special">&lt;</span><span class="identifier">op</span><span class="special">&gt;</span><span class="identifier">_and_test</span></code>
"                      - atomically applies <code><span class="special">&lt;</span><span class="identifier">op</span><span class="special">&gt;</span></code>
"                      and returns <code><span class="keyword">true</span></code>
"                      if the result is zero. <strong>Note:</strong>
"                      The result of these operations will change to the opposite
"                      in Boost 1.67. The code that uses these functions will need
"                      to be updated.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <code><span class="identifier">bit_test_and_set</span></code>,
"                      <code><span class="identifier">bit_test_and_reset</span></code>,
"                      <code><span class="identifier">bit_test_and_complement</span></code>
"                      - atomically sets, resets or complements the specified bit
"                      and returns the original value of the bit
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Following C++17 (<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0558r1.pdf">P0558R1</a>),
"                arithmetic operations for pointers to non-object types are no longer
"                provided.
"              </div>
"            </li>
"            <li>
"              <div>
"                Also following C++17 exposed <code><span class="identifier">atomic</span><span class="special">&lt;</span><span class="identifier">T</span><span class="special">&gt;::</span><span class="identifier">value_type</span></code>
"                and <code><span class="identifier">atomic</span><span class="special">&lt;</span><span class="identifier">T</span><span class="special">&gt;::</span><span class="identifier">difference_type</span></code> member typedefs,
"                where applicable, to the user's code.
"              </div>
"            </li>
"            <li>
"              <div>
"                Improved compatibility with gcc 7. In particular, using 128-bit operations
"                on x86-64 should no longer require linking with libatomic (the compiler-supplied
"                library).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/date_time/">DateTime</a>:</span>
"          <ul>
"            <li>
"              <div>
"                The library has been converted to use Boost.WinAPI as the abstraction
"                layer for Windows SDK.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed an integral overflow that could cause incorrect results when
"                adding or subtracting many years from a date (see <a href="https://stackoverflow.com/questions/45537280/boost-datetime-issue-with-adding-long-year-durations">here</a>).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/fiber/">Fiber</a>:</span>
"          <ul>
"            <li>
"              <div>
"                synchronization with CUDA streams
"              </div>
"            </li>
"            <li>
"              <div>
"                synchronization with ROCm/HIP streams
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/format/">Format</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improvements:
"                <ul>
"                  <li>
"                    <div>
"                      Accept new conversion specifiers:
"                      <ul>
"                        <li>
"                          <div>
"                            <a href="https://github.com/boostorg/format/pull/41"><code><span class="identifier">a</span></code></a>: sets flags
"                            <code><span class="identifier">fixed</span> <span class="special">|</span> <span class="identifier">scientific</span></code>
"                            (i.e. <code><span class="identifier">hexfloat</span></code>)
"                          </div>
"                        </li>
"                        <li>
"                          <div>
"                            <a href="https://github.com/boostorg/format/pull/43"><code><span class="identifier">b</span></code></a>: sets flag
"                            <code><span class="identifier">boolalpha</span></code>
"                          </div>
"                        </li>
"                        <li>
"                          <div>
"                            <a href="https://github.com/boostorg/format/pull/41"><code><span class="identifier">A</span></code></a>: same as
"                            <code><span class="identifier">a</span></code> plus
"                            flag <code><span class="identifier">uppercase</span></code>
"                          </div>
"                        </li>
"                        <li>
"                          <div>
"                            <a href="https://github.com/boostorg/format/pull/41"><code><span class="identifier">F</span></code></a>: same as
"                            <code><span class="identifier">f</span></code> plus
"                            flag <code><span class="identifier">uppercase</span></code>
"                          </div>
"                        </li>
"                      </ul>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/format/pull/42">42</a>
"                      Accept new argument types <code><span class="identifier">j</span></code>
"                      and <code><span class="identifier">z</span></code> from
"                      ISO C99 (parsed and ignored like all others).
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/format/pull/44">44</a>
"                      Accept new argument types <code><span class="identifier">I</span></code>,
"                      <code><span class="identifier">I32</span></code>, <code><span class="identifier">I64</span></code>, and <code><span class="identifier">w</span></code>
"                      from Microsoft (parsed and ignored like all others).
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/format/issues/33">33</a>
"                      Added a development tool called <code><span class="identifier">format_matrix</span></code>
"                      that exercises as many different combinations of format strings
"                      as possible and logs them to a file:
"                      <ul>
"                        <li>
"                          <div>
"                            helps prevent regressions in between boost releases
"                          </div>
"                        </li>
"                        <li>
"                          <div>
"                            allows for comparison against <code><span class="identifier">snprintf</span></code>
"                          </div>
"                        </li>
"                      </ul>
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugfixes:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/format/issues/36">36</a>
"                      Safely allow volatile arguments to be used with operator%
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac10/ticket/4636">4636</a>
"                      Explicit clamping provided to allow MSVC /RTCc to succeed
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac10/ticket/7477">7477</a>
"                      Fix compatibility with MSVC /Za
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac10/ticket/10324">10324</a>
"                      Const-correct cast issue resolved
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac10/ticket/11632">11632</a>
"                      Fix <code><span class="special">-</span><span class="identifier">fsanitize</span><span class="special">=</span><span class="identifier">undefined</span></code>
"                      issue in <code><span class="identifier">alt_sstream</span><span class="special">.</span><span class="identifier">hpp</span></code>
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/fusion/">Fusion</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/fusion/pull/149">PR#149</a>
"                <code><span class="identifier">isspace</span><span class="special">(</span><span class="identifier">c</span><span class="special">)</span></code>
"                is not a macro in Dinkum clib for VxWorks, thanks to Brian Kuhl(@kuhlenough).
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/fusion/pull/150">PR#150</a>
"                Remove circular preprocessor include, thanks to Gregor Jasny(@gjasny).
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/fusion/pull/151">PR#151</a>
"                Change base of <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">tuple</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/fusion/pull/153">PR#153</a>
"                Fixed compile error with <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">array</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/fusion/pull/154">PR#154</a>
"                Fixed bugs nesting and copying on c++03.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/geometry/">Geometry</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improvements:
"                <ul>
"                  <li>
"                    <div>
"                      Add distance for geographic PointLike/AnyGeometry.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugfixes:
"                <ul>
"                  <li>
"                    <div>
"                      Fixes in results of union/intersection/difference which could
"                      be incorrect in very complex cases
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fixes in validity of union/intersection/difference/buffer
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fixes in set and relational operations for non-cartesian coordinate
"                      systems.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/iterator/">Iterator</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <code><span class="identifier">next</span><span class="special">()</span></code>/<code><span class="identifier">prior</span><span class="special">()</span></code>
"                functions now support user's iterators that don't specify nested
"                types such as <code><span class="identifier">iterator_category</span></code>,
"                <code><span class="identifier">difference_type</span></code>,
"                etc. and instead specialize <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">iterator_traits</span></code>
"                to define those types. The compiler must support C++17-compatible
"                <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">iterator_traits</span></code> for this to work.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/log/">Log</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Bug fixes:
"                <ul>
"                  <li>
"                    <div>
"                      Fixed a bug in <code><span class="identifier">file_collector</span><span class="special">::</span><span class="identifier">scan_for_files</span></code>
"                      that could cause incorrectly named log files in the target
"                      directory after the user's application restart.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                See <a href="/libs/log/doc/html/log/changelog.html">changelog</a>
"                for more details.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/math/">Math</a>:</span>
"          <ul>
"            <li>
"              <div>
"                New Features:
"                <ul>
"                  <li>
"                    <div>
"                      Add Gauss and Gauss-Kronrod quadrature routines.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Add double-exponential (tanh-sinh, exp-sinh and sinh-sinh)
"                      quadrature routines.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Add Chebyshev polynomial evaluation, roots, integration, differentiation,
"                      and interpolation routines.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/multi_index/index.html">Multi-index Containers</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Made <code><span class="identifier">modify</span></code> and
"                <code><span class="identifier">modify_key</span></code> more robust
"                so that the modified element is erased if the modifier throws or
"                the rollback functor does not properly restore the element (full
"                discussion at ticket <a href="https://svn.boost.org/trac/boost/ticket/12542">#12542</a>). This is technically backwards
"                incompatible; for instance, the following code:
"              </div>
"<pre><span class="identifier">c</span><span class="special">.</span><span class="identifier">modify</span><span class="special">(</span><span class="identifier">c</span><span class="special">.</span><span class="identifier">begin</span><span class="special">(),[](</span><span class="keyword">auto</span><span class="special">&amp;){</span><span class="keyword">throw</span> <span class="number">0</span><span class="special">;});</span>
"</pre>
"              <div>
"                keeps the container <code><span class="identifier">c</span></code>
"                untouched in former versions of Boost whereas now <code><span class="identifier">c</span><span class="special">.</span><span class="identifier">begin</span><span class="special">()</span></code> is erased. Thanks to Jon Kalb for
"                raising the issue.
"              </div>
"            </li>
"            <li>
"              <div>
"                Maintenance fixes.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/optional/index.html">Optional</a>:</span>
"          <ul>
"            <li>
"              <div>
"                On newer compilers <code><span class="identifier">optional</span></code>
"                is now trivially-copyable for scalar <code><span class="identifier">T</span></code>s.
"                This uses a different storage (just <code><span class="identifier">T</span></code>
"                rather than <code><span class="identifier">aligned_storage</span></code>).
"                We require the compiler to support defaulted functions.
"              </div>
"            </li>
"            <li>
"              <div>
"                Changed the implementation of <code><span class="keyword">operator</span><span class="special">==</span></code> to get rid of the <code><span class="special">-</span><span class="identifier">Wmaybe</span><span class="special">-</span><span class="identifier">uninitialized</span></code>
"                false-positive warning from GCC.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/poly_collection/">PolyCollection</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Boost.PolyCollection has been backported to GCC 4.8 to 4.9 and Clang
"                3.3 to 3.6. The version of libstdc++-v3 shipped with GCC 4.8 (which
"                can also be used by Clang) has deficiencies that result in the following
"                limitations when using Boost.PolyCollection:
"                <ul>
"                  <li>
"                    <div>
"                      Stateful allocators are not properly supported.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Allocator-extended move construction decays to allocator-extended
"                      copy construction.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Copy construction crashes if an exception is thrown during
"                      element copying.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Maintenance fixes.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/predef/">Predef</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improved Windows Universal Platform detection. (from James E. King,
"                III)
"              </div>
"            </li>
"            <li>
"              <div>
"                Add detection for CloudABI with cloudlibc. (from James E. King, III)
"              </div>
"            </li>
"            <li>
"              <div>
"                Various other bug fixes.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/regex/">Regex</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Bug fixes:
"                <ul>
"                  <li>
"                    <div>
"                      Numerous small fixes for security issues discovered by de-fuzzing.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/stacktrace/">Stacktrace</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Now works out-of-the-box on MinGW-w64.
"              </div>
"            </li>
"            <li>
"              <div>
"                Now works on MinGW (without <code><span class="special">-</span><span class="identifier">w64</span></code>) if <code><span class="identifier">libbacktrace</span></code>
"                is properly installed. See "MinGW specific notes" section
"                in documentation for more info.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/thread/">Thread</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Bugs Fixes
"                <ul>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/12323">#12323</a>
"                      windows - boost/thread/win32/mfc_thread_init.hpp has wrong
"                      signature for _pRawDllMainOrig
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/12730">#12730</a>
"                      windows - static threads library is incompatible with MSVC
"                      2017 RC
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/12976">#12976</a>
"                      Boost Thread Executors documentation mistakes
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/12949">#12949</a>
"                      using sleep_for in a thread context without including boost/thread/thread.hpp
"                      yields incorrect behaviour when BOOST_THREAD_HAS_CONDATTR_SET_CLOCK_MONOTONIC
"                      is defined
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/13019">#13019</a>
"                      ABI compatibility for BOOST_THREAD_PROVIDES_INTERRUPTIONS incomplete
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/13069">#13069</a>
"                      Boost unit test "sync_pq_multi_thread_p_lib.exe"
"                      hung in thread library
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/13163">#13163</a>
"                      boost::detail::heap_new does not have a variadic variant
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/13226">#13226</a>
"                      getpagesize() is deprecated since 199506L
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/thread/issues/132">#132</a>
"                      VS 2017.4 Preview deadlocks on Test 10964
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/thread/issues/133">#133</a>
"                      windows - Spurious timing test failures on windows
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/thread/issues/134">#134</a>
"                      VS 2017.4 Preview deadlock in sync_pq_multi_thread_p_lib.exe
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/thread/issues/135">#135</a>
"                      VS 2017.4 Preview test_scheduled_tp_p.exe deadlock
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/thread/issues/136">#136</a>
"                      VS 2017.4 Preview test_scheduler_p.exe deadlock
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/thread/issues/137">#137</a>
"                      VS 2017.4 Preview executor_ex.exe deadlock
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/thread/issues/143">#143</a>
"                      Failures on msvc-12.0
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/thread/issues/145">#145</a>
"                      Clang build error with BOOST_THREAD_ATTRIBUTE_MAY_ALIAS
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                New Experimental Feature
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/thread/issues/116">#116</a>
"                      [Proposal] Add APIs for deferred set_value/exception
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/utility/">Utility</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <code><span class="identifier">boost</span><span class="special">/</span><span class="identifier">next_prior</span><span class="special">.</span><span class="identifier">hpp</span></code> has been moved to Boost.Iterator.
"                No changes needed to the user's code.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/uuid/">Uuid</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improvements:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/uuid/issues/26">26</a>
"                      Refactored <code><span class="identifier">name_generator</span></code>
"                      to support a configurable hash provider concept and provide
"                      an optional MD5 hash implementation per RFC-4122. This will
"                      make it easier to support whatever becomes the next standard
"                      hash algorithm.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/uuid/issues/34">34</a>
"                      Added RFC-4122 namespaces in <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">uuids</span><span class="special">::</span><span class="identifier">ns</span></code>.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugfixes:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac10/ticket/8630">8630</a>
"                      <a href="https://svn.boost.org/trac10/ticket/11482">11482</a>
"                      <a href="https://svn.boost.org/trac10/ticket/12253">12253</a>
"                      Various deficiencies in <code><span class="identifier">string_generator</span></code>
"                      were resolved.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac10/ticket/10665">10665</a>
"                      <code><span class="identifier">name_generator</span><span class="special">::</span><span class="keyword">operator</span><span class="special">()</span></code> is now const, matching docs.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Detail headers were moved into the detail subdirectory. No
"                      changes needed to user's code, however you may get build warnings
"                      if you use the old header location.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/variant/">Variant</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">apply_visitor</span></code> now does perfect
"                forwarding of visitables <a href="https://svn.boost.org/trac/boost/ticket/6971">#6971</a>. Great thanks to Levon Tarakchyan
"                for implementing this feature.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_66_0.compilers_tested">
"    <h3><span class="link">Compilers Tested</span></h3>
"    <p>
"      Boost's primary test compilers are:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Linux:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.0, 4.0.1, 5.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++0x: 3.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 5.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++17: 5.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 5.4.0, 7.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++0x: 4.4.7
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.7.2, 4.7.3, 4.8.5, 4.9.4, 6.4.0, 7.1.0, 7.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 5.4.1, 6.3.0, 6.4.0, 7.1.0, 7.2.0, 7.2.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++17: 7.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel: 18.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          OS X:
"          <ul>
"            <li>
"              <div>
"                Clang: 9.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 9.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 9.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 9.0.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Windows:
"          <ul>
"            <li>
"              <div>
"                GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++0x: 4.6.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.7.3
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Android:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.6, 3.7, 3.8
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.9, 5.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 6.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          FreeBSD:
"          <ul>
"            <li>
"              <div>
"                Clang: 4.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 4.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 4.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 4.0.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          QNX:
"          <ul>
"            <li>
"              <div>
"                QCC, C++0x: 4.4.2
"              </div>
"            </li>
"            <li>
"              <div>
"                QCC, C++11: 4.7.3
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"    <p>
"      Boost's additional test compilers include:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Linux:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.0, 3.8.1, 4.0.1, 5.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++0x: 3.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 5.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++17: 5.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 5.4.0, 7.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++0x: 4.4.7
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.7.2, 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 7.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 5.4.1, 6.3.0, 6.4.0, 7.1.0, 7.2.0, 7.2.1, 8.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++17: 7.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel: 18.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          OS X:
"          <ul>
"            <li>
"              <div>
"                Clang: 9.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 9.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 9.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 9.0.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Windows:
"          <ul>
"            <li>
"              <div>
"                GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++0x: 4.6.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.7.3, 4.8.1, 4.9.3
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0, 7.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Android:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.6, 3.7, 3.8
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.9, 5.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 6.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          FreeBSD:
"          <ul>
"            <li>
"              <div>
"                Clang: 4.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 4.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 4.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 4.0.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          QNX:
"          <ul>
"            <li>
"              <div>
"                QCC, C++0x: 4.4.2
"              </div>
"            </li>
"            <li>
"              <div>
"                QCC, C++11: 4.7.3
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_66_0.acknowledgements">
"    <h3><span class="link">Acknowledgements</span></h3>
"    <p>
"      <a href="/users/people/beman_dawes.html">Beman Dawes</a>, Daniel James,
"      Vladimir Prus and Marshall Clow managed this release.
"    </p>
"  </div>
"
-hash
"f47928997a331ace106f0c6734dcc6d49aa845f616ea3c90509b03bd68f064c5
-id
"version_1_66_0
-notice_url
-notice_xml
-pub_date
-purpose_xml
"
"      New Libraries: Beast, CallableTraits, Mp11. Updated Libraries: Asio, Atomic,
"      DateTime, Fiber, Format, Fusion, Geometry, Iterator, Log, Multi-index Containers,
"      Optional, PolyCollection, Predef, Stacktrace, Thread, Utility, Uuid, Variant.
"
-title_xml
"Version 1.66.0
)
(feed/history/boost_1_67_0.qbk
-description_xhtml
"
"
"
"  <div id="version_1_67_0.known_issues">
"    <h3><span class="link">Known Issues</span></h3>
"    <p>
"      These are patches from library authors which were found too late to be fixed
"      in the release. Be careful as they have not been through the normal testing
"      process.
"    </p>
"    <ul>
"      <li>
"        <div>
"          Fix compiling with FreeBSD:
"          <ul>
"            <li>
"              <div>
"                <a href="/patches/1_67_0/0001-Fiber-Use-pthread_setaffinity_np-on-FreeBSD-as-well.patch">/patches/1_67_0/0001-Fiber-Use-pthread_setaffinity_np-on-FreeBSD-as-well.patch</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/patches/1_67_0/0002-Wave-Avoid-using-wrong-T_DIVIDE-on-BSDs.patch">/patches/1_67_0/0002-Wave-Avoid-using-wrong-T_DIVIDE-on-BSDs.patch</a>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Fix Python auto-linking:
"          <ul>
"            <li>
"              <div>
"                <a href="/patches/1_67_0/0003-Python-Fix-auto-linking-logic-Windows-only.patch">/patches/1_67_0/0003-Python-Fix-auto-linking-logic-Windows-only.patch</a>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_67_0.new_libraries">
"    <h3><span class="link">New Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/contract/">Contract</a>:</span>
"  Contract programming
"          for C++. All contract programming features are supported: Subcontracting,
"          class invariants, postconditions (with old and return values), preconditions,
"          customizable actions on assertion failure (e.g., terminate or throw), optional
"          compilation and checking of assertions, etc, from Lorenzo Caminiti.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/hof/">HOF</a>:</span>
"  Higher-order functions for C++,
"          from Paul Fultz II.
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_67_0.updated_libraries">
"    <h3><span class="link">Updated Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/asio/">Asio</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added missing const qualifier to <code><span class="identifier">basic_socket_acceptor</span><span class="special">::</span><span class="identifier">get_option</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Worked around a parsing error that occurs with some versions of gcc.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed broken code samples in tutorial.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added new experimental features. (Note that "experimental"
"                features may be changed without notice in subsequent releases.)
"                <ul>
"                  <li>
"                    <div>
"                      Added <code><span class="identifier">experimental</span><span class="special">::</span><span class="identifier">detached</span></code>
"                      completion token.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Added <code><span class="identifier">experimental</span><span class="special">::</span><span class="identifier">redirect_error</span></code>
"                      completion token.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Added <code><span class="identifier">experimental</span><span class="special">::</span><span class="identifier">co_spawn</span></code>
"                      facility for integration with the coroutines technical specification.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Updated timeout examples to use latest features.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Used <code><span class="identifier">asio</span><span class="special">::</span><span class="identifier">steady_timer</span></code> rather than
"                      <code><span class="identifier">asio</span><span class="special">::</span><span class="identifier">deadline_timer</span></code>.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Used <code><span class="identifier">asio</span><span class="special">::</span><span class="identifier">dynamic_buffer</span></code> rather than
"                      <code><span class="identifier">asio</span><span class="special">::</span><span class="identifier">streambuf</span></code>.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Used timed <code><span class="identifier">asio</span><span class="special">::</span><span class="identifier">io_context</span><span class="special">::</span><span class="identifier">run_for</span><span class="special">()</span></code> function for blocking clients.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Added example showing a custom completion token for blocking
"                      with timeouts.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed unit tests to compile when <code><span class="identifier">BOOST_ASIO_NO_DEPRECATED</span></code>
"                is defined.
"              </div>
"            </li>
"            <li>
"              <div>
"                Changed socket iostreams to use chrono by default, to fix compatibility
"                with the Networking TS. Define <code><span class="identifier">BOOST_ASIO_USE_BOOST_DATE_TIME_FOR_SOCKET_IOSTREAM</span></code>
"                to enable the old Boost.Date_Time interface in <code><span class="identifier">basic_socket_streambuf</span></code>
"                and <code><span class="identifier">basic_socket_iostream</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Updated examples to use chrono rather than Boost.Date_Time.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed an incorrect member function detector in the <code><span class="identifier">is_dynamic_buffer</span></code> trait.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed an <code><span class="identifier">async_result</span></code>
"                incompatibility with deprecated <code><span class="identifier">handler_type</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added a missing move optimisation in the SSL stream implementation.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed incorrect <code><span class="identifier">basic_resolver_results</span><span class="special">::</span><span class="identifier">value_type</span></code>
"                typedef.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed a compile error with some OpenSSL versions when <code><span class="identifier">SSL_OP_NO_COMPRESSION</span></code> is defined.
"              </div>
"            </li>
"            <li>
"              <div>
"                Changed <code><span class="identifier">add_certificate_authority</span></code>
"                to process multiple certificates in a bundle.
"              </div>
"            </li>
"            <li>
"              <div>
"                Eliminated deprecation warning with MSVC by using <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">invoke_result</span></code>
"                rather than <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">result_of</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Changed to use <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">string_view</span></code>
"                for C++17 or later, and <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">experimental</span><span class="special">::</span><span class="identifier">string_view</span></code>
"                for C++14. Define the preprocessor macro <code><span class="identifier">BOOST_ASIO_DISABLE_STD_STRING_VIEW</span></code>
"                to force the use of std::experimental::string_view (assuming it is
"                available) when compiling in C++17 mode.
"              </div>
"            </li>
"            <li>
"              <div>
"                Ensured <code><span class="identifier">DynamicBuffer</span></code>
"                template arguments are decayed before using in <code><span class="identifier">enable_if</span></code>
"                tests.
"              </div>
"            </li>
"            <li>
"              <div>
"                Changed documentation to distinguish legacy completion handlers (which
"                are still required to be CopyConstructible) from new MoveConstructible
"                handlers.
"              </div>
"            </li>
"            <li>
"              <div>
"                Suppressed a discarded return value warning in the buffer debugging
"                support.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed <code><span class="identifier">basic_yield_context</span></code>
"                to work with completion signatures containing reference parameters.
"              </div>
"            </li>
"            <li>
"              <div>
"                Ensured that stackful coroutines launched using <code><span class="identifier">spawn</span><span class="special">()</span></code> correctly store decayed copies
"                of their function and handler arguments.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed some compatibility issues with Android.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added cross-compilation support to Jamfiles.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed some minor portability issues in examples.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/atomic/">Atomic</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <strong>Breaking change:</strong> Changed the result
"                of the <code><span class="special">(</span><span class="identifier">op</span><span class="special">)</span><span class="identifier">_and_test</span></code>
"                operations added in Boost 1.66 to the opposite - the functions now
"                return <code><span class="keyword">true</span></code> if the operation
"                result is non-zero. This is consistent with other <code><span class="identifier">test</span></code>
"                methods in Boost.Atomic and the C++ standard library. Users can define
"                <code><span class="identifier">BOOST_ATOMIC_DETAIL_HIGHLIGHT_OP_AND_TEST</span></code>
"                when compiling their code to emit warnings on every use of the changed
"                functions. This way users can locate the code that needs to be updated.
"                (<a href="https://github.com/boostorg/atomic/issues/11">#11</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Update for C++2a. On C++11 compilers that support scoped enums, the
"                <code><span class="identifier">memory_order</span></code> enumeration
"                is now scoped and contains constants with shorter names like <code><span class="identifier">acquire</span></code>, <code><span class="identifier">release</span></code>
"                or <code><span class="identifier">seq_cst</span></code> (i.e.
"                users can use <code><span class="identifier">memory_order</span><span class="special">::</span><span class="identifier">acquire</span></code>
"                instead of <code><span class="identifier">memory_order_acquire</span></code>).
"                The old constants are also provided for backward compatibility. (<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0439r0.html">P0439R0</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Update for C++2a. Added experimental support for atomic operations
"                on floating point types. In addition to general operations, <code><span class="identifier">add</span></code>, <code><span class="identifier">sub</span></code>,
"                <code><span class="identifier">negate</span></code> operations
"                and their <code><span class="identifier">fetch_</span><span class="special">(</span><span class="identifier">op</span><span class="special">)</span></code> and <code><span class="identifier">opaque_</span><span class="special">(</span><span class="identifier">op</span><span class="special">)</span></code> versions are supported. Lock-free
"                property can be tested with the new macros <code><span class="identifier">BOOST_ATOMIC_FLOAT</span><span class="special">/</span><span class="identifier">DOUBLE</span><span class="special">/</span><span class="identifier">LONG_DOUBLE_LOCK_FREE</span></code>.
"                The support for floating point types is optional and can be disabled
"                by defining <code><span class="identifier">BOOST_ATOMIC_NO_FLOATING_POINT</span></code>.
"                (<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0020r6.html">P0020R6</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Added new experimental operations:
"                <ul>
"                  <li>
"                    <div>
"                      <code><span class="identifier">negate_and_test</span></code>
"                      and <code><span class="identifier">complement_and_test</span></code>
"                      which perform negation or bitwise complement and return <code><span class="keyword">true</span></code> if the result is not zero.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <code><span class="identifier">add</span></code>, <code><span class="identifier">sub</span></code>, <code><span class="identifier">negate</span></code>,
"                      <code><span class="identifier">bitwise_and</span></code>,
"                      <code><span class="identifier">bitwise_or</span></code>,
"                      <code><span class="identifier">bitwise_xor</span></code>,
"                      <code><span class="identifier">bitwise_complement</span></code>
"                      operations which perform the operation and return its result.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                For generic <code><span class="identifier">atomic</span><span class="special">&lt;</span><span class="identifier">T</span><span class="special">&gt;</span></code> specialization, the default constructor
"                is now trivial if <code><span class="identifier">T</span></code>'s
"                default constructor is.
"              </div>
"            </li>
"            <li>
"              <div>
"                The internal implementation of <code><span class="identifier">atomic</span><span class="special">&lt;</span><span class="identifier">T</span><span class="special">&gt;</span></code> has been updated to avoid undefined
"                behavior that stems from signed integer overflows. As required by
"                the C++ standard, the library uses two's complement representation
"                of signed integers internally and accroding rules of overflow. Currently,
"                the library requires the native signed integer types to also use
"                two's complement representation (but no defined overflow semantics).
"              </div>
"            </li>
"            <li>
"              <div>
"                Improved Clang support. In particular, fixed DCAS not being lock-free
"                and fixed possible incorrect code generated on 32-bit x86.
"              </div>
"            </li>
"            <li>
"              <div>
"                Improved MinGW support. For gcc versions up to 4.6, fixed compilation
"                of DCAS on x86.
"              </div>
"            </li>
"            <li>
"              <div>
"                In x86 PIE code, asm blocks now preserve <code><span class="identifier">ebx</span></code>
"                value.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/beast/">Beast</a>:</span>
"          <ul>
"            <li>
"              <div>
"                This version fixes significant defects in <code><span class="identifier">websocket</span><span class="special">::</span><span class="identifier">stream</span></code>
"                which can lead to asserts or undefined behavior. Users are encouraged
"                to update to the latest Boost release.
"              </div>
"            </li>
"            <li>
"              <div>
"                For a complete list of changes, please view the official <a href="/libs/beast/doc/html/beast/release_notes.html">Release
"                Notes</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/container_hash/">ContainerHash</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Extracted from the functional module to break a dependency cycle.
"              </div>
"            </li>
"            <li>
"              <div>
"                Moved headers to new location to reflect name change, the old include
"                paths will still work.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added support for <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">string_view</span></code>,
"                <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">error_code</span></code>, <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">error_condition</span></code>,
"                <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">optional</span></code>, <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">variant</span></code>,
"                <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">monostate</span></code> where available.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added explicit support for <code><span class="identifier">vector</span><span class="special">&lt;</span><span class="keyword">bool</span><span class="special">&gt;</span></code>, so that it will work with libc++
"                (<a href="https://svn.boost.org/trac/boost/ticket/13501">#13501</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                More detail in the <a href="/doc/html/hash/changes.html#hash.changes.boost_1_67_0">library
"                change log</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/context/">Context</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/context/issues/62">#62</a>/<a href="https://github.com/boostorg/context/pull/64">PR#64</a>: fix i386/macho routines to correctly
"                return transfer_t in EAX/EDX
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/context/issues/65">#65</a>: <code><span class="identifier">__sanitizer_finish_switch_fiber</span></code>
"                should be called directly after context switch
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/context/issues/66">#66</a>: Clang on Windows : error: No best alternative for libs/context/build/asm_sources
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/context/issues/73">#73</a>: fixing C2492 for execution_context (v1)
"              </div>
"            </li>
"            <li>
"              <div>
"                known bug: including all.hpp + &lt;context-impl&gt;ucontext/winfib
"                causes error 'forced_unwind: is not a member of boost::context::detail'
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/core/">Core</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Updated <code><span class="identifier">to_address</span></code>
"                and <code><span class="identifier">pointer_traits</span></code>
"                to reflect the design adopted for C++2a in <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0653r2.html">P0653R2</a>
"                (Glen Fernandes).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/coroutine2/">Coroutine2</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/coroutine2/issues/13">#13</a>: Pull coroutine does not rethrow an exception if
"                it is thrown on the first entry
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/date_time/">DateTime</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed various year 2038 (32-bit) issues (<a href="https://svn.boost.org/trac/boost/ticket/2818">#2818</a>) (<a href="https://svn.boost.org/trac/boost/ticket/2819">#2819</a>) (<a href="https://svn.boost.org/trac/boost/ticket/3487">#3487</a>)
"                (<a href="https://svn.boost.org/trac/boost/ticket/4543">#4543</a>) (<a href="https://svn.boost.org/trac/boost/ticket/8450">#8450</a>) (<a href="https://svn.boost.org/trac/boost/ticket/9158">#9158</a>) (<a href="https://svn.boost.org/trac/boost/ticket/9489">#9489</a>) (<a href="https://svn.boost.org/trac/boost/ticket/10570">#10570</a>) (<a href="https://svn.boost.org/trac/boost/ticket/12609">#12609</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed a binary serialization regression introduced in 1.66.0 (<a href="https://github.com/boostorg/date_time/issues/56">#56</a>)
"                (<a href="https://github.com/boostorg/date_time/pull/58">PR#58</a>) (<a href="https://github.com/boostorg/date_time/pull/70">PR#70</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Updated the timezone database file (<a href="https://svn.boost.org/trac/boost/ticket/4430">#4430</a>) (<a href="https://svn.boost.org/trac/boost/ticket/10087">#10087</a>) (<a href="https://github.com/boostorg/date_time/pull/68">PR#68</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Enhanced <code><span class="identifier">from_iso_string</span></code>
"                so it can read output of <code><span class="identifier">to_iso_string</span></code>
"                for special values (<a href="https://svn.boost.org/trac/boost/ticket/1078">#1078</a>) (<a href="https://github.com/boostorg/date_time/pull/69">PR#69</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Changed maximum supported year from 10000 to 9999 to resolve various
"                issues (<a href="https://svn.boost.org/trac/boost/ticket/13159">#13159</a>) (<a href="https://svn.boost.org/trac/boost/ticket/12630">#12630</a>) (<a href="https://github.com/boostorg/date_time/pull/71">PR#71</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">date_time</span><span class="special">::</span><span class="identifier">period_parser</span><span class="special">::</span><span class="identifier">delimiter_strings</span></code> did nothing (<a href="https://svn.boost.org/trac/boost/ticket/11142">#11142</a>)
"                (<a href="https://github.com/boostorg/date_time/pull/63">PR#63</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Ensure special values are not automatically translated to integral
"                types (<a href="https://svn.boost.org/trac/boost/ticket/11168">#11168</a>) (<a href="https://github.com/boostorg/date_time/pull/64">PR#64</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">int_adapter</span><span class="special">::</span><span class="identifier">is_signed</span></code> should be const (<a href="https://svn.boost.org/trac/boost/ticket/12363">#12363</a>)
"                (<a href="https://github.com/boostorg/date_time/pull/60">PR#60</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">date_time</span><span class="special">::</span><span class="identifier">time_input_facet</span></code> throws when using
"                <code><span class="special">%</span><span class="identifier">j</span></code>
"                alone (<a href="https://svn.boost.org/trac/boost/ticket/12910">#12910</a>) (<a href="https://github.com/boostorg/date_time/pull/59">PR#59</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Time input facet is not able to parse <code><span class="special">%</span><span class="identifier">e</span></code> day (<a href="https://svn.boost.org/trac/boost/ticket/13194">#13194</a>) (<a href="https://github.com/boostorg/date_time/pull/54">PR#54</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Improved Github CI build environment for better project metrics and
"                quality (<a href="https://github.com/boostorg/date_time/pull/52">PR#52</a>) (<a href="https://github.com/boostorg/date_time/pull/72">PR#72</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed various compiler warnings (<a href="https://svn.boost.org/trac/boost/ticket/3606">#3606</a>) (<a href="https://svn.boost.org/trac/boost/ticket/9882">#9882</a>) (<a href="https://github.com/boostorg/date_time/pull/62">PR#62</a>)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/dll/">DLL</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixes for calling functions on dirty <code><span class="identifier">GetLastError</span><span class="special">()</span></code> <a href="https://github.com/boostorg/dll/issues/16">#16</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/fiber/">Fiber</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/fiber/issues/128">#128</a>: Assertion "! ctx-&gt;ready_is_linked()" when
"                using condition_variable::wait_for
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/fiber/issues/132">#132</a>: fatal error: 'stdexception' file not found
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/fiber/issues/141">#141</a>: boost::fibers::async problem
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/fiber/issues/146">#146</a>: remove unecessary lock of remote-ready-queue spinlock
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/fiber/issues/153">#153</a>: docu: replace set_ready() by schedule()
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/fiber/issues/154">#154</a>: Document iterators on channels
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/fiber/issues/155">#155</a>: this_fiber is wrongly documented as being a member
"                of boost::fibers
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/fiber/issues/156">#156</a>: Many examples are using their own barrier.hpp
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/fiber/issues/158">#158</a>: add BOOST_FIBERS_DECL to work_stealing class
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/fiber/issues/162">#162</a>: remove use-coutner increment for timed wait ops
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/fiber/issues/166">#166</a>: remove assertion for wait_is_linked() in schedule()
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/fiber/issues/167">#167</a>: call shared_state::owner_destroyed() only if future
"                was created from
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/fiber/issues/168">#168</a>: fiber/doc/installing.qbk not not up to date
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/filesystem/">Filesystem</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix static initialization issue that caused a crash if path operations
"                were used before main() (<a href="https://github.com/boostorg/filesystem/pull/62">PR#62</a>, <a href="https://github.com/boostorg/filesystem/pull/43">PR#43</a>, <a href="https://github.com/boostorg/filesystem/pull/50">PR#50</a>,
"                <a href="https://github.com/boostorg/filesystem/pull/59">PR#59</a>)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/fusion/">Fusion</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Switch to SFINAE in template parameters on <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">map</span></code>
"                to fix compile error on newer MSVC 2017. (<a href="https://github.com/boostorg/fusion/pull/164">PR#164</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix for compilers not compatible with CWG defect 945 on <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">vector</span></code>. (<a href="https://github.com/boostorg/fusion/pull/166">PR#166</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Added limits precheck on sequence converter to make error message
"                clearer. (<a href="https://github.com/boostorg/fusion/pull/168">PR#168</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Allow incomplete types in <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">tag_of</span></code>
"                and <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">is_native_fusion_sequence</span></code>. Note
"                that this changes no behaviour from previous release, but compliant
"                to TypeTraits's change. (<a href="https://github.com/boostorg/fusion/pull/171">PR#171</a>)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/geometry/">Geometry</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improvements:
"                <ul>
"                  <li>
"                    <div>
"                      New map projection and SRS transformation representations (undocumented
"                      for now due to potential interface changes).
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      New densify() algorithm.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      No longer using std::iterator (thanks to Daniela Engert).
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      No longer using allocator directly in the rtree. Replaced with
"                      boost::container::allocator_traits (thanks to Daniela Engert).
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Default rtree allocator changed to boost::container::new_allocator
"                      to still support move semantics emulation in C++03 with boost::container::allocator_traits.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Area strategies interface changed. This is potentially a breaking
"                      change.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Radius or Sphere can be passed into spherical strategies.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Added Point-Box and Box-Box spherical and geographic distance()
"                      strategies.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Simplify (multi)polygons will discard output rings of 2 points
"                      or (for closed polygons) 3 points, but it tries to avoid creating
"                      those
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Simplify (multi)polygons will omit empty interior rings or
"                      polygons from output
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Solved issues:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac10/ticket/13386">13386</a>
"                      Workaround for some gcc compilers
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac10/ticket/13381">13381</a>
"                      Compile error with matrix_transformer in Visual C++ 2015
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac10/ticket/13436">13436</a>
"                      Incorrectness in boost::geometry::model::polygon documentation
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugfixes:
"                <ul>
"                  <li>
"                    <div>
"                      Add missing strategy resolving in length() algorithm, affecting
"                      Variant support.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Simplify (multi)polygons now simplifies closing point
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Changes in behavior
"                <ul>
"                  <li>
"                    <div>
"                      Simplify (multi)polygons now usually rotates input rings before
"                      simplifying to select a non collinear point on its convex hull.
"                      This improves output.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/locale/">Locale</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added support of <code><span class="identifier">unique_ptr</span></code>
"                interface in addition to C++2003 <code><span class="identifier">auto_ptr</span></code>
"                - in order to support C++2017, now you can use <code><span class="identifier">BOOST_LOCALE_HIDE_AUTO_PTR</span></code>
"                definiton to remove <code><span class="identifier">auto_ptr</span></code>
"                from the interfaces and prevent deprecated watnings.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed test problem with ICU &gt;60.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix of solaris build
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed wired FreeBSD/clang issue on optimized build. Probably compiler
"                workaround
"              </div>
"            </li>
"            <li>
"              <div>
"                Added workaround for failing MSVC tests due to 932 codepage codecvt
"                issue
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed bugs 6851, 12572, 12453
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed missing throw in case of failure in <code><span class="identifier">icu</span><span class="special">/</span><span class="identifier">date_time</span></code>
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed build agains Boost.Thread v4
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed Year of week instead of year ICU backend formatting
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed formatting test for ICU 56.1 and above
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/log/">Log</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improved compatibility with C++17: use <code><span class="identifier">allocator_traits</span></code>
"                to work with allocators instead of directly accessing its members.
"              </div>
"            </li>
"            <li>
"              <div>
"                Improved compatibility with gcc 7 and later by updating library ABI
"                namespace definition.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added documentation for the "Append" config file parameter
"                for "TextFile" sinks. The parameter was supported previously,
"                only the documentation was missing.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/math/index.html">Math</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Add naive Monte Carlo integration support.
"              </div>
"            </li>
"            <li>
"              <div>
"                Add Chebyshev interpolation routines.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/multi_index/index.html">Multi-index Containers</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Elements with overloaded <code><span class="keyword">operator</span><span class="special">&amp;</span></code> are now fully accepted (ticket
"                <a href="https://svn.boost.org/trac/boost/ticket/13307">#13307</a>). Thanks to Daniel Frey for his updating <a href="/libs/utility/operators.htm#deref">Boost.Operators</a>
"                to help fix this issue.
"              </div>
"            </li>
"            <li>
"              <div>
"                Avoided usage of <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">allocator</span></code>
"                members deprecated in C++17. Contributed by Daniela Engert.
"              </div>
"            </li>
"            <li>
"              <div>
"                Maintenance fixes.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/multiprecision/index.html">Multiprecision</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <strong>Breaking Change:</strong> When converting
"                a multiprecision integer to a narrower type, if the value is too
"                large (or negative) to fit in the smaller type, then the result is
"                either the maximum (or minimum) value of the target type. This was
"                always the intended behaviour, but was somewhat haphazardly enforced
"                before. If you really do want just the low order N bits of a value,
"                then you will need to mask these out prior to the case, for example:
"                <code><span class="keyword">static_cast</span><span class="special">&lt;</span><span class="keyword">unsigned</span><span class="special">&gt;(~</span><span class="keyword">static_cast</span><span class="special">&lt;</span><span class="keyword">unsigned</span><span class="special">&gt;(</span><span class="number">0</span><span class="special">)</span> <span class="special">&amp;</span> <span class="identifier">my_value</span><span class="special">)</span></code>. Note that technically (to avoid
"                undefined behaviour) you should do the same thing with built in integer
"                types too. See <a href="https://svn.boost.org/trac/boost/ticket/13109">#13109</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix bug in conversion of decimal to rational types (zero needs special
"                handling), see <a href="https://svn.boost.org/trac/boost/ticket/13148">#13148</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix conversion from cpp_bin_float to a wider built in integer type,
"                see <a href="https://svn.boost.org/trac/boost/ticket/13301">#13301</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Improve performance heurists used in cpp_bin_float exp function.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix bug in floor/ceil and cpp_bin_float when the exponent type is
"                wider than an int, see <a href="https://svn.boost.org/trac/boost/ticket/13264">#13264</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Disable explicit conversion operator when the target type is already
"                constructible from this type, see <a href="https://github.com/boostorg/multiprecision/issues/30">#30</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix support for changes new to MPIR-3.0, see <a href="https://svn.boost.org/trac/boost/ticket/13124">#13124</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/optional/index.html">Optional</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed issue <a href="https://github.com/boostorg/optional/issues/46">#46</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed <code><span class="special">-</span><span class="identifier">Wzero</span><span class="special">-</span><span class="identifier">as</span><span class="special">-</span><span class="identifier">null</span><span class="special">-</span><span class="identifier">pointer</span><span class="special">-</span><span class="identifier">constant</span></code>
"                warnings.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/phoenix/">Phoenix</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Correct documentation and example code. (<a href="https://svn.boost.org/trac/boost/ticket/8187">#8187</a>, <a href="https://github.com/boostorg/phoenix/pull/56">PR#56</a>,
"                <a href="https://github.com/boostorg/phoenix/pull/57">PR#57</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed bug with initializing phoenix lazy from array types in C++11.
"                (<a href="https://svn.boost.org/trac/boost/ticket/12733">#12733</a>, <a href="https://github.com/boostorg/phoenix/pull/58">PR#58</a>, <a href="https://github.com/boostorg/phoenix/pull/61">PR#61</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Use proto subscript and assignment overload operators buildins to
"                fix compile error with some lambda experssions on recent MSVC. (<a href="https://github.com/boostorg/phoenix/issues/62">#62</a>,
"                <a href="https://github.com/boostorg/phoenix/pull/64">PR#64</a>, <a href="https://github.com/boostorg/phoenix/pull/66">PR#66</a>, <a href="https://github.com/boostorg/phoenix/pull/67">PR#67</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Remove use of deprecated <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">iteratror</span></code>.
"                Thanks to Daniela Engert. (<a href="https://github.com/boostorg/phoenix/pull/59">PR#59</a>)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/poly_collection/">PolyCollection</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Maintenance fixes.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/python/">Python</a>:</span>
"          <ul>
"            <li>
"              <div>
"                The library name now includes the version suffix of the Python version
"                used to compile it. For example, a variant compiled with Python 2.7
"                will produce library names <code><span class="identifier">boost_python27</span></code>
"                and <code><span class="identifier">boost_numpy27</span></code>,
"                etc.. Combined with a related fix in Boost.Build, this means that
"                it is now possible to build variants for multiple Python versions
"                in a single build process.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/spirit/">Spirit</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Spirit.X3:
"                <ul>
"                  <li>
"                    <div>
"                      <strong>Breaking change:</strong> Removed
"                      <code><span class="identifier">with_context</span></code>
"                      (<a href="https://github.com/boostorg/spirit/issues/239">#239</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Added noexcept to <code><span class="identifier">x3</span><span class="special">::</span><span class="identifier">variant</span></code>
"                      and <code><span class="identifier">forward_ast</span></code>
"                      (<a href="https://github.com/boostorg/spirit/issues/241">#241</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      CR+LF lines wrongly counted in <code><span class="identifier">error_handler</span><span class="special">::</span><span class="identifier">position</span><span class="special">()</span></code> (<a href="https://github.com/boostorg/spirit/issues/248">#248</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fixed <code><span class="identifier">unused_type</span></code>
"                      attribute case in <code><span class="identifier">parse_into_container</span></code>
"                      (<a href="https://github.com/boostorg/spirit/issues/266">#266</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fixed parsing into associative containers (<a href="https://github.com/boostorg/spirit/issues/289">#289</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fixed overflow problem in <code><span class="identifier">uint_parser</span><span class="special">&lt;</span><span class="keyword">signed</span>
"                      <span class="identifier">T</span><span class="special">&gt;</span></code>
"                      (<a href="https://github.com/boostorg/spirit/issues/297">#297</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Added VS2015 Update 3 support by using workarounds (<a href="https://github.com/boostorg/spirit/issues/308">#308</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fixed include guard names collision with Qi (<a href="https://github.com/boostorg/spirit/issues/313">#313</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Added parsing into range (<a href="https://github.com/boostorg/spirit/issues/316">#316</a>) (<a href="https://svn.boost.org/trac/boost/ticket/12928">#12928</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Changed iterator concept static assert from <code><span class="identifier">ForwardIterator</span></code>
"                      to <code><span class="identifier">ReadableIteratorConcept</span></code>
"                      &amp;&amp; <code><span class="identifier">ForwardTraversalConcept</span></code>
"                      (<a href="https://github.com/boostorg/spirit/issues/320">#320</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Reenabled <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">map</span></code>
"                      support (<a href="https://github.com/boostorg/spirit/issues/330">#330</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fixed <code><span class="identifier">string</span><span class="special">(</span><span class="string">"..."</span><span class="special">)</span></code> and <code><span class="identifier">attr</span><span class="special">(</span><span class="string">"..."</span><span class="special">)</span></code> to single item sequence (<a href="https://github.com/boostorg/spirit/issues/337">#337</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Dereference a single item view instead of unwrapping sequence
"                      (<a href="https://github.com/boostorg/spirit/issues/340">#340</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Prevent <code><span class="identifier">parse_nan</span></code>
"                      from dereferencing out of range iterator (<a href="https://github.com/boostorg/spirit/issues/351">#351</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Use traits to test if container is empty (<a href="https://github.com/boostorg/spirit/issues/355">#355</a>)
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Spirit V2
"                <ul>
"                  <li>
"                    <div>
"                      Fixed keyword directives compilation on C++11 (<a href="https://github.com/boostorg/spirit/issues/256">#256</a>)
"                      (<a href="https://svn.boost.org/trac/boost/ticket/11493">#11493</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fixed subrules compilation (<a href="https://github.com/boostorg/spirit/issues/279">#279</a>) (<a href="https://github.com/boostorg/spirit/issues/259">#259</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fixed subrules use after scope bug (<a href="https://github.com/boostorg/spirit/issues/284">#284</a>) (<a href="https://svn.boost.org/trac/boost/ticket/5270">#5270</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fixed undefined behavior in sequential or operator. Underlying
"                      parsers order of execution was dependent on compiler (<a href="https://github.com/boostorg/spirit/issues/310">#310</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Spirit was accidentally relaying on <code><span class="identifier">types</span></code>
"                      typedef of <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">optional</span></code>.
"                      The typedef was removed in the new optional implementation
"                      (<a href="https://github.com/boostorg/spirit/issues/271">#271</a>) (<a href="https://svn.boost.org/trac/boost/ticket/12349">#12349</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fixed problems with <code><span class="identifier">BOOST_SPIRIT_NO_PREDEFINED_TERMINALS</span></code>
"                      (<code><span class="identifier">attr_cast</span></code>,
"                      <code><span class="identifier">confix</span></code>, <code><span class="identifier">distinct</span></code>, <code><span class="identifier">keywords</span></code>,
"                      and <code><span class="identifier">flush_multi_pass</span></code>)
"                      (<a href="https://github.com/boostorg/spirit/issues/314">#314</a>) (<a href="https://svn.boost.org/trac/boost/ticket/13311">#13311</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Added missing copy assignment operator to <code><span class="identifier">hold_any</span></code>
"                      (<a href="https://github.com/boostorg/spirit/issues/361">#361</a>) (<a href="https://svn.boost.org/trac/boost/ticket/8268">#8268</a>)
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Spirit.Qi:
"                <ul>
"                  <li>
"                    <div>
"                      Fixed alternate operator (<a href="https://github.com/boostorg/spirit/issues/201">#201</a>) (<a href="https://github.com/boostorg/spirit/issues/271">#271</a>) (<a href="https://svn.boost.org/trac/boost/ticket/12349">#12349</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fixed signed integer overflow in real parser (<a href="https://github.com/boostorg/spirit/issues/245">#245</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fixed overflow problem in <code><span class="identifier">uint_parser</span><span class="special">&lt;</span><span class="keyword">signed</span>
"                      <span class="identifier">T</span><span class="special">&gt;</span></code>
"                      (<a href="https://github.com/boostorg/spirit/issues/297">#297</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fixed <code><span class="identifier">get_current_line</span></code>,
"                      <code><span class="identifier">get_line_start</span></code>,
"                      and added <code><span class="identifier">get_line_end</span></code>
"                      (<a href="https://github.com/boostorg/spirit/issues/304">#304</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Permutations parser were always initializing optionals (<a href="https://github.com/boostorg/spirit/issues/319">#319</a>)
"                      (<a href="https://svn.boost.org/trac/boost/ticket/12473">#12473</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Changed iterator concept static assert from <code><span class="identifier">ForwardIterator</span></code>
"                      to <code><span class="identifier">ReadableIteratorConcept</span></code>
"                      &amp;&amp; <code><span class="identifier">ForwardTraversalConcept</span></code>
"                      (<a href="https://github.com/boostorg/spirit/issues/320">#320</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Added assertations to real parsers to ensure that the <code><span class="identifier">parse_frac_n</span></code> from user defined
"                      real policy does not return negative values and also to prevent
"                      static analyzers false-positives (<a href="https://github.com/boostorg/spirit/issues/358">#358</a>)
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Spirit.Karma:
"                <ul>
"                  <li>
"                    <div>
"                      Fixed alternate operator (<a href="https://github.com/boostorg/spirit/issues/271">#271</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fixed <code><span class="identifier">no_buffering_policy</span></code>
"                      missing copy constructor (<a href="https://github.com/boostorg/spirit/issues/261">#261</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      The <code><span class="identifier">ostream_iterator</span></code>
"                      was inheriting <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">iterator</span></code>
"                      which is deprecated in C++17 (<a href="https://github.com/boostorg/spirit/issues/345">#345</a>)
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Spirit.Lex:
"                <ul>
"                  <li>
"                    <div>
"                      Store id as promoted type to allow out-of-enum values (<a href="https://github.com/boostorg/spirit/issues/247">#247</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fixed C2001 'newline in constant' warning in generated lexers
"                      (<a href="https://github.com/boostorg/spirit/issues/324">#324</a>) (<a href="https://svn.boost.org/trac/boost/ticket/11540">#11540</a>)
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Spirit.Classic:
"                <ul>
"                  <li>
"                    <div>
"                      Fixed <code><span class="identifier">remove_reference</span></code>
"                      usage without a namespace in Phoenix (<a href="https://github.com/boostorg/spirit/issues/274">#274</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fixed <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">complex</span></code> usage without the
"                      include (<a href="https://github.com/boostorg/spirit/issues/273">#273</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fixed compilation of <code><span class="identifier">match</span><span class="special">&lt;</span><span class="identifier">T</span>
"                      <span class="special">&amp;&gt;</span></code> (<a href="https://github.com/boostorg/spirit/issues/275">#275</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fixed compilation with <code><span class="identifier">BOOST_DISABLE_THREADS</span></code>
"                      defined (<a href="https://github.com/boostorg/spirit/issues/323">#323</a>) (<a href="https://svn.boost.org/trac/boost/ticket/12639">#12639</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Increment scanner through iterator policy (<a href="https://github.com/boostorg/spirit/issues/336">#336</a>) (<a href="https://svn.boost.org/trac/boost/ticket/7371">#7371</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Removed deprecated in C++17 <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">iterator</span></code>
"                      usage (<a href="https://github.com/boostorg/spirit/issues/345">#345</a>)
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/stacktrace/">Stacktrace</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Async safe dumping into files on Windows OS was causing hangs on
"                some platforms and now is disabled <a href="https://github.com/boostorg/stacktrace/issues/33">#33</a>. Users are encouraged
"                to update to the latest Boost release.
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/libs/container_hash/">ContainerHash</a> library
"                is now used to reduce dependencies.
"              </div>
"            </li>
"            <li>
"              <div>
"                Minor fixes (including <a href="https://github.com/boostorg/stacktrace/issues/31">#31</a>, <a href="https://github.com/boostorg/stacktrace/issues/38">#38</a>, <a href="https://github.com/boostorg/stacktrace/issues/39">#39</a>,
"                <a href="https://github.com/boostorg/stacktrace/issues/40">#40</a>, <a href="https://github.com/boostorg/stacktrace/issues/42">#42</a>).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/test/">Test</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Boost.test v3.7 see the <a href="/doc/libs/1_67_0/libs/test/doc/html/boost_test/change_log.html">Changes
"                log</a> for more details.
"              </div>
"            </li>
"            <li>
"              <div>
"                Breaking changes
"                <ul>
"                  <li>
"                    <div>
"                      Adding test cases with the same name to the same test suite
"                      is now reported as an error. See the changes log for more details.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                New feature:
"                <ul>
"                  <li>
"                    <div>
"                      Colour output on by default and available on Windows,
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Improved and clearer command line help
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <code><span class="identifier">BOOST_AUTO_TEST_CASE_TEMPLATE</span></code>
"                      now accepts a sequence of types in an <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">tuple</span></code>
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bug fixes and pull requests:
"                <ul>
"                  <li>
"                    <div>
"                      Trac tickets: <a href="https://svn.boost.org/trac/boost/ticket/12092">#12092</a>, <a href="https://svn.boost.org/trac/boost/ticket/12596">#12596</a>, <a href="https://svn.boost.org/trac/boost/ticket/12597">#12597</a>, <a href="https://svn.boost.org/trac/boost/ticket/12969">#12969</a>,
"                      <a href="https://svn.boost.org/trac/boost/ticket/13058">#13058</a>, <a href="https://svn.boost.org/trac/boost/ticket/13149">#13149</a>, <a href="https://svn.boost.org/trac/boost/ticket/13170">#13170</a>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Trac tickets: <a href="https://svn.boost.org/trac/boost/ticket/13181">#13181</a>, <a href="https://svn.boost.org/trac/boost/ticket/13371">#13371</a>, <a href="https://svn.boost.org/trac/boost/ticket/13387">#13387</a>, <a href="https://svn.boost.org/trac/boost/ticket/13398">#13398</a>,
"                      <a href="https://svn.boost.org/trac/boost/ticket/13407">#13407</a>, <a href="https://svn.boost.org/trac/boost/ticket/13435">#13435</a>, <a href="https://svn.boost.org/trac/boost/ticket/13443">#13443</a>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Pull requests: <a href="https://github.com/boostorg/test/issues/112">#112</a>, <a href="https://github.com/boostorg/test/issues/118">#118</a>, <a href="https://github.com/boostorg/test/issues/118">#118</a>, <a href="https://github.com/boostorg/test/issues/121">#121</a>,
"                      <a href="https://github.com/boostorg/test/issues/122">#122</a>, <a href="https://github.com/boostorg/test/issues/125">#125</a>, <a href="https://github.com/boostorg/test/issues/127">#127</a>
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/type_index/">TypeIndex</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <a href="/libs/container_hash/">ContainerHash</a> library
"                is now used to reduce dependencies.
"              </div>
"            </li>
"            <li>
"              <div>
"                Minor fixes (including <a href="https://github.com/boostorg/type_index/issues/17">#17</a>)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/type_traits/">TypeTraits</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added new traits <code><span class="identifier">detected</span></code>,
"                <code><span class="identifier">detected_or</span></code>, <code><span class="identifier">is_detected</span></code>, <code><span class="identifier">is_detected_convertible</span></code>,
"                <code><span class="identifier">is_detected_exact</span></code>,
"                <code><span class="identifier">is_complete</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added greatly improved code for detecting binary operators.
"              </div>
"            </li>
"            <li>
"              <div>
"                Add assertions for completeness to traits which require complete
"                types as arguments: this prevents various traits from giving eroneous
"                results from incomplete types.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix minor issue with mpl compatibility, see <a href="https://svn.boost.org/trac/boost/ticket/12212">#12212</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Add macro to indicate when <code><span class="identifier">is_constructible</span></code>
"                is fully implemented, see <a href="https://svn.boost.org/trac/boost/ticket/12003">#12003</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Update <code><span class="identifier">is_function</span></code>
"                and <code><span class="identifier">is_member_function_pointer</span></code>
"                to work correctly with C++17 noexcept specifications.
"              </div>
"            </li>
"            <li>
"              <div>
"                Add workaround for <code><span class="identifier">is_default_constructible</span></code>
"                and <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">pair</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added fallback for <code><span class="identifier">is_nothrow_swappable</span></code>
"                on pre-C++11 compilers.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/utility/">Utility</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <strong>Breaking change:</strong> <code><span class="special">&lt;</span><span class="identifier">boost</span><span class="special">/</span><span class="identifier">utility</span><span class="special">.</span><span class="identifier">hpp</span><span class="special">&gt;</span></code>
"                header no longer includes <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">next</span></code>
"                and <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">prior</span></code> as they have been moved to
"                the iterator module. Instead include <code><span class="special">&lt;</span><span class="identifier">boost</span><span class="special">/</span><span class="identifier">next_prior</span><span class="special">.</span><span class="identifier">hpp</span><span class="special">&gt;</span></code>.
"                Other uses of <code><span class="special">&lt;</span><span class="identifier">boost</span><span class="special">/</span><span class="identifier">utility</span><span class="special">.</span><span class="identifier">hpp</span><span class="special">&gt;</span></code> are discouraged, it's better
"                to use the header for the specific functionality instead.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/unordered/">Unordered</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Template deduction guides.
"              </div>
"            </li>
"            <li>
"              <div>
"                Standard conforming <code><span class="keyword">noexcept</span></code>
"                specifications for <code><span class="identifier">swap</span></code>,
"                <code><span class="keyword">operator</span><span class="special">=</span></code>
"                and node handles.
"              </div>
"            </li>
"            <li>
"              <div>
"                Add <code><span class="identifier">element_type</span></code>
"                to iterators, so that <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">pointer_traits</span></code>
"                will work.
"              </div>
"            </li>
"            <li>
"              <div>
"                Support <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">piecewise_construct</span></code> on recent Visual
"                C++ and Dinkumware libraries.
"              </div>
"            </li>
"            <li>
"              <div>
"                Use <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">iterator_traits</span></code> rather than the
"                boost iterator traits in order to remove dependency on Boost.Iterator.
"              </div>
"            </li>
"            <li>
"              <div>
"                Iterators no longer inherit from <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">iterator</span></code>,
"                as it's deprecated (<a href="https://github.com/boostorg/unordered/pull/7">PR#7</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                More detail in the <a href="/doc/html/unordered/changes.html#unordered.changes.boost_1_67_0">library
"                change log</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/units/">Units</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix sqrt for scaled units <a href="https://svn.boost.org/trac/boost/ticket/10270">#10270</a> <a href="https://github.com/boostorg/units/issues/27">#27</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                Add constexpr support <a href="https://github.com/boostorg/units/issues/22">#22</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                minor documentation fixes
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/uuid/">Uuid</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <strong>Breaking change:</strong> random_generator
"                is no longer copyable (<a href="https://github.com/boostorg/uuid/issues/61">#61</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Optimized random_generator to use OS-provided entropy directly (<a href="https://github.com/boostorg/uuid/pull/53">PR#53</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Provide <code><span class="identifier">random_generator_mt19937</span></code>
"                for bulk UUID generation
"              </div>
"            </li>
"            <li>
"              <div>
"                Handle entropy acquisition errors instead of ignoring them
"              </div>
"            </li>
"            <li>
"              <div>
"                Support for Windows UWP (<a href="https://github.com/boostorg/uuid/issues/24">#24</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Support for CloudABI
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/variant/">Variant</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Substitute function arguments on compilers with variadic templates
"                support and do not generate substitution metafunctions using preprocessor
"                <a href="https://github.com/boostorg/variant/issues/42">#42</a>, <a href="https://github.com/boostorg/variant/issues/46">#46</a>. Many thanks to Nikita Kniazev for providing
"                an initial fix.
"              </div>
"            </li>
"            <li>
"              <div>
"                Perfect forwarding for passing visitor in apply_visitor <a href="https://github.com/boostorg/variant/issues/40">#40</a>,
"                <a href="https://svn.boost.org/trac/boost/ticket/13288">#13288</a>. Many thanks to Paweł Dac!
"              </div>
"            </li>
"            <li>
"              <div>
"                Minor fixes (including <a href="https://github.com/boostorg/variant/issues/41">#41</a>, <a href="https://github.com/boostorg/variant/issues/44">#44</a>)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_67_0.compilers_tested">
"    <h3><span class="link">Compilers Tested</span></h3>
"    <p>
"      Boost's primary test compilers are:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Linux:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.0, 4.0.1, 5.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++0x: 3.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 5.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++17: 5.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.4.7, 4.5.3, 4.6.3, 5.4.0, 7.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++0x: 4.4.7
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 7.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 5.4.0, 5.4.1, 6.3.0, 6.4.0, 7.1.0, 7.2.0, 7.3.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++17: 7.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel, C++14: 18.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          OS X:
"          <ul>
"            <li>
"              <div>
"                Clang: 9.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 9.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 9.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 9.0.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Windows:
"          <ul>
"            <li>
"              <div>
"                GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++0x: 4.6.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.7.3, 4.8.1, 4.9.3
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0, 7.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"    <p>
"      Boost's additional test compilers include:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Linux:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.0, 3.8.1, 4.0.1, 5.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++0x: 3.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 5.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++17: 5.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 4.9.2, 5.4.0, 7.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++0x: 4.4.7
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 7.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 5.4.0, 5.4.1, 6.3.0, 6.4.0, 7.1.0, 7.2.0, 7.3.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++17: 7.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel, C++14: 18.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          OS X:
"          <ul>
"            <li>
"              <div>
"                Clang: 9.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 9.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 9.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 9.0.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Windows:
"          <ul>
"            <li>
"              <div>
"                GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++0x: 4.6.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.7.3, 4.8.1, 4.9.3
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0, 7.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          FreeBSD:
"          <ul>
"            <li>
"              <div>
"                Clang: 4.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 4.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 4.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 4.0.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_67_0.acknowledgements">
"    <h3><span class="link">Acknowledgements</span></h3>
"    <p>
"      <a href="/users/people/beman_dawes.html">Beman Dawes</a>, Daniel James,
"      Vladimir Prus and Marshall Clow managed this release.
"    </p>
"  </div>
"
-hash
"3fbc80a15f875a1f5ded9163e10a4f44b80da9e0a1e1d9cba96798af2a973244
-id
"version_1_67_0
-notice_url
-notice_xml
-pub_date
-purpose_xml
"
"      New Libraries: Contract, HOF. Updated Libraries: Asio, Atomic, Beast, Container
"      Hash, Context, Core, Coroutine2, DateTime, DLL, Fiber, Filesystem, Fusion,
"      Locale, Log, Math, Multi-index Containers, Multiprecision, Optional, Phoenix,
"      PolyCollection, Python, Spirit, Stacktrace, Test, TypeIndex, TypeTraits, Unordered,
"      Units, Uuid, Utility, Variant.
"
-title_xml
"Version 1.67.0
)
(feed/history/boost_1_68_0.qbk
-description_xhtml
"
"
"
"  <div id="version_1_68_0.notes_for_windows_users">
"    <h3><span class="link">Notes for Windows
"    users</span></h3>
"    <p>
"      Boost.WinAPI has been updated to target Windows 7 by default, where possible.
"      In previous releases Windows Vista was the default.
"    </p>
"    <p>
"      Boost.WinAPI is used internally as the Windows SDK abstraction layer in a number
"      of Boost libraries, including Boost.Beast, Boost.Chrono, Boost.DateTime, Boost.Dll,
"      Boost.Log, Boost.Process, Boost.Stacktrace, Boost.System, Boost.Thread and
"      Boost.UUID. To select the target Windows version define <code><span class="identifier">BOOST_USE_WINAPI_VERSION</span></code>
"      to the numeric version similar to <code><span class="identifier">_WIN32_WINNT</span></code>
"      while compiling Boost and user's code. For example:
"    </p>
"<pre>    b2 release define=BOOST_USE_WINAPI_VERSION=0x0501 stage
"</pre>
"    <p>
"      The list of Windows API version numbers can be seen on <a href="https://msdn.microsoft.com/en-us/library/6sehtctf.aspx">this</a>
"      page.
"    </p>
"  </div>
"  <div id="version_1_68_0.new_libraries">
"    <h3><span class="link">New Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/yap/">YAP</a>:</span> An expression template library
"          for C++14 and later, from Zach Laine.
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_68_0.updated_libraries">
"    <h3><span class="link">Updated Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/beast/">Beast</a>:</span>
"          <ul>
"            <li>
"              <div>
"                This version fixes a missing executor work guard in all composed
"                operations used in the implementation. Users who are experiencing
"                crashes related to asynchronous completion handlers are encouraged
"                to upgrade.
"              </div>
"            </li>
"            <li>
"              <div>
"                For a complete list of changes, please view the official <a href="/libs/beast/doc/html/beast/release_notes.html">Release
"                Notes</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/context/">Context</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/context/issues/78">#78</a>: Linker error with <code><span class="identifier">context</span><span class="special">-</span><span class="identifier">impl</span><span class="special">=</span><span class="identifier">ucontext</span></code>:
"                multiple definition of <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">context</span><span class="special">::</span><span class="identifier">detail</span><span class="special">::</span><span class="identifier">current_rec</span></code>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/coroutine2/">Coroutine2</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/coroutine2/issues/14">#14</a>: crash while stack unwinding
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/coroutine2/issues/18">#18</a>: some guidance on why to use coroutine2
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/coroutine2/issues/20">#20</a>: failes to compile test in due to the error C2039
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/coroutine2/issues/22">#22</a>: undefined behaviour documentation
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/fiber/">Fiber</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/fiber/issues/170">#170</a>: buffered_channel::try_push has incorrect documentation
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/fiber/issues/172: WIN64">#172: WIN64</a>: 'invalid conversion from 'HANDLE' to
"                'std::thread::native_handle_type' errors for builds using mingw-w64
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://github.com/boostorg/fiber/issues/175">#175</a>: throw exception "Operation not permitted"
"              </div>
"            </li>
"            <li>
"              <div>
"                NUMA support moved to extra library (fiber-numa); enabled via property
"                numa (numa=on)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/fusion/">Fusion</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added a workaround for ambiguous call of <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">deque</span></code>
"                constructor on GCC 4.4/c++0x (<a href="https://github.com/boostorg/fusion/pull/178">PR#178</a>, <a href="https://github.com/boostorg/fusion/pull/178/commits/9de32721749b635ff3e04e690da89cf06602c122">commit</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed a bug with C-style array (<a href="https://github.com/boostorg/fusion/pull/177">PR#177</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed a <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">for_each</span></code> signature to take functor
"                by value (<a href="https://svn.boost.org/trac/boost/ticket/4427">#4427</a>).
"                <ul>
"                  <li>
"                    <div>
"                      This may break existing code with non-copyable (non-movable)
"                      functor, but the implementation wasn't correct for a long time;
"                      the documantation was correct from the first. So, please make
"                      sure your usage.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed unintentional MPL placeholder substituion bug on <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">transform</span></code> (<a href="https://svn.boost.org/trac/boost/ticket/5490">#5490</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Moved description, how to conform Fusion sequence as MPL sequence,
"                to mpl section (<a href="https://svn.boost.org/trac/boost/ticket/4029">#4029</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Added notes regarding IO facility for adapted type (<a href="https://svn.boost.org/trac/boost/ticket/6091">#6091</a>).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/geometry/">Geometry</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improvements
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/geometry/pull/469">469</a>
"                      Horizontal grid shift (nadgrids) in SRS transformations (undocumented
"                      for now due to potential interface changes).
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/geometry/pull/478">478</a>
"                      Box-Segment distance for spherical and geographic coordinate
"                      systems.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/geometry/pull/487">487</a>
"                      Missing combinations of geometries in distance for spherical
"                      and geographic cs
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/geometry/pull/489">489</a>
"                      Additional direct geodesic problem formulas for internal use
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Solved issues
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/geometry/issues/470">470</a>
"                      Assertion failure with short spherical and geographic segments.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/geometry/issues/471">471</a>
"                      Invalid envelope of spherical polygon
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/geometry/issues/498">498</a>
"                      Unexpected results with expand() and make_inverse() for spherical
"                      and geographic CS
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugfixes
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/geometry/pull/488">488</a>
"                      Handle non-true-references in closing_iterator and ever_circling_range_iterator
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/geometry/pull/495">495</a>
"                      VxWorks 7 cross-compilation issue.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/gil/">GIL</a>:</span>
"          <ul>
"            <li>
"              <div>
"                The I/O extensions have been entirely rewritten.
"              </div>
"            </li>
"            <li>
"              <div>
"                The library now requires a C++11-compliant compiler.
"              </div>
"            </li>
"            <li>
"              <div>
"                Documentation has been reformatted and updated.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/graph/">Graph</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Conditionally replace deprecated/removed C++98 <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">bind1st</span></code>
"                by <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">bind</span></code>, <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">auto_ptr</span></code>
"                by <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">unique_ptr</span></code>, and <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">random_shuffle</span></code>
"                by <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">shuffle</span></code>. (<a href="https://github.com/boostorg/graph/pull/89">PR#89</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix compiler error with release builds on VS2015 (<a href="https://github.com/boostorg/graph/pull/84">PR#84</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix the Stanford GraphBase examples (<a href="https://github.com/boostorg/graph/pull/87">PR#87</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix friend declarations for iterator_core_access (<a href="https://github.com/boostorg/graph/pull/103">PR#103</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Add missing <code><span class="special">&lt;</span><span class="identifier">boost</span><span class="special">/</span><span class="identifier">iterator</span><span class="special">.</span><span class="identifier">hpp</span><span class="special">&gt;</span></code> include (<a href="https://github.com/boostorg/graph/pull/104">PR#104</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Avoid an unused variable warning (<a href="https://github.com/boostorg/graph/pull/90">PR#90</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix some typos in documentation (<a href="https://github.com/boostorg/graph/pull/88">PR#88</a>, <a href="https://github.com/boostorg/graph/pull/98">PR#98</a>, <a href="https://github.com/boostorg/graph/pull/102">PR#102</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix some issues in tests and examples (<a href="https://github.com/boostorg/graph/pull/85">PR#85</a>, <a href="https://github.com/boostorg/graph/pull/105">PR#105</a>)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/lexical_cast/">Lexical Cast</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixes for clang-tidy warnings <a href="https://svn.boost.org/trac/boost/ticket/12092">#12092</a>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/log/">Log</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improved support for VxWorks. (<a href="https://github.com/boostorg/log/pull/39">PR#39</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Save and restore <code><span class="identifier">ebx</span></code>
"                register on x86 PIE targets in the <code><span class="identifier">dump</span></code>
"                stream manipulator implementation.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/math/">Math</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Support for arbitrary precision complex valued quadrature and hence
"                contour integration
"              </div>
"            </li>
"            <li>
"              <div>
"                Improve performance of polynomial addition
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/math/index.html">Math</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Continue to improve numerical integration routines, and in particular
"                add support for contour integrals.
"              </div>
"            </li>
"            <li>
"              <div>
"                Improve accuracy of erfc function's rational approximations.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/multi_index/index.html">Multi-index Containers</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Containers of moveable but non-copyable elements can now be serialized
"                (ticket <a href="https://svn.boost.org/trac/boost/ticket/13478">#13478</a>). Thanks to Sébastien Paris for the report.
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">multi_index_container</span></code>'s
"                default constructor is no longer <code><span class="keyword">explicit</span></code>
"                (ticket <a href="https://svn.boost.org/trac/boost/ticket/13518">#13518</a>).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/multiprecision">Multiprecision</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Support for multiprecision complex numbers
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/multiprecision/index.html">Multiprecision</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Support added for complex multiprecision numbers.
"              </div>
"            </li>
"            <li>
"              <div>
"                Changed conversion to unsigned integer types to be truncating to
"                match standard defined behaviour.
"              </div>
"            </li>
"            <li>
"              <div>
"                Correct bug in MPFR string formatting.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix undefined behaviour in cpp_dec_float conversion from long long.
"              </div>
"            </li>
"            <li>
"              <div>
"                Add support for Eigen interoperability.
"              </div>
"            </li>
"            <li>
"              <div>
"                float128.hpp: Fix Intel on Windows build.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix type used in temporaries when expanding expression templates
"                containing mixed expressions.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix infinite loop in gmp_float to fixed-point string conversion.
"              </div>
"            </li>
"            <li>
"              <div>
"                Update the expression templates to issue static_asserts with better
"                error messages when you try and do something unsupported.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix bug in cpp_int where incrementing to zero doesn't set the sign
"                correctly.
"              </div>
"            </li>
"            <li>
"              <div>
"                Remove erroneous use of std::move, and rely on NVRO instead.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix up support for changes to MPIR-3.0.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix various conversion errors in cpp_bin_float when the exponent
"                type is a <code><span class="keyword">long</span> <span class="keyword">long</span></code>,
"                or else we're converting to an integer that is wider than we are.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix compatibility issue with GCC-8 caused by the introduction of
"                <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">byte</span></code>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/optional/">Optional</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added member function <code><span class="identifier">has_value</span><span class="special">()</span></code> for compatibility with <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">optional</span></code> (<a href="https://github.com/boostorg/optional/issues/52">issue
"                #52</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Added member function <code><span class="identifier">map</span><span class="special">()</span></code> for transforming <code><span class="identifier">optional</span><span class="special">&lt;</span><span class="identifier">T</span><span class="special">&gt;</span></code>
"                into <code><span class="identifier">optional</span><span class="special">&lt;</span><span class="identifier">U</span><span class="special">&gt;</span></code>
"                using a function of type <code><span class="identifier">T</span>
"                <span class="special">-&gt;</span> <span class="identifier">U</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added member function <code><span class="identifier">flat_map</span><span class="special">()</span></code> for transforming <code><span class="identifier">optional</span><span class="special">&lt;</span><span class="identifier">T</span><span class="special">&gt;</span></code>
"                into <code><span class="identifier">optional</span><span class="special">&lt;</span><span class="identifier">U</span><span class="special">&gt;</span></code>
"                using a function of type <code><span class="identifier">T</span>
"                <span class="special">-&gt;</span> <span class="identifier">optonal</span><span class="special">&lt;</span><span class="identifier">U</span><span class="special">&gt;</span></code>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/predef/">Predef</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Add support for __ARM_ARCH macro. (from Tim Blechmann)
"              </div>
"            </li>
"            <li>
"              <div>
"                Add detection for PTX architecture. (from Benjamin Worpitz)
"              </div>
"            </li>
"            <li>
"              <div>
"                Add nvcc compiler detection. (from Benjamin Worpitz)
"              </div>
"            </li>
"            <li>
"              <div>
"                Add support for detecting CUDA. (from Benjamin Worpitz)
"              </div>
"            </li>
"            <li>
"              <div>
"                Remove reference to obsolete BOOST_ARCH_AMD64. (from Peter Kolbus)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/program_options/">Program Options</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Support for multiple long names for an option, thanks to Eyal Rozenberg
"                (<a href="https://github.com/boostorg/program_options/pull/53">PR#53</a>)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/python/">Python</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Bug fixes to correct autolink support (Windows) (<a href="https://github.com/boostorg/python/issues/193">#193</a>)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/rational/">Rational</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed undefined behavior in normalize() (<a href="https://github.com/boostorg/rational/pull/19">PR#19</a>).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/system/">System</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Add constexpr to error_code and error_condition members under C++14
"                and above (<a href="https://github.com/boostorg/system/pull/23">PR#23</a>).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/signals/">Signals</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <strong>Removal Notice:</strong> Boost.Signals will
"                be removed in the next release. Boost.Signals was deprecated in version
"                1.54.0. Transition to Boost.Signals2 now to avoid disruption.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/stacktrace/">Stacktrace</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed compilation on Solaris and other platforms that do qualify
"                address as const in <code><span class="identifier">dladdr</span></code>
"                function (github 54).
"              </div>
"            </li>
"            <li>
"              <div>
"                Dropped dependency on Boost.LexicalCast.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/test/">Test</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Boost.test v3.8 see the <a href="libs/test/doc/html/boost_test/change_log.html">Changes
"                log</a> for more details.
"              </div>
"            </li>
"            <li>
"              <div>
"                Breaking changes
"                <ul>
"                  <li>
"                    <div>
"                      The <code><span class="identifier">master_test_suite_t</span></code>
"                      object is no more copyable
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                New feature:
"                <ul>
"                  <li>
"                    <div>
"                      Dataset test case can now use command line parameters
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bug fixes and pull requests:
"                <ul>
"                  <li>
"                    <div>
"                      Trac tickets: <a href="https://svn.boost.org/trac/boost/ticket/12095">#12095</a>, <a href="https://svn.boost.org/trac/boost/ticket/12953">#12953</a>, <a href="https://svn.boost.org/trac/boost/ticket/13504">#13504</a>, <a href="https://svn.boost.org/trac/boost/ticket/13525">#13525</a>,
"                      <a href="https://svn.boost.org/trac/boost/ticket/13528">#13528</a>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Pull requests: <a href="https://github.com/boostorg/test/issues/143">#143</a>, <a href="https://github.com/boostorg/test/issues/145">#145</a>
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/type_index/">TypeIndex</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Dropped dependency on Boost.MPL.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/uuid/">Uuid</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <strong>Breaking change:</strong> sha1 detail namespace
"                header redirection for backwards compatibility was removed (<a href="https://github.com/boostorg/uuid/pull/69">PR#69</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Added support for std::hash (<a href="https://github.com/boostorg/uuid/pull/67">PR#67</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Added support for move semantics on random generators (<a href="https://github.com/boostorg/uuid/pull/74">PR#74</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Properly handle EINTR when acquiring entropy (<a href="https://github.com/boostorg/uuid/pull/74">PR#74</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Use getrandom(2) instead of getentropy(3) on linux (<a href="https://github.com/boostorg/uuid/pull/75">PR#75</a>).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_68_0.compilers_tested">
"    <h3><span class="link">Compilers Tested</span></h3>
"    <p>
"      Boost's primary test compilers are:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Linux:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.0, 4.0.1, 6.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++0x: 3.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 6.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.2,
"                6.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++17: 5.0.2, 6.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.4.7, 4.5.3, 4.6.3, 5.4.0, 8.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++0x: 4.4.7
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 8.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 5.4.0, 5.5.0, 6.4.0, 7.1.0, 7.3.0, 8.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++17: 7.3.0, 8.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel, C++14: 18.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          OS X:
"          <ul>
"            <li>
"              <div>
"                Clang: 9.0.0, 9.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 9.0.0, 9.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 9.0.0, 9.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++17: 9.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 9.0.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Windows:
"          <ul>
"            <li>
"              <div>
"                GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++0x: 4.6.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.7.3, 4.8.1, 4.9.3
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++17: 7.1.0, 7.2.0, 7.3.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          FreeBSD:
"          <ul>
"            <li>
"              <div>
"                Clang: 4.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 4.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 4.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 4.0.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"    <p>
"      Boost's additional test compilers include:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Linux:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.0, 3.8.1, 3.9.1, 4.0.1, 5.0.2, 6.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++0x: 3.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 6.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 4.0.1, 5.0.2,
"                6.0.1, 7.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++17: 5.0.2, 6.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.4.7, 4.5.3, 4.6.3, 4.9.4, 5.4.0, 5.5.0, 8.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++0x: 4.4.7
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0, 8.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 5.4.0, 5.5.0, 6.3.0, 6.4.0, 7.1.0, 7.3.0, 8.0.1, 8.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++17: 7.3.0, 8.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel, C++14: 18.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          OS X:
"          <ul>
"            <li>
"              <div>
"                Clang: 9.0.0, 9.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 9.0.0, 9.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 9.0.0, 9.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++17: 9.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 9.0.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Windows:
"          <ul>
"            <li>
"              <div>
"                GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++0x: 4.6.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.7.3, 4.8.1, 4.9.3
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++17: 7.1.0, 7.2.0, 7.3.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          FreeBSD:
"          <ul>
"            <li>
"              <div>
"                Clang: 4.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 4.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 4.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 4.0.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_68_0.acknowledgements">
"    <h3><span class="link">Acknowledgements</span></h3>
"    <p>
"      <em>TODO</em>
"    </p>
"  </div>
"
-hash
"4bc11977db4517d7c4d6d2796754e625c6c6bbe54d07badb3d23344790ee5495
-id
"version_1_68_0
-notice_url
-notice_xml
-pub_date
-purpose_xml
"
"      New Libraries: Updated Libraries:
"
-title_xml
"Version 1.68.0
)
(feed/history/boost_1_69_0.qbk
-description_xhtml
"
"
"
"  <div id="version_1_69_0.notes_for_non_windows_users">
"    <h3><span class="link">Notes for non-Windows
"    users</span></h3>
"    <p>
"      Boost build system now supports visibilities and builds shared libraries with
"      hidden visibility by default. As a result Boost shared libraries become smaller,
"      load faster and have less chances to get a symbol collision.
"    </p>
"    <p>
"      See <a href="/build/manual/develop/index.html#bbv2.builtin.features.visibility">Boost.Build
"      visibility and local-visibility</a> for more info.
"    </p>
"    <p>
"      To disable that feature use <code><span class="special">./</span><span class="identifier">b2</span> <span class="identifier">visibility</span><span class="special">=</span><span class="identifier">global</span></code> like
"      command during build.
"    </p>
"  </div>
"  <div id="version_1_69_0.new_libraries">
"    <h3><span class="link">New Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <em>TODO</em>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_69_0.updated_libraries">
"    <h3><span class="link">Updated Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/any/">Any</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed issue with visibility. Now <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">any</span></code>
"                variables constructed in one shared library with hidden visibility
"                could be used and destroyed in other shared library with hidden visibility.
"              </div>
"            </li>
"            <li>
"              <div>
"                Maintenance: dropped some dependencies on other Boost libraries,
"                fixes for docs.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/beast/">Beast</a>:</span>
"          <ul>
"            <li>
"              <div>
"                This version fixes some issues in the examples, and provides a new
"                experimental socket which supports built-in timeouts on asynchronous
"                operations.
"              </div>
"            </li>
"            <li>
"              <div>
"                For a complete list of changes, please view the official <a href="/libs/beast/doc/html/beast/release_notes.html">Release
"                Notes</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/circular_buffer/">CircularBuffer</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Use the empty base optimization for storing allocators that are empty
"                and not final (Glen Fernandes).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/core/">Core</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Implemented <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">empty_value</span></code>,
"                for library authors to conveniently leverage the Empty Base Optimization
"                to store objects of potentially empty types (Glen Fernandes). This
"                facility is now used in Boost.Beast, Boost.CircularBuffer, Boost.MultiArray,
"                and more.
"              </div>
"            </li>
"            <li>
"              <div>
"                Implemented <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">quick_exit</span></code>
"                to provide the C++11 standard library facility <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">quick_exit</span></code>
"                functionality (Peter Dimov).
"              </div>
"            </li>
"            <li>
"              <div>
"                Reduced the number of statics in Lightweight Test, and employ lighter
"                abort behavior for MSVC compilers upon failure to call <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">report_errors</span></code> (Glen Fernandes).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/dll/">DLL</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Resolved link issues with the smart library <a href="https://github.com/boostorg/dll/issues/20">#20</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Maintenance: fixes for docs and tests.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/lexical_cast/">LexicalCast</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed sign-conversion warnings <a href="https://svn.boost.org/trac/boost/ticket/8991">#8991</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Maintenance: dropped some dependencies on other Boost libraries,
"                fixed build system warnings.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/mp11/">Mp11</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Implemented the <code><span class="identifier">mp_starts_with</span></code>
"                facility (Glen Fernandes).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/multi_array/">MultiArray</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improve C++11 allocator model support including: Support for C++11
"                minimal allocators, support for stateful allocators, using the allocator
"                for construction and destruction of the value type, and using the
"                empty base optimization for storing empty or stateless allocators
"                (Glen Fernandes).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/stacktrace/">Stacktrace</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <code><span class="identifier">libbacktrace</span></code> usage
"                was significantly improved. <code><span class="identifier">BOOST_STACKTRACE_USE_BACKTRACE</span></code>
"                or <code><span class="identifier">boost_stacktrace_backtrace</span></code>
"                users are encouraged to update:
"                <ul>
"                  <li>
"                    <div>
"                      Memory consumprion dropped down.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Stack capturing became faster by an order of magnitude.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <code><span class="identifier">syminfo</span></code> fallback
"                      enabled to provide information for visible symbols even without
"                      debug information (thanks to github user driesdeschout!)<a href="https://github.com/boostorg/stacktrace/issues/60">#60</a>,
"                      <a href="https://github.com/boostorg/stacktrace/issues/61">#61</a>.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Exact location of the <code><span class="identifier">backtrace</span><span class="special">.</span><span class="identifier">h</span></code>
"                      header now can be specified via <code><span class="identifier">BOOST_STACKTRACE_BACKTRACE_INCLUDE_FILE</span></code>,
"                      to allow <code><span class="identifier">backtrace</span><span class="special">.</span><span class="identifier">h</span></code>
"                      header usage on platforms and compilers where that header is
"                      unreachable otherwise (for example Ubuntu Xenial + Clang) <a href="https://github.com/boostorg/stacktrace/issues/59">#59</a>.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Optimized stack capturing if <code><span class="identifier">max_depth</span></code>
"                is set (thanks to Jan Eisenhauer for the PR!) <a href="https://github.com/boostorg/stacktrace/issues/67">#67</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added <code><span class="identifier">to_string</span><span class="special">(</span><span class="keyword">const</span> <span class="identifier">stacktrace</span><span class="special">&amp;</span> <span class="special">)</span></code>
"                functions for fast conversion of stacktraces to <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">string</span></code>
"                <a href="https://github.com/boostorg/stacktrace/issues/57">#57</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Maintenance: updated docs <a href="https://github.com/boostorg/stacktrace/issues/62">#62</a>, tests updated.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/type_index/">TypeIndex</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix the regression and speed up parsing of the <code><span class="identifier">boost</span><span class="special">/</span><span class="identifier">type_traits</span><span class="special">.</span><span class="identifier">hpp</span></code>
"                header by 30% (thanks to Nikita Kniazev for the PR!) <a href="https://github.com/boostorg/type_index/issues/21">#21</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/utility/">Utility</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added support for non-inheritable empty types to <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">compressed_pair</span></code>
"                by avoiding the empty base optimization for types which are declared
"                as final (Glen Fernandes).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/variant/">Variant</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed issue with visibility. Now <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">bad_visit</span></code>
"                exception could cross the boundaries of shared library with hidden
"                visibility and could be catched in other shared library with hidden
"                visibility.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <em>TODO</em>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_69_0.compilers_tested">
"    <h3><span class="link">Compilers Tested</span></h3>
"    <p>
"      Boost's primary test compilers are:
"    </p>
"    <ul>
"      <li>
"        <div>
"          <em>TODO</em>
"        </div>
"      </li>
"    </ul>
"    <p>
"      Boost's additional test compilers include:
"    </p>
"    <ul>
"      <li>
"        <div>
"          <em>TODO</em>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_69_0.acknowledgements">
"    <h3><span class="link">Acknowledgements</span></h3>
"    <p>
"      <em>TODO</em>
"    </p>
"  </div>
"
-hash
"f919cfa1e21a4d453887150a746bbdf3c345831e21889cf4a59452df390b209f
-id
"version_1_69_0
-notice_url
-notice_xml
-pub_date
-purpose_xml
"
"      New Libraries: Updated Libraries:
"
-title_xml
"Version 1.69.0
)
(feed/news/result_of_1_52_0.qbk
-description_xhtml
"
"
"
"  <p>
"    Starting with Boost 1.52.0, the <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">result_of</span></code>
"    component defaults to an implementation that uses the C++11 <code><span class="keyword">decltype</span></code>
"    keyword to deduce the return type of callables on compilers with strong <code><span class="keyword">decltype</span></code> support. As <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">result_of</span></code>
"    is a key piece of library infrastructure, we at Boost have found this change
"    to be moderately disruptive. You should be aware of the issue when making the
"    decision to upgrade from an older version of Boost.
"  </p>
"  <div id="a_special_note_for_boost_1_52_0_and_higher.why_the_change_was_made">
"    <h3><span class="link">Why
"    the Change Was Made</span></h3>
"    <p>
"      <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">result_of</span></code> has been changed to use <code><span class="keyword">decltype</span></code> to make it more consistent with <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">result_of</span></code>
"      (when sufficient compiler support is available). Also, the use of <code><span class="keyword">decltype</span></code> should help to improve compile times
"      and increase the accuracy of the type computation.
"    </p>
"  </div>
"  <div id="a_special_note_for_boost_1_52_0_and_higher.who_is_affected">
"    <h3><span class="link">Who
"    is Affected</span></h3>
"    <p>
"      If you use a compiler with sufficiently bug-free <code><span class="keyword">decltype</span></code>
"      support (including <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3276.pdf">N3276</a>),
"      then you will get the new behavior. At the time of writing (Nov 4, 2012), the
"      only compiler in that category is Clang 3.1, but as other compilers improve,
"      this will change.
"    </p>
"  </div>
"  <div id="a_special_note_for_boost_1_52_0_and_higher.what_problems_can_the_change_cause_">
"    <h3><span class="link">What
"    Problems Can the Change Cause?</span></h3>
"    <p>
"      The use of <code><span class="keyword">decltype</span></code> in <code><span class="identifier">result_of</span></code> can result in a different type
"      being computed than with the now-obsolete TR1 <code><span class="identifier">result_of</span></code>
"      protocol. This will often be the case for incorrectly written TR1-style function
"      objects that misreport their result types. This is unfortunately too common.
"      But it can even happen for some correctly written function objects.
"    </p>
"  </div>
"  <div id="a_special_note_for_boost_1_52_0_and_higher.where_can_i_learn_more_">
"    <h3><span class="link">Where
"    Can I Learn More?</span></h3>
"    <p>
"      Please see the documentation for <a href="https://www.boost.org/doc/libs/1_52_0/libs/utility/utility.htm#result_of"><code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">result_of</span></code></a>
"      to understand the differences between TR1 <code><span class="identifier">result_of</span></code>
"      and <code><span class="keyword">decltype</span></code> <code><span class="identifier">result_of</span></code>,
"      and to find out how you can write your code to accommodate both.
"    </p>
"  </div>
"
-hash
"72c583d54dba6d1ce31a888cc946a12b31b14397e294fe01930b313c00be1990
-id
"a_special_note_for_boost_1_52_0_and_higher
-notice_url
-notice_xml
-pub_date
@Tue, 06 Nov 2012 09:27:25 +0000
-purpose_xml
"
"      Important information for users of boost::result_of.
"
-title_xml
"A Special Note for Boost 1.52.0 and Higher
)
